{"version":3,"sources":["images/success.png","components/OrderBoardComponent/style.module.css","components/OrderInfoComponent/style.module.css","serviceWorker.ts","utils/enum.ts","services/BurgerConstructor/reducers.ts","utils/localize.ts","utils/apiFunctions.ts","utils/const.ts","utils/methods.ts","services/BurgerIngredients/actions.ts","services/BurgerIngredients/reducers.ts","services/IngredientsDetails/reducers.ts","services/OrderDetails/actions.ts","services/OrderDetails/reducers.ts","services/Authorization/actions.ts","services/Authorization/reducers.ts","services/PasswordOperations/actions.ts","services/PasswordOperations/reducers.ts","services/UserData/actions.ts","services/UserData/reducers.ts","services/Registration/actions.ts","services/Registration/reducers.ts","services/CommonOrders/actions.ts","services/CommonOrders/reducers.ts","services/OrderInfo/actions.ts","services/OrderInfo/reducers.ts","services/PersonalOrders/actions.ts","services/PersonalOrders/reducers.ts","services/rootReducer.ts","services/BurgerConstructor/actions.ts","services/IngredientsDetails/actions.ts","services/socketMiddleware.ts","services/mainStore.ts","utils/helpers.ts","components/HeaderComponent/Header.tsx","utils/routes.ts","pages/PasswordForgotPage/PasswordForgotPage.tsx","components/IngredientDetailsComponent/IngredientDetails.tsx","pages/IngredientsPage/IngredientsPage.tsx","pages/LoginPage/LoginPage.tsx","pages/LogoutRedirectPage/LogoutRedirectPage.tsx","components/ModalOverlayComponent/ModalOverlay.tsx","components/ModalComponent/Modal.tsx","components/OrderDetailsComponent/OrderDetails.tsx","components/BurgerConstructorItemComponent/BurgerConstructorItem.tsx","components/BurgerConstructorComponent/BurgerConstructor.tsx","components/BurgerCardComponent/BurgerCard.tsx","components/BurgerIngredientsComponent/BurgerIngredients.tsx","pages/BasePage/BasePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","pages/ProfilePage/ProfileEditPage/ProfileEditPage.tsx","pages/ProfilePage/ProfileMainPage/ProfileMainPage.tsx","pages/RegistratePage/RegistratePage.tsx","pages/PasswordResetPage/PasswordResetPage.tsx","components/ProtectedRoutesComponent/ProtectedRoutes.tsx","components/OrderInfoComponent/OrderInfo.tsx","components/OrderItemComponent/OrderItem.tsx","components/OrderListComponent/OrderList.tsx","components/OrderBoardComponent/OrderBoard.tsx","pages/FeedPage/FeedPage.tsx","pages/OrderInfoPage/OrderInfoPage.tsx","pages/ProfilePage/ProfileOrderPage/ProfileOrderPage.tsx","components/RoutesComponent/Routes.tsx","components/MainComponent/Main.tsx","index.tsx","components/HeaderComponent/style.module.css","components/OrderItemComponent/style.module.css","components/BurgerIngredientsComponent/style.module.css","components/BurgerConstructorComponent/style.module.css","components/IngredientDetailsComponent/style.module.css","components/OrderDetailsComponent/style.module.css","utils/commonPageStyles.module.css","components/ModalComponent/style.module.css","components/BurgerCardComponent/style.module.css","components/OrderListComponent/style.module.css","pages/BasePage/style.module.css","components/ModalOverlayComponent/style.module.css","components/BurgerConstructorItemComponent/style.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Ingredients","KeyBoard","Methods","OrderStatus","BunImage","constructorState","items","bun","undefined","checkResponse","result","ok","json","message","localize","status","Error","request","url","options","fetch","then","INGREDIENTS_DATA_API_URL","resetPassword","form","method","body","JSON","stringify","refreshToken","headers","token","localStorage","getItem","ingredientsData","dispatch","type","res","data","catch","err","ingredientsDataState","isLoad","isError","ingredientModalState","isOpen","createNewOrder","ingredients","ingredientsId","map","ingredient","_id","Authorization","newOrderNumber","order","number","newOrderState","loginAction","user","setItem","accessToken","split","logoutAction","removeItem","error","initialState","requestAuthorization","successAuthorization","errorAuthorization","requestToken","successToken","errorToken","isLogged","forgotPasswordAction","forgotPassword","requestPassword","errorPassword","successPassword","isReadyForChange","getUserDataAction","patchUserDataAction","requestUserData","errorUserData","successUserData","name","email","registrationAction","requestRegistration","successRegistration","errorRegistration","webSocketCommonOrdersActions","onStart","onOpen","onSuccess","onClosed","onEnd","onError","onMessage","isConnected","getOrderInfoAction","getOrder","orders","requestOrderInfo","errorOrderInfo","webSocketPersonalOrdersActions","rootReducer","combineReducers","burgerConstructor","state","action","item","newState","to","from","filter","index","burgerIngredients","ingredientsDetails","orderDetails","authReducer","passwordReducer","userReducer","registReducer","commonOrderReducer","orderInfoReducer","personalOrderReducer","socketMiddleware","webSocketsActions","store","socket","timer","connected","next","addToken","WebSocket","clearTimeout","onopen","onclose","event","code","close","setTimeout","onmessage","parse","success","restParsedData","onerror","configureStore","reducer","middleware","getDefaultMiddleware","concat","devTools","process","useDispatch","dispatchRedux","useSelector","selectorRedux","Header","className","style","header","block","block_box","block_item","link","block_box_logo","ForgotPasswordPage","navigate","useNavigate","useState","setEmail","useEffect","replace","alert","commonStyle","pages_form_container","pages_container_inner","onSubmit","e","preventDefault","pages_form_h1","extraClass","pages_form_p_email_password","placeholder","value","onChange","el","target","pages_form_button","htmlType","page_link","IngredientDetails","params","useParams","find","d","id","pathname","modal_content","src","image_large","alt","image","modal_content_title","modal_content_body","modal_content_body_item","calories","proteins","fat","carbohydrates","IngredientPage","LoginFormPage","useLocation","password","setPassword","LogoutPage","ModalOverlay","onClose","isBlackBackground","special_overlay","overlay","onClick","modal","document","getElementById","Modal","info","children","isOrder","escapeClose","useCallback","key","addEventListener","removeEventListener","ReactDOM","createPortal","modal_container","modal_box","modal_header","close_btn","OrderDetails","identificator_order","identificator_order_text","success_icon","order_waiting","BurgerConstructorMainIngredient","onDelete","ref","useRef","useDrag","Drag","useDrop","accept","drop","Drop","main_item_container","text","price","thumbnail","ingredient_item","handleClose","BurgerConstructor","dropTopBun","dropBottomBun","dropTargetIngredient","deleteItem","sum","useMemo","section","burger_constructor","isLocked","items_scroll","length","uuid","no_item","no_item_text","send_box","box","size","disabled","Card","numberOfItems","dragRef","background","ingredients_icon_box","ingredients_name_box","count","ingredients_number","BurgerIngredients","activeTab","setActiveTab","bunTab","sauceTab","mainTab","allBuns","sauces","mains","counterIngredients","counterBuns","ingredients_container","titles","tabs_container","active","current","scrollIntoView","behavior","scrollOnBunTabClick","scrollOnSauceTabClick","scrollOnMainTabClick","ingredients_scroll","onScroll","scrollTop","ingredients_box","sauce","main","MainPage","OthersPage","ProfileEditPage","setName","submitForm","pages_form_container_proile_edit","icon","isIcon","pages_form_button_save","ProfileMainPage","pages_form_container_proile","pages_form_container_profile_inner","pages_form_container_profile_tabs","pages_form_container_profile_tabs_ul","end","isActive","pages_form_container_profile_tabs_text","RegistrationPage","ResetPasswordPage","setCode","resetPasswordAction","ProtectedRoutes","element","OrderInfo","group","push","reduce","currentSum","order_info_container","order_info_number","order_info_name","order_info_status","order_info_compound","order_info_body","order_info_body_li","order_info_body_row","order_info_body_image_name","order_info_body_image","image_mobile","order_info_body_name","order_info_body_item_price","order_info_body_item","order_info_footer","date","Date","createdAt","OrderItem","personal","visibleItems","slice","statusColor","order_item_status_done","order_item_status_default","order_item_link","order_item_header","order_item_title","order_item_status","order_item_body","order_item_body_image","i","marginRight","order_item_body_image_li","opacity","order_item_body_image_main","MAX_ITEMS_VALUE","order_item_body_invissible_count","order_item_price","OrdersList","order_list_main_personal","order_list_main","elem","OrdersStatus","completedOrders","inProgressOrders","completedOrdersStart","completedOrdersEnd","inProgressOrdersStart","inProgressOrdersEnd","orders_board","orders_board_number","orders_board_ready_color","orders_board_ul","orders_board_li","orders_board_ready_link","orders_board_in_progress","orders_board_text","total","totalToday","FeedPage","pages_feed","pages_orders_container_p","pages_content","pages_left_block","pages_feed_top_margin","OrderList","pages_right_block","OrderBoard","OrderInfoPage","pages_orders_info_main","ProfileOrderPage","messages","sort","one","other","pages_orders_container","RoutesComponent","stateLocation","handleCloseModalDetail","path","App","Routes","createRoot","render","StrictMode","mainStore","DndProvider","backend","HTML5Backend","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,qC,+ECC3CD,EAAOC,QAAU,CAAC,aAAe,4BAA4B,kBAAoB,iCAAiC,gBAAkB,+BAA+B,gBAAkB,+BAA+B,oBAAsB,mCAAmC,yBAA2B,wCAAwC,wBAA0B,uCAAuC,yBAA2B,0C,mBCA5aD,EAAOC,QAAU,CAAC,qBAAuB,oCAAoC,kBAAoB,iCAAiC,gBAAkB,+BAA+B,kBAAoB,iCAAiC,oBAAsB,mCAAmC,gBAAkB,+BAA+B,mBAAqB,kCAAkC,oBAAsB,mCAAmC,2BAA6B,0CAA0C,sBAAwB,qCAAqC,qBAAuB,oCAAoC,2BAA6B,0CAA0C,qBAAuB,oCAAoC,kBAAoB,mC,8GCWnwBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oCClBOC,EACN,MADMA,EAEJ,QAFIA,EAGL,OAGKC,EACH,SADGA,EAEF,UAGEC,EACL,OADKA,EAEN,MAFMA,EAGJ,QAGIC,EACL,OADKA,EAEF,UAFEA,EAGF,UAGEC,EACJ,mDADIA,EAEJ,mDCVHC,EAAsC,CAC1CC,MAAO,GACPC,SAAKC,G,wBCjBQ,EACH,kFADG,EAEC,wFAFD,EAGP,iCAHO,EAIL,iCAJK,EAKA,qEALA,EAMA,qEANA,EAOF,kFAPE,EAQO,0GARP,EAUI,kFAVJ,EAWO,sHAXP,EAYG,0IAZH,EAaC,iPAbD,EAcN,8FAdM,EAeF,uEAfE,EAgBP,yCAhBO,EAiBH,mCAjBG,EAkBE,4DAlBF,EAmBG,8EAnBH,EAoBG,gHApBH,EAqBK,+GArBL,EAsBJ,gIAtBI,EAuBK,wHAvBL,EAwBP,yDAxBO,GAyBL,uCAzBK,GA0BJ,iCA1BI,GA2BH,2BA3BG,GA4BP,iCA5BO,GA6BP,qBA7BO,GA8BE,wFA9BF,GA+BJ,6CA/BI,GAgCC,qEAhCD,GAiCO,4HAjCP,GAkCK,iHAlCL,GAmCD,oDAnCC,GAoCG,kHApCH,GAqCK,4HArCL,GAsCO,gGAtCP,GAuCC,6ZAvCD,GAwCW,uTAxCX,GAyCI,yIAzCJ,GA0CM,mNA1CN,GA2CO,oNA3CP,GA4CH,kGA5CG,GA6CE,8MA7CF,GA8CL,iJA9CK,GA+CJ,mDA/CI,GAgDN,wCAhDM,GAiDD,+CAjDC,GAkDA,kHAlDA,GAmDK,yHAnDL,GAoDP,mDApDO,GAqDJ,uCArDI,GAsDJ,yDAtDI,GAuDH,wCAvDG,GAwDP,4ECtDKC,GAAgB,SAACC,GAC5B,GAAKA,EAAOC,GAGL,OAAOD,EAAOE,OAFnB,IAAMC,EAAO,UAAMC,EAAc,YAAIJ,EAAOK,QAC5C,MAAM,IAAIC,MAAMH,IAIPI,GAAU,SAACC,EAAaC,GACnC,OAAOC,MAAMF,EAAKC,GAASE,KAAKZ,KCVrBa,GAA2B,wCCuE3BC,GAAa,uCAAG,WAAMC,GAAoB,0FAC9CP,GAAQ,GAAD,OAAIK,GAAwB,yBACxC,CACEG,OAAQvB,EACRwB,KAAMC,KAAKC,UAAU,eAAKJ,OAE7B,2CACF,gBAPyB,sCASbK,GAAe,WAC1B,OAAOZ,GAAQ,GAAD,OAAIK,GAAwB,eAC1C,CACEG,OAAQvB,EACR4B,QAAS,CACP,eAAgB,kCAElBJ,KAAMC,KAAKC,UAAU,CACnBG,MAAOC,aAAaC,QAAQ,qBCpErBC,GAAkB,WAC7B,OAAO,SAACC,GACNA,EAAS,CACPC,KApBkC,6BDG/BnB,GAAQ,GAAD,OAAIK,GAAwB,iBCmBfD,MAAK,SAAAgB,GAC5BF,EAAS,CACPC,KAvBgC,2BAwBhCE,KAAMD,EAAIC,UAEXC,OAAM,SAAAC,GACPL,EAAS,CACPC,KA3B8B,gCCFhCK,GAAuB,CAC3BC,QAAQ,EACRC,SAAS,EACTL,KAAM,ICHFM,GAAuB,CAC3BC,QAAQ,GC2BGC,GAAiB,SAACC,GAC7B,OAAO,SAACZ,GJnBqB,IAACa,EIoB5Bb,EAAS,CACPC,KA9BuB,mBJSGY,EIuBZD,EAAYE,KAAI,SAACC,GAAsB,OAAKA,EAAWC,OJtBlElC,GAAQ,GAAD,OAAIK,GAAwB,WACxC,CACEG,OAAQvB,EACR4B,QAAS,CACP,eAAgB,iCAChBsB,cAAe,UAAYpB,aAAaC,QAAQ,gBAElDP,KAAMC,KAAKC,UAAU,CAAEmB,YAAaC,OIeuC3B,MAAK,SAAAiB,GAChFH,EAAS,CACPC,KAjCqB,gBAkCrBiB,eAAgBf,EAAKgB,MAAMC,YAG9BhB,OAAM,WACLJ,EAAS,CACPC,KAtCmB,qBCGrBoB,GAAgB,CACpBd,QAAQ,EACRC,SAAS,EACTE,QAAQ,EACRQ,eAAgB,MCiDLI,GAAc,SAACjC,GAC1B,OAAO,SAACW,GNzBe,IAACuB,EM0BtBvB,EAAS,CAAEC,KA7Dc,mBNmCHsB,EM2BZlC,EN1BLP,GAAQ,GAAD,OAAIK,GAAwB,eACxC,CACEG,OAAQvB,EACR4B,QAAS,CACP,eAAgB,kCAElBJ,KAAMC,KAAKC,UAAU,eAAK8B,OMoBZrC,MAAK,SAAAiB,GACnBN,aAAa2B,QACX,cACArB,EAAKsB,YAAYC,MAAM,WAAW,IAEpC7B,aAAa2B,QACX,eACArB,EAAKT,cAEPM,EAAS,CACPC,KAvEqB,gBAwErBsB,KAAMpB,EAAKoB,UAEZnB,OAAM,SAAAC,GACPL,EAAS,CACPC,KA3EmB,cA4EnBvB,QAAS2B,EAAI3B,eAMRiD,GAAe,WAC1B,OAAO,SAAC3B,GACNA,EAAS,CACPC,KApFwB,mBN6CrBnB,GAAQ,GAAD,OAAIK,GAAwB,gBACxC,CACEG,OAAQvB,EACR4B,QAAS,CAAE,eAAgB,kCAC3BJ,KAAMC,KAAKC,UAAU,CACnBG,MAAOC,aAAaC,QAAQ,oBMoCnBZ,MAAK,WAChBW,aAAa+B,WACX,gBAEF/B,aAAa+B,WACX,eAEF5B,EAAS,CACPC,KA7FsB,sBA+FvBG,OAAM,SAAAyB,GACP7B,EAAS,CACPC,KAhGoB,eAiGpBvB,QAASmD,EAAMnD,eChFjBoD,GAAoC,CACxCC,sBAAsB,EACtBC,sBAAsB,EACtBC,wBAAoB5D,EACpB6D,cAAc,EACdC,cAAc,EACdC,gBAAY/D,EACZgE,UAAU,GCSCC,GAAuB,SAACjD,GACnC,OAAO,SAACW,GACNA,EAAS,CACPC,KAzCiC,4BR2DT,SAACZ,GAC7B,OAAOP,GAAQ,GAAD,OAAIK,GAAwB,mBACxC,CACEG,OAAQvB,EACRwB,KAAMC,KAAKC,UAAU,eAAKJ,MQpB5BkD,CAAelD,GAAMH,MAAK,WACxBc,EAAS,CACPC,KA5C+B,+BA8ChCG,OAAM,SAAAyB,GACP7B,EAAS,CACPC,KA/C6B,wBAgD7BvB,QAASmD,EAAMnD,eC1CjBoD,GAAe,CACnBU,iBAAiB,EACjBC,mBAAepE,EACfqE,iBAAiB,EACjBC,kBAAkB,GC2BPC,GAAoB,WAC/B,OAAO,SAAC5C,GACNA,EAAS,CACPC,KA1C+B,0BV2F5BnB,GAAQ,GAAD,OAAIK,GAAwB,cAC1C,CACEG,OAAQvB,EACR4B,QAAS,CACP,eAAgB,iCAChBsB,cAAe,UAAYpB,aAAaC,QAAQ,kBUpDxCZ,MAAK,SAAAiB,GACbH,EAAS,CACPC,KA7C6B,wBA8C7BsB,KAAMpB,EAAKoB,UAEZnB,OAAM,SAAAyB,GACP7B,EAAS,CACPC,KAjD2B,sBAkD3BvB,QAASmD,EAAMnD,eAMVmE,GAAsB,SAACxD,GAClC,OAAO,SAACW,GV0CgB,IAACuB,EUzCvBvB,EAAS,CACPC,KA1DiC,6BVkGZsB,EUtCZlC,EVuCNP,GAAQ,GAAD,OAAIK,GAAwB,cAC1C,CACEG,OAAQvB,EACR4B,QAAS,CACPsB,cAAe,UAAYpB,aAAaC,QAAQ,gBAElDP,KAAMC,KAAKC,UAAU,eAAK8B,OU7CTrC,MAAK,SAAAiB,GACpBH,EAAS,CACPC,KA7D+B,0BA8D/BsB,KAAMpB,EAAKoB,UAEZnB,OAAM,SAAAyB,GACP7B,EAAS,CACPC,KAjE6B,wBAkE7BvB,QAASmD,EAAMnD,eCxDjBoD,GAA+B,CACnCgB,iBAAiB,EACjBC,mBAAe1E,EACf2E,iBAAiB,EACjBzB,KAAM,CACJ0B,KAAM,GACNC,MAAO,KCCEC,GAAqB,SAAC9D,GACjC,OAAO,SAACW,GZAkB,IAACuB,EYCzBvB,EAAS,CAAEC,KAxBqB,0BZuBPsB,EYEZlC,EZDRP,GAAQ,GAAD,OAAIK,GAAwB,kBACxC,CACEG,OAAQvB,EACR4B,QAAS,CACP,eAAgB,kCAElBJ,KAAMC,KAAKC,UAAU,eAAK8B,OYLTrC,MAAK,WACtBc,EAAS,CACPC,KA1B4B,4BA4B7BG,OAAM,SAAAyB,GACP7B,EAAS,CACPC,KA7B0B,qBA8B1BvB,QAASmD,EAAMnD,eC3BjBoD,GAAe,CACnBsB,qBAAqB,EACrBC,qBAAqB,EACrBC,kBAAmB,MC8BRC,GAA8D,CACzEC,QAxCiC,sBAyCjCC,OAxCgC,qBAyChCC,UAxCmC,wBAyCnCC,SAtCkC,uBAuClCC,MAxC+B,oBAyC/BC,QA1CiC,sBA2CjCC,UAxCmC,yBCA/BhC,GAA6B,CACjCiC,aAAa,EACbrF,QAAS,KACTmD,MAAO,MCUImC,GAAqB,SAAC5C,GACjC,OAAO,SAACpB,GACNA,EAAS,CAAEC,KApBmB,uBhBMV,SAACmB,GACvB,OAAOtC,GAAQ,GAAD,OAAIK,GAAwB,mBAAWiC,IgBcnD6C,CAAS7C,GAAQlC,MAAK,SAAAX,GACpByB,EAAS,CACPC,KAtB0B,qBAuB1BkB,MAAO5C,EAAO2F,OAAO,QAGxB9D,OAAM,SAAAyB,GACL7B,EAAS,CACPC,KA3BwB,mBA4BxBvB,QAASmD,EAAMnD,eCpBjBoD,GAAgC,CACpCqC,kBAAkB,EAClBC,oBAAgB/F,EAChB8C,WAAO9C,GCyBIgG,GAAkE,CAC7Eb,QAxCmC,wBAyCnCC,OAxCkC,uBAyClCC,UAxCqC,0BAyCrCC,SAtCoC,yBAuCpCC,MAxCiC,sBAyCjCC,QA1CmC,wBA2CnCC,UAxCqC,2BCAjChC,GAA6B,CACjCiC,aAAa,EACbrF,QAAS,KACTmD,MAAO,MCGIyC,GAAcC,YAAgB,CACzCC,kBxBKgC,WAAkE,IAAjEC,EAAK,uDAAGvG,EAAkBwG,EAAiC,uCAC5F,OAAQA,EAAOzE,MACb,IyBpBoB,WzBqBlB,OAAIyE,EAAOC,KAAK1E,OAASpC,EAChB,eACF4G,EAAM,CACTrG,IAAKsG,EAAOC,OAET,eACFF,EAAM,CACTtG,MAAM,GAAD,mBACAsG,EAAMtG,OAAK,CACduG,EAAOC,SAIb,IyBhCwB,ezBiCtB,IAAMC,EAAQ,eACTH,EAAM,CACTtG,MAAM,YACDsG,EAAMtG,SAEX,EAKF,CACEyG,EAASzG,MAAMuG,EAAOG,IACtBD,EAASzG,MAAMuG,EAAOI,OAExB,OAPEF,EAASzG,MAAMuG,EAAOI,MAAK,KAC3BF,EAASzG,MAAMuG,EAAOG,IAAG,KAMpBD,EACT,IyBjDuB,czBkDrB,OAAO,eACFH,EAAM,CACTtG,MAAO,YAAIsG,EAAMtG,OAAO4G,QACtB,SAACJ,EAAMK,GAAK,OAAKA,IAAUN,EAAOM,WAIxC,IyBvDuB,czBwDrB,OAAO,eACFP,EAAM,CACTtG,MAAO,GACPC,SAAKC,IAGT,QACE,OAAOoG,IwBpDXQ,kBlBPoC,WAAsE,IAArER,EAAK,uDAAGnE,GAAsBoE,EAAiC,uCACpG,OAAQA,EAAOzE,MACb,IDRoC,2BCSlC,OAAO,eACFwE,EAAM,CACTlE,QAAQ,IAEZ,IDZoC,2BCalC,OAAO,eACFkE,EAAM,CACTlE,QAAQ,EACRC,SAAS,EACTL,KAAMuE,EAAOvE,OAEjB,IDlBkC,yBCmBhC,OAAO,eACFsE,EAAM,CACTlE,QAAQ,EACRC,SAAS,EACTL,KAAM,KAEV,QACE,OAAOsE,IkBdXS,mBjBVsC,WAAqE,IAApET,EAAK,uDAAGhE,GAAsBiE,EAAgC,uCACrG,OAAQA,EAAOzE,MACb,ImBTsC,6BnBUpC,MAAO,CACLS,QAAQ,GAEZ,ImBZuC,8BnBarC,MAAO,CACLA,QAAQ,GAEZ,QACE,OAAO+D,IiBAXU,afF6B,WAAmD,IAAlDV,EAAK,uDAAGpD,GAAeqD,EAAqB,uCAC1E,OAAQA,EAAOzE,MACb,IDdyB,gBCevB,OAAO,eACFwE,EAAM,CACTlE,QAAQ,IAGZ,IDnByB,gBCoBvB,OAAO,eACFkE,EAAM,CACTlE,QAAQ,EACRC,SAAS,EACTU,eAAgBwD,EAAOxD,iBAG3B,ID1BuB,cC2BrB,OAAO,eACFuD,EAAM,CACTlE,QAAQ,EACRC,SAAS,EACTU,eAAgB,OAGpB,IDjC4B,mBCkC1B,OAAO,eACFuD,EAAM,CACT/D,QAAQ,IAGZ,IDtC6B,oBCuC3B,OAAO,eACF+D,EAAM,CACT/D,QAAQ,EACRQ,eAAgB,OAGpB,QACE,OAAOuD,IenCXW,YbgBkC,WAA+E,IAA9EX,EAAK,uDAAG3C,GAAc4C,EAA6B,uCACtF,OAAQA,EAAOzE,MACb,IDlCyB,gBCmCvB,OAAO,eACFwE,EAAM,CACT1C,sBAAsB,EACtBC,sBAAsB,EACtBC,wBAAoB5D,IAExB,IDxCyB,gBCyCvB,OAAO,eACFoG,EAAM,CACT1C,sBAAsB,EACtBC,sBAAsB,EACtBC,wBAAoB5D,EACpBgE,UAAU,IAEd,ID/CuB,cCgDrB,OAAO,eACFoC,EAAM,CACT1C,sBAAsB,EACtBC,sBAAsB,EACtBC,mBAAoByC,EAAOhG,UAE/B,IDrD0B,iBCsDxB,OAAO,eACF+F,EAAM,CACT1C,sBAAsB,EACtBC,sBAAsB,EACtBC,wBAAoB5D,IAExB,ID3D0B,iBC4DxB,OAAO,eACFoG,EAAM,CACT1C,sBAAsB,EACtBC,sBAAsB,EACtBC,wBAAoB5D,EACpBgE,UAAU,IAEd,IDlEwB,eCmEtB,OAAO,eACFoC,EAAM,CACT1C,sBAAsB,EACtBC,sBAAsB,EACtBC,mBAAoByC,EAAOhG,UAE/B,IDvEyB,gBCwEvB,OAAO,eACF+F,EAAM,CACTvC,cAAc,EACdC,cAAc,EACdC,gBAAY/D,IAEhB,ID7EyB,gBC8EvB,OAAO,eACFoG,EAAM,CACTvC,cAAc,EACdC,cAAc,EACdC,gBAAY/D,EACZgE,UAAU,IAEd,IDpFuB,cCqFrB,OAAO,eACFoC,EAAM,CACTvC,cAAc,EACdC,cAAc,EACdC,WAAYsC,EAAOhG,UAEvB,ID1FuB,cC2FrB,OAAO,eACF+F,EAAM,CACTvC,cAAc,EACdC,cAAc,EACdC,gBAAY/D,IAEhB,IDrGsB,aCsGpB,OAAO,eACFoG,EAAM,CACT1C,sBAAsB,EACtBC,sBAAsB,EACtBC,wBAAoB5D,IAExB,QACE,OAAOoG,IalGXY,gBXFgC,WAA+D,IAA9DZ,EAAK,uDAAG3C,GAAc4C,EAAkC,uCACzF,OAAQA,EAAOzE,MACb,IDjBmC,0BCkBjC,OAAO,eACFwE,EAAM,CACTjC,iBAAiB,EACjBE,iBAAiB,EACjBD,cAAe,KACfE,kBAAkB,IAEtB,IDxBmC,0BCyBjC,OAAO,eACF8B,EAAM,CACTjC,iBAAiB,EACjBE,iBAAiB,EACjBC,kBAAkB,IAEtB,ID9BiC,wBC+B/B,OAAO,eACF8B,EAAM,CACTjC,iBAAiB,EACjBE,iBAAiB,EACjBD,cAAeiC,EAAOhG,UAG1B,IDrCkC,yBCsChC,OAAO,eACF+F,EAAM,CACTjC,iBAAiB,EACjBE,iBAAiB,EACjBD,cAAe,OAEnB,ID3CkC,yBC4ChC,OAAO,eACFgC,EAAM,CACTjC,iBAAiB,EACjBE,iBAAiB,IAErB,IDhDgC,uBCiD9B,OAAO,eACF+B,EAAM,CACTjC,iBAAiB,EACjBE,iBAAiB,EACjBD,cAAeiC,EAAOhG,UAE1B,IDtDgC,uBCuD9B,OAAO,eACF+F,EAAM,CACTjC,iBAAiB,EACjBE,iBAAiB,EACjBD,cAAe,OAEnB,QACE,OAAOgC,IWlDXa,YTO6B,WAAqD,IAApDb,EAAK,uDAAG3C,GAAc4C,EAAwB,uCAC5E,OAAQA,EAAOzE,MACb,ID3BiC,wBC4B/B,MAAO,CACL6C,iBAAiB,EACjBE,iBAAiB,EACjBD,mBAAe1E,EACfkD,KAAMO,GAAaP,MAEvB,IDjCiC,wBCkC/B,OAAO,eACFkD,EAAM,CACT3B,iBAAiB,EACjBE,iBAAiB,EACjBzB,KAAM,CACJ0B,KAAMyB,EAAOnD,KAAK0B,KAClBC,MAAOwB,EAAOnD,KAAK2B,SAGzB,ID1C+B,sBC2C7B,OAAO,eACFuB,EAAM,CACT3B,iBAAiB,EACjBE,iBAAiB,EACjBD,cAAe2B,EAAOhG,UAE1B,IDhDmC,0BCiDjC,OAAO,eACF+F,EAAM,CACT3B,iBAAiB,EACjBE,iBAAiB,EACjBD,mBAAe1E,IAEnB,IDtDmC,0BCuDjC,OAAO,eACFoG,EAAM,CACT3B,iBAAiB,EACjBE,iBAAiB,IAErB,ID3DiC,wBC4D/B,OAAO,eACFyB,EAAM,CACT3B,iBAAiB,EACjBE,iBAAiB,EACjBD,cAAe2B,EAAOhG,UAE1B,IDjE2B,kBCkEzB,OAAO,eACF+F,EAAM,CACT3B,iBAAiB,EACjBE,iBAAiB,EACjBD,mBAAe1E,IAEnB,QACE,OAAOoG,IS5DXc,cPRiC,WAAyD,IAAxDd,EAAK,uDAAG3C,GAAc4C,EAA4B,uCACpF,OAAQA,EAAOzE,MACb,IDbgC,uBCc9B,OAAO,eACFwE,EAAM,CACTrB,qBAAqB,EACrBC,qBAAqB,EACrBC,kBAAmB,OAEvB,IDnBgC,uBCoB9B,OAAO,eACFmB,EAAM,CACTrB,qBAAqB,EACrBC,qBAAqB,EACrBC,kBAAmB,OAEvB,IDzB8B,qBC0B5B,OAAO,eACFmB,EAAM,CACTrB,qBAAqB,EACrBC,qBAAqB,EACrBC,kBAAmBoB,EAAOhG,UAE9B,ID/B8B,qBCgC5B,OAAO,eACF+F,EAAM,CACTrB,qBAAqB,EACrBC,qBAAqB,EACrBC,kBAAmB,OAEvB,QACE,OAAOmB,IOtBXe,mBLTiC,WAAuE,IAAtEf,EAAK,uDAAG3C,GAAc4C,EAA4B,uCACpF,OAAQA,EAAOzE,MACb,IDZiC,wBCa/B,OAAO,eACFwE,EAAM,CACTV,aAAa,EACblC,MAAO,OAEX,IDjB+B,sBCkB7B,OAAO,eACF4C,EAAM,CACTV,aAAa,EACblC,MAAO6C,EAAO7C,QAElB,IDrBgC,uBCsB9B,OAAO,eACF4C,EAAM,CACTV,aAAa,EACblC,MAAO,OAEX,ID1BiC,wBC2B/B,OAAO,eACF4C,EAAM,CACT5C,MAAO,KACPnD,QAASgG,EAAOhG,UAEpB,QACE,OAAO+F,IKjBXgB,iBHL+B,WAAuE,IAAtEhB,EAAK,uDAAG3C,GAAc4C,EAAyB,uCAC/E,OAAQA,EAAOzE,MACb,IDlB8B,qBCmB5B,OAAO,eACFwE,EAAM,CACTN,kBAAkB,EAClBC,oBAAgB/F,IAEpB,IDvB8B,qBCwB5B,OAAO,eACFoG,EAAM,CACTN,kBAAkB,EAClBC,oBAAgB/F,EAChB8C,MAAOuD,EAAOvD,QAElB,ID7B4B,mBC8B1B,OAAO,eACFsD,EAAM,CACTN,kBAAkB,EAClBC,eAAgBM,EAAOhG,QACvByC,WAAO9C,IAGX,QACE,OAAOoG,IGlBXiB,qBDXmC,WAAyE,IAAxEjB,EAAK,uDAAG3C,GAAc4C,EAA8B,uCACxF,OAAQA,EAAOzE,MACb,IDZmC,0BCajC,OAAO,eACFwE,EAAM,CACTV,aAAa,EACblC,MAAO,OAEX,IDjBiC,wBCkB/B,OAAO,eACF4C,EAAM,CACTV,aAAa,EACblC,MAAO6C,EAAO7C,QAElB,IDrBkC,yBCsBhC,OAAO,eACF4C,EAAM,CACTV,aAAa,EACblC,MAAO,OAEX,ID1BmC,0BC2BjC,OAAO,eACF4C,EAAM,CACT5C,MAAO,KACPnD,QAASgG,EAAOhG,UAEpB,QACE,OAAO+F,M,UIrBAkB,GAAmB,SAC9BC,GAEA,OAAO,SAACC,GACN,IAAIF,EAKA,CACFG,YAAQzH,EACR0H,MAAO,EACPC,WAAW,EACXjH,IAAK,IAGP,OAAO,SAAAkH,GAAI,OAAI,SAACvB,GAAuB,IAC7B1E,EAAa6F,EAAb7F,SACJ0E,EAAOzE,OAAS2F,EAAkBpC,UACpCmC,EAAiB5G,IAAM2F,EAAO3F,IAC1B2F,EAAOwB,WACTP,EAAiB5G,IAAG,UACf4G,EAAiB5G,IAAG,kBAAUc,aAAaC,QAAQ,iBAE1D6F,EAAiBG,OAAS,IAAIK,UAAUR,EAAiB5G,KACzD4G,EAAiBK,WAAY,EAC7BvI,OAAO2I,aAAaT,EAAiBI,OACrC/F,EAAS,CACPC,KAAM2F,EAAkBlC,aAGxBiC,EAAiBG,SACnBH,EAAiBG,OAAOO,OAAS,WAC/BrG,EAAS,CACPC,KAAM2F,EAAkBnC,UAG5BkC,EAAiBG,OAAOQ,QAAU,SAAAC,GxBlDX,MwBmDjBA,EAAMC,OACRxG,EAAS,CACPC,KAAM2F,EAAkB/B,QACxBhC,MAAOlD,IAETgH,EAAiBG,OAAQW,SAEvBd,EAAiBK,YACnBhG,EAAS,CACPC,KAAM2F,EAAkBjC,WAE1BgC,EAAiBI,MAAQtI,OAAOiJ,YAC9B,WACE1G,EAAS,CACPC,KAAM2F,EAAkBpC,QACxBzE,IAAK4G,EAAiB5G,QxBjEjB,OwBwEf4G,EAAiBG,OAAOa,UAAY,SAAAJ,GAAU,IAAD,EAC3C,GAA2B,QAAvB,EAAC/G,KAAKoH,MAAML,EAAMpG,aAAK,aAAtB,EAAwB0G,QAQtB,CAAC,IAAD,EAIDrH,KAAKoH,MAAML,EAAMpG,MADhB2G,GADI,EAAPD,QACiB,6BAEnB7G,EAAS,CACPC,KAAM2F,EAAkB9B,UACxBpF,QAASoI,QAfyB,CAAC,IAAD,IxBvEH,8BwBwEP,QAAtB,EAAAtH,KAAKoH,MAAML,EAAMpG,aAAK,aAAtB,EAAwBzB,UAC1BgB,KAEFM,EAAS,CACPC,KAAM2F,EAAkB/B,QACxBhC,MAA6B,QAAxB,EAAErC,KAAKoH,MAAML,EAAMpG,aAAK,aAAtB,EAAwBzB,YAarCiH,EAAiBG,OAAOiB,QAAU,WAChC/G,EAAS,CACPC,KAAM2F,EAAkB/B,QACxBhC,MAAOlD,KAGP+F,EAAOzE,OAAS2F,EAAkBhC,QACpC+B,EAAgB,eACXA,EAAiB,CACpBK,WAAW,EACXD,MAAO,IAETtI,OAAO2I,aAAaT,EAAiBI,OACrCJ,EAAiBG,OAAQW,QACzBzG,EAAS,CACPC,KAAM2F,EAAkBjC,aAI9BsC,EAAKvB,OChHIsC,eAAe,CAC5BC,QAAS3C,GACT4C,WAAY,SAACC,GAAoB,OAAKA,IACnCC,OAAOzB,GAAiBpC,KACxB6D,OAAOzB,GAAiBtB,MACzBgD,UAAUC,I,QCFDC,GAAc,WAAH,OAASC,eAEpBC,GAAgDC,I,4BCsD9CC,GAjDA,WACb,OACE,4BAAQC,UAAWC,KAAMC,QACvB,yBAAKF,UAAWC,KAAME,OACpB,yBAAKH,UAAWC,KAAMG,WACpB,yBAAKJ,UAAWC,KAAMI,YACpB,kBAAC,cAAU,CAAChI,KAAK,YACjB,kBAAC,IAAI,CACH2H,UAAWC,KAAMK,KACjBrD,GC1BW,KD4BVlG,IAGL,yBAAKiJ,UAAWC,KAAMI,YACpB,kBAAC,YAAQ,CAAChI,KAAK,YACf,kBAAC,IAAI,CACH2H,UAAWC,KAAMK,KACjBrD,GC5BW,SD8BVlG,KAIP,yBAAKiJ,UAAS,UAAKC,KAAMI,WAAU,YAAIJ,KAAMM,iBAC3C,kBAAC,IAAI,CACHP,UAAWC,KAAMK,KACjBrD,GC5Ca,KD8Cb,kBAAC,QAAI,QAGT,yBAAK+C,UAAWC,KAAMI,YACpB,kBAAC,eAAW,CAAChI,KAAK,YAClB,kBAAC,IAAI,CACH2H,UAAWC,KAAMK,KACjBrD,GC/CgB,WDgDhBJ,MAAO,CACLK,KCjDc,aDoDfnG,O,2BEyCEyJ,GAvFY,WACzB,IAAMpI,EAAWuH,KACXc,EAAWC,eAAc,EAEHC,mBAAS,IAAG,oBAAhCrF,EAAK,KAAEsF,EAAQ,KAEfjH,EAASkG,IAAY,SAAA5B,GAAK,OAAIA,EAAMP,eAApC/D,KAAI,EAE+BkG,IAAY,SAAA5B,GAAK,OAAIA,EAAMR,mBAA9D3C,EAAe,EAAfA,gBAAiBD,EAAa,EAAbA,cAEzBgG,qBAAU,WACRzI,EAAS4C,QACR,CAAC5C,IAEJyI,qBAAU,YACC,OAAJlH,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,OAAsB,KAAd1B,EAAK0B,OACtBjD,EAAS,CACPC,KlBpBuB,oBkBsBzBD,EAAS,CACPC,KtBvBkB,esByBpBoI,ED5BsB,WC4BC,CAAEK,SAAS,OAEnC,CACG,OAAJnH,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,KACNoF,EACArI,IAGFyI,qBAAU,WACL/F,IACD1C,EAAS,CACPC,KpBpC4B,yBoBsC9BoI,EDrC6B,kBCqCC,CAAEK,SAAS,KAExCjG,GACDkG,MAAMhK,MAEP,CACD+D,EACAD,EACAzC,IAQF,OACE,0BAAM4H,UAAWgB,KAAYC,sBAC3B,0BAAMjB,UAAWgB,KAAYE,sBAAuBC,SAPtC,SAACC,GACjBA,EAAEC,iBACFjJ,EAASsC,GAAqBY,MAM1B,wBAAI0E,UAAS,UAAKgB,KAAYM,cAAa,gCACxCvK,IAEH,kBAAC,cAAU,CACTwK,WAAYP,KAAYQ,4BACxBC,YAAa1K,GACbsE,KAAK,QACLqG,MAAOpG,EACPqG,SAAU,SAACC,GACThB,EAASgB,EAAGC,OAAOH,UAGvB,kBAAC,UAAM,CACLrJ,KAAK,UACLkJ,WAAYP,KAAYc,kBACxBC,SAAS,UAERhL,GAEH,uBAAGiJ,UAAU,mDACRjJ,GACH,kBAAC,IAAI,CACHiJ,UAAWgB,KAAYgB,UACvB/E,GDtFa,UCwFZlG,Q,oBCxBEkL,GA3DW,WACxB,IAAMC,EAASC,eAIXpF,EAFa8C,IAAY,SAAA5B,GAAK,OAAIA,EAAMZ,qBAApC9E,KAEQ6J,MAAK,SAACC,GAAa,OAAKH,EAAOI,GAAKD,EAAEjJ,MAAQ8I,EAAOI,GAAKD,EAAEjJ,MAAQvD,OAAOC,SAASyM,SAASzI,MAAM,KAAK,MAExH,OACE,oCACGiD,GACC,oCACE,yBAAKiD,UAAWC,KAAMuC,eACpB,yBACEC,IAAK1F,EAAK2F,YACVC,IAAK5F,EAAK1B,KACV2E,UAAWC,KAAM2C,QAEnB,uBAAG5C,UAAS,qCAAgCC,KAAM4C,sBAAwB9F,EAAK1B,MAC/E,yBAAK2E,UAAWC,KAAM6C,oBACpB,yBAAK9C,UAAWC,KAAM8C,yBACpB,uBAAG/C,UAAU,mDACVjJ,GAEH,uBAAGiJ,UAAU,qDACVjD,EAAKiG,WAGV,yBAAKhD,UAAWC,KAAM8C,yBACpB,uBAAG/C,UAAU,mDACVjJ,GAEH,uBAAGiJ,UAAU,qDACVjD,EAAKkG,WAGV,yBAAKjD,UAAWC,KAAM8C,yBACpB,uBAAG/C,UAAU,mDACVjJ,GAEH,uBAAGiJ,UAAU,qDACVjD,EAAKmG,MAGV,6BACE,uBAAGlD,UAAU,mDACVjJ,GAEH,uBAAGiJ,UAAU,qDACVjD,EAAKoG,qBCzCTC,GAVQ,WACrB,OACE,0BAAMpD,UAAWgB,KAAYC,sBAC3B,yBAAKjB,UAAWgB,KAAYE,uBAC1B,kBAAC,GAAiB,SCwHXmC,GA7GO,WAAO,IAAD,EACpBjL,EAAWuH,KACXc,EAAWC,eAGXxD,GAAqB,QAAd,EAFIoG,eAEKzG,aAAK,aAAd,EAAgBK,OJzBN,II2BfvD,EAASkG,IAAY,SAAA5B,GAAK,OAAIA,EAAMP,eAApC/D,KAEAc,EAAaoF,IAAY,SAAA5B,GAAK,OAAIA,EAAMT,eAAxC/C,SAEAgB,EAAwBoE,IAAY,SAAA5B,GAAK,OAAIA,EAAMN,iBAAnDlC,oBAAmB,EAEOkF,mBAAS,IAAG,oBAAtC4C,EAAQ,KAAEC,EAAW,OACD7C,mBAAS,IAAG,oBAAhCrF,EAAK,KAAEsF,EAAQ,KAEvBC,qBAAU,WACRzI,EAAS,CACPC,KvB7B8B,yBuB+B7BoD,EACDsF,MAAMhK,IACDqB,EAAS4C,QACf,CACDS,EACArD,IAGFyI,qBAAU,aACE,OAAJlH,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,OAAsB,KAAd1B,EAAK0B,MAAgBZ,KACvCrC,EAAS,CACPC,KrB1CuB,oBqB4CzBD,EAAS,CACPC,KzB7CkB,eyB+CpBD,EAAS,CACPC,KzB5CmB,gByB8CrBoI,EAASvD,EAAM,CAAE4D,SAAS,OAE3B,CACG,OAAJnH,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,KACNZ,EACAgG,EACArI,IAYF,OACE,0BAAM4H,UAAWgB,KAAYC,sBAC3B,0BAAMjB,UAAWgB,KAAYE,sBAAuBC,SAXtC,SAACC,GACjB,IAAM3J,EAAO,CACX6D,MAAOA,EACPiI,SAAUA,GAEZnC,EAAEC,iBACFjJ,EAASsB,GAAYjC,MAMjB,wBAAIuI,UAAS,UAAKgB,KAAYM,cAAa,gCACxCvK,IAEH,kBAAC,cAAU,CACTwK,WAAYP,KAAYQ,4BACxBnG,KAAK,QACLqG,MAAOpG,EACPqG,SAAU,SAACC,GACThB,EAASgB,EAAGC,OAAOH,UAGvB,kBAAC,iBAAa,CACZH,WAAYP,KAAYQ,4BACxBnG,KAAK,WACLqG,MAAO6B,EACP5B,SAAU,SAACC,GACT4B,EAAY5B,EAAGC,OAAOH,UAG1B,kBAAC,UAAM,CACLrJ,KAAK,UACLkJ,WAAYP,KAAYc,kBACxBC,SAAS,UAERhL,IAEH,uBAAGiJ,UAAS,UAAKgB,KAAYQ,4BAA2B,sDACrDzK,EACD,kBAAC,IAAI,CACHiJ,UAAWgB,KAAYgB,UACvB/E,GJrGyB,aIuGxBlG,IAGL,uBAAGiJ,UAAU,mDACVjJ,EACD,kBAAC,IAAI,CACHiJ,UAAWgB,KAAYgB,UACvB/E,GJ5GwB,oBI8GvBlG,OCpFE0M,GA5BI,WACjB,IAAMrL,EAAWuH,KACXc,EAAWC,eAETjG,EAAaoF,IAAY,SAAA5B,GAAK,OAAIA,EAAMT,eAAxC/C,SAaR,OAXAoG,qBAAU,WACRzI,EAAS2B,QACR,CAAC3B,IAEJyI,qBAAU,WACJpG,GACFgG,ELlBmB,SKkBE,CAAEK,SAAS,MAEjC,CAACrG,EAAUgG,IAIZ,0BAAMT,UAAWgB,KAAYC,sBAC3B,yBAAKjB,UAAWgB,KAAYE,uBAC1B,wBAAIlB,UAAS,UAAKgB,KAAYM,cAAa,gCACxCvK,O,wHCfI2M,GANM,SAAH,GAAgD,IAA1CC,EAAO,EAAPA,QAASC,EAAiB,EAAjBA,kBAC/B,OACE,yBAAK5D,UAAW4D,EAAoB3D,KAAM4D,gBAAkB5D,KAAM6D,QAASC,QAASJ,KCIlFK,GAAQC,SAASC,eAAe,SAyCvBC,GAvCD,SAAH,GAAsD,IAAhDR,EAAO,EAAPA,QAASS,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QAElCC,EAAcC,uBAAY,SAAC7F,GAC3BA,EAAM8F,MAAQvO,GAChByN,MAED,CAACA,IAUJ,OARA9C,qBAAU,WAGR,OAFAoD,SAAStM,KAAK+M,iBAAiBxO,EAAyBqO,GAEjD,WACLN,SAAStM,KAAKgN,oBAAoBzO,EAAyBqO,MAE5D,CAACA,IAEGK,KAASC,aACd,oCACA,kBAAC,GAAY,CAACjB,kBAAmBU,EAASX,QAASA,IACnD,yBAAK3D,UAAWC,KAAM6E,iBACpB,yBAAK9E,UAAWC,KAAM8E,WACpB,yBAAK/E,UAAWC,KAAM+E,cACnBZ,GACC,wBAAIpE,UAAU,6BACXoE,GAGL,uBAAGpE,UAAWC,KAAMgF,UAAWlB,QAASJ,GACtC,kBAAC,aAAS,CAACtL,KAAK,cAGnBgM,KAILL,K,yCCLWkB,GAlCkB,SAAH,GAAkB,IAAZ3M,EAAI,EAAJA,KAC5BkI,EAAWC,eAET/G,EAASkG,IAAY,SAAA5B,GAAK,OAAIA,EAAMP,eAApC/D,KAQR,OANAkH,qBAAU,WACJlH,GAAsB,KAAdA,EAAK0B,MACfoF,ERjBmB,SQiBE,CAAEK,SAAS,MAEjC,CAACnH,EAAM8G,IAGR,yBAAKT,UAAWC,KAAMuC,eACpB,uBAAGxC,UAAS,sCAAiCC,KAAMkF,sBAChD5M,GAEH,uBACEyH,UAAS,sCAAiCC,KAAMmF,2BAE/CrO,GAEH,yBAAKiJ,UAAWC,KAAMoF,cACpB,yBAAK5C,IAAKG,QAEZ,uBAAG5C,UAAS,sCAAiCC,KAAMmF,2BAChDrO,GAEH,uBAAGiJ,UAAS,0DAAqDC,KAAMqF,gBACpEvO,K,8BCmBMwO,GA7CqC,SAAH,GAAmC,IAA7BxI,EAAI,EAAJA,KAAMK,EAAK,EAALA,MAAOoI,EAAQ,EAARA,SAC5DC,EAAMC,iBAAO,MAEbtN,EAAWuH,KAAc,EAEdgG,aAAQ,CACvBtN,KAAM,UACN0E,KAAM,CAAEK,WAFDwI,EAGP,kBAHW,KAKIC,aAAQ,CACvBC,OAAQ,UACRC,KAAI,SAAChJ,GACCK,IAAUL,EAAKK,OACjBhF,EAAS,CACPC,Kf1BkB,ee2BlB6E,KAAME,EACNH,GAAIF,EAAKK,WAQjB,OAFAwI,GAAKI,EAFH,kBAXW,IAaHP,IAGR,wBACEzF,UAAWC,KAAMgG,oBACjBxB,IAAK1H,EAAK3D,IACVqM,IAAKA,GAEL,kBAAC,YAAQ,CAACpN,KAAK,YACf,kBAAC,sBAAkB,CACjB6N,KAAMnJ,EAAK1B,KACX8K,MAAOpJ,EAAKoJ,MACZC,UAAWrJ,EAAK6F,OAAS,GACzBrB,WAAYtB,KAAMoG,gBAClBC,YAAa,WACXd,EAASpI,QCyHJmJ,GA3JW,WACxB,IAAMnO,EAAWuH,KACXc,EAAWC,eAAc,EAERb,IAAY,SAAA5B,GAAK,OAAIA,EAAMrB,qBAA1CrG,EAAK,EAALA,MAAOC,EAAG,EAAHA,IAAG,EAEiBqJ,IAAY,SAAA5B,GAAK,OAAIA,EAAMV,gBAAtDjE,EAAc,EAAdA,eAAgBR,EAAM,EAANA,OAEhBa,EAASkG,IAAY,SAAA5B,GAAK,OAAIA,EAAMP,eAApC/D,KAERkH,qBAAU,WACRzI,EAAS4C,QACR,CAAC5C,IAEJyI,qBAAU,WACLvH,IACDlB,EAAS,CACPC,KjC7BwB,qBiC+B1BD,EAAS,CACPC,KhBlCmB,mBgBqCtB,CAACD,EAAUkB,IAAiB,MAERuM,aAAQ,CAC7BC,OAAQ,CAAC7P,GACT8P,KAAI,SAAChJ,GACH3E,EAAS,CACPC,KhB9CgB,WgB+ChB0E,KAAMA,OALHyJ,EAQP,kBARiB,KAUOX,aAAQ,CAChCC,OAAQ,CAAC7P,GACT8P,KAAI,SAAChJ,GACH3E,EAAS,CACPC,KhBxDgB,WgByDhB0E,KAAMA,OALH0J,EAQP,kBARoB,KAUWZ,aAAQ,CACvCC,OAAQ,CAAC7P,EAAmBA,GAC5B8P,KAAI,SAAChJ,GACH3E,EAAS,CACPC,KhBlEgB,WgBmEhB0E,KAAMA,OALH2J,EAQP,kBAR2B,GAUvBC,EAAa,SAACvJ,GAClBhF,EAAS,CACPC,KhBzEqB,cgB0ErB+E,MAAOA,KAILwJ,EAAMC,mBAAQ,WAClB,IAAInF,EAAQ,EAOZ,OANAnL,EAAM2C,KAAI,SAAA6D,GACR2E,GAAgB3E,EAAKoJ,SAEpB3P,IACDkL,GAA4B,EAAZlL,EAAI2P,OAEfzE,IACN,CAACnL,EAAOC,IAgBX,OACE,6BAASwJ,UAAWC,KAAM6G,SACvBhO,GACC,kBAAC,GAAK,CAAC6K,QATG,WACdvL,EAAS,CACPC,KjC9F2B,wBiCsGvB,kBAAC,GAAY,CAACE,KAAMe,KAGxB,yBAAK0G,UAAWC,KAAM8G,oBACpB,yBAAKtC,IAAG,UAAKjO,GAAOA,EAAI4C,IAAG,QAAQqM,IAAKe,GACtC,kBAAC,sBAAkB,CACjBnO,KAAK,MACL2O,UAAQ,EACRvC,IAAG,UAAKjO,GAAOA,EAAI4C,IAAG,QACtB8M,KAAM1P,EAAG,UAAMA,EAAI6E,KAAI,yCAAetE,IACtCoP,MAAO3P,EAAMA,EAAI2P,MAAQ,EACzBC,UAAW5P,EAAMA,EAAIoM,MAASvM,EAC9BkL,WAAYtB,KAAMzJ,OAGtB,wBAAIwJ,UAAWC,KAAMgH,aAAcxB,IAAKiB,GACrCnQ,GAAWA,EAAM2Q,OAAS3Q,EAAM2C,KAAI,SAAC6D,EAAMK,GAAK,OAC/C,kBAAC,GAA+B,CAC9BqH,IAAK0C,gBACLpK,KAAMA,EACNK,MAAOA,EACPoI,SAAUmB,OAGZ,yBAAK3G,UAAWC,KAAMmH,SACpB,yBAAKpH,UAAS,UAAKC,KAAMoH,aAAY,iCAClCtQ,MAKT,yBAAK0N,IAAG,UAAKjO,GAAOA,EAAI4C,IAAG,WAAWqM,IAAKgB,GACzC,kBAAC,sBAAkB,CACjBpO,KAAK,SACL2O,UAAQ,EACRvC,IAAG,UAAKjO,GAAOA,EAAI4C,IAAG,QACtB8M,KAAM1P,EAAG,UAAMA,EAAI6E,KAAI,mCAActE,IACrCoP,MAAO3P,EAAMA,EAAI2P,MAAQ,EACzBC,UAAW5P,EAAMA,EAAIoM,MAASvM,EAC9BkL,WAAYtB,KAAMzJ,QAIxB,yBAAKwJ,UAAWC,KAAMqH,UACpB,yBAAKtH,UAAWC,KAAMsH,KACnBX,GACC,0BAAM5G,UAAU,2BAA2B4G,GAE7C,kBAAC,gBAAY,CAACvO,KAAK,aAErB,kBAAC,UAAM,CACL0J,SAAS,SACT1J,KAAK,UACLmP,KAAK,QACLC,UAAWjR,EACXuN,QAzEO,YACJ,OAAJpK,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,OAAsB,KAAd1B,EAAK0B,KACtBjD,EAASW,GAAe,GAAD,mBAAKxC,GAAK,CAAEC,EAAKA,MAExCiK,EV7FmB,SU6FE,CAAEK,SAAS,MAuE3B/J,M,wCCtFI2Q,GA9DU,SAAH,GAA+B,IAA1BnP,EAAI,EAAJA,KAAMoP,EAAa,EAAbA,cACzBvP,EAAWuH,KACXc,EAAWC,eACX5K,EAAWwN,eAETxK,EAAW+G,IAAY,SAAA5B,GAAK,OAAIA,EAAMX,sBAAtCxE,OAAM,EAEM6M,aAAQ,CAC1BtN,KAAME,EAAKF,KACX0E,KAAMxE,IAFCqP,EAGP,kBAHc,GA2BhB,OACE,oCACG9O,GACC,kBAAC,GAAK,CAAC6K,QAVG,WACdlD,EX/CqB,IW+CD,CAAEK,SAAS,IAC/B1I,EAAS,CACPC,KhBhDqC,iCgBuDV+L,KAAMrN,GAC7B,kBAAC,GAAiB,OAGtB,yBAAKiJ,UAAWC,KAAM9G,WAAY4K,QA7BvB,WACbtD,EAAS,GAAD,OXxBoB,eWyBP,YAAIlI,EAAKa,KAC5B,CACE0H,SAAS,EACTjE,MAAO,CACLgL,WAAY/R,KAIlBsC,EAAS,CACPC,KhB1CoC,gCgB4DeoN,IAAKmC,GACtD,yBAAKnF,IAAKlK,EAAKqK,QACf,yBAAK5C,UAAWC,KAAM6H,sBACpB,0BAAM9H,UAAU,4BAA4BzH,EAAK4N,OACjD,kBAAC,gBAAY,CAAC9N,KAAK,aAErB,yBAAK2H,UAAWC,KAAM8H,sBACpB,8BAAOxP,EAAK8C,MACXsM,GACC,kBAAC,WAAO,CACNK,MAAOL,EACPH,KAAK,UACLjG,WAAYtB,KAAMgI,yBC0EjBC,GAxIW,WACxB,IAAM3P,EAAOsH,IAAY,SAAA5B,GAAK,OAAIA,EAAMZ,qBAAmB,EAEnCwC,IAAY,SAAA5B,GAAK,OAAIA,EAAMrB,qBAA3CrG,EAAK,EAALA,MAAOC,EAAG,EAAHA,IAAG,EAEgBmK,mBAAS1K,GAAgB,oBAApDkS,EAAS,KAAEC,EAAY,KAExBC,EAAS3C,iBAAuB,MAEhC4C,EAAW5C,iBAAuB,MAElC6C,EAAU7C,iBAAuB,MAEjC8C,EAAwB3B,mBAAQ,WACpC,OAAOtO,EAAKA,KAAK4E,QAAO,SAACJ,GAAgB,OAAKA,EAAK1E,OAASpC,OAC3D,CAACsC,IAEEkQ,EAAuB5B,mBAAQ,WACnC,OAAOtO,EAAKA,KAAK4E,QAAO,SAACJ,GAAgB,OAAKA,EAAK1E,OAASpC,OAC3D,CAACsC,IAEEmQ,EAAsB7B,mBAAQ,WAClC,OAAOtO,EAAKA,KAAK4E,QAAO,SAACJ,GAAgB,OAAKA,EAAK1E,OAASpC,OAC3D,CAACsC,IA0BEoQ,EAAqB9B,mBAAQ,WACjC,IAAMmB,EAAa,GAQnB,OAPEzR,EAAM2C,KAAI,SAAC6D,GACHA,EAAK3D,OAAO4O,IAChBA,EAAMjL,EAAK3D,KAAO,GAEpB4O,EAAMjL,EAAK3D,KAAO4O,EAAMjL,EAAK3D,KAAO,KAGjC4O,IACN,CAACzR,IAEEqS,EAAc/B,mBAAQ,WAC1B,IAAMmB,EAAa,GAInB,OAHGxR,IACDwR,EAAMxR,EAAI4C,KAAO,GAEZ4O,IACN,CAACxR,IAEJ,OACE,6BAASwJ,UAAWC,KAAM4I,uBACxB,yBAAK7I,UAAWC,KAAM6I,QACpB,wBAAI9I,UAAU,6BAA6BjJ,IAE7C,yBAAKiJ,UAAWC,KAAM8I,gBACpB,kBAAC,OAAG,CACFrH,MAAOzL,EACP+S,OAAQb,IAAclS,EACtB8N,QAAS,WACPqE,EAAanS,GAtDK,WAAO,IAAD,EAClB,QAAd,EAAAoS,EAAOY,eAAO,OAAd,EAAgBC,eAAe,CAAEC,SAAU,WAsDnCC,KAGDrS,GAEH,kBAAC,OAAG,CACF2K,MAAOzL,EACP+S,OAAQb,IAAclS,EACtB8N,QAAS,WACPqE,EAAanS,GA5DO,WAAO,IAAD,EAClB,QAAhB,EAAAqS,EAASW,eAAO,OAAhB,EAAkBC,eAAe,CAAEC,SAAU,WA4DrCE,KAGDtS,GAEH,kBAAC,OAAG,CACF2K,MAAOzL,EACP+S,OAAQb,IAAclS,EACtB8N,QAAS,WACPqE,EAAanS,GAlEM,WAAO,IAAD,EAClB,QAAf,EAAAsS,EAAQU,eAAO,OAAf,EAAiBC,eAAe,CAAEC,SAAU,WAkEpCG,KAGDvS,IAGL,yBAAKiJ,UAAWC,KAAMsJ,mBAAoBC,SArE7B,SAAC7K,GAAgB,IAAD,GACf,QAAZ,EAAAA,EAAMkD,cAAM,aAAZ,EAAc4H,YAAa,KAC7BrB,EAAanS,GAEX0I,EAAMkD,OAAO4H,UAAY,KAAO9K,EAAMkD,OAAO4H,WAAa,KAC5DrB,EAAanS,GAEX0I,EAAMkD,OAAO4H,UAAY,KAC3BrB,EAAanS,KA8DX,yBAAK+J,UAAWC,KAAM6I,OAAQrD,IAAK4C,GACjC,wBAAIrI,UAAU,8BAA8BjJ,IAE9C,yBAAKiJ,UAAWC,KAAMyJ,iBACnBlB,EAAQtP,KAAI,SAAA1C,GAAG,OACd,kBAAC,GAAI,CAACiO,IAAKjO,EAAI4C,IAAKb,KAAM/B,EAAKmR,cAAeiB,EAAYpS,EAAI4C,WAGlE,yBAAK4G,UAAWC,KAAM6I,OAAQrD,IAAK6C,GACjC,wBAAItI,UAAU,8BAA8BjJ,IAE9C,yBAAKiJ,UAAWC,KAAMyJ,iBACnBjB,EAAOvP,KAAI,SAAAyQ,GAAK,OACf,kBAAC,GAAI,CAAClF,IAAKkF,EAAMvQ,IAAKb,KAAMoR,EAAOhC,cAAegB,EAAmBgB,EAAMvQ,WAG/E,yBAAK4G,UAAWC,KAAM6I,OAAQrD,IAAK8C,GACjC,wBAAIvI,UAAU,8BAA8BjJ,IAE9C,yBAAKiJ,UAAWC,KAAMyJ,iBACnBhB,EAAMxP,KAAI,SAAA0Q,GAAI,OACb,kBAAC,GAAI,CAACnF,IAAKmF,EAAKxQ,IAAKb,KAAMqR,EAAMjC,cAAegB,EAAmBiB,EAAKxQ,cCzHrEyQ,GAXE,WACf,OACE,0BAAM7J,UAAWC,KAAM2J,MACrB,yBAAK5J,UAAWC,KAAMtI,MACpB,kBAAC,GAAiB,MAClB,kBAAC,GAAiB,SCIXmS,GAVI,WACjB,OACE,yBAAK9J,UAAWgB,KAAYC,sBAC1B,uBAAGjB,UAAS,UAAKgB,KAAYE,sBAAqB,gCAC/CnK,MCgGMgT,GA1FS,WACtB,IAAM3R,EAAWuH,KACXc,EAAWC,eAET/G,EAASkG,IAAY,SAAA5B,GAAK,OAAIA,EAAMP,eAApC/D,KAAI,EAEcgH,mBAAS,IAAG,oBAA9BtF,EAAI,KAAE2O,EAAO,OACarJ,mBAAS,IAAG,oBAAtC4C,EAAQ,KAAEC,EAAW,OACD7C,mBAAS,IAAG,oBAAhCrF,EAAK,KAAEsF,EAAQ,KAEvBC,qBAAU,WACJ5I,aAAaC,QAAQ,iBACvBuI,EfxBmB,SewBE,CAAEK,SAAS,OAIpCD,qBAAU,WACLlH,IACDqQ,EAAQrQ,EAAK0B,MACbuF,EAASjH,EAAK2B,UAEf,CAAC3B,IAEJ,IAMMsQ,EAAa,SAAC7I,GAClB,IAAM3J,EAAO,CACX4D,KAAMA,EACNC,MAAOA,EACPiI,SAAUA,GAEZnC,EAAEC,iBACFjJ,EAAS6C,GAAoBxD,IAC7BsJ,MAAMhK,KAGR,OACE,0BAAMiJ,UAAWgB,KAAYkJ,iCAAkC/I,SAAU8I,GACvE,kBAAC,SAAK,CACJ1I,WAAYP,KAAYQ,4BACxBC,YAAa1K,GACbsE,KAAK,OACL8O,KAAK,WACLzI,MAAOrG,EACPsG,SAAU,SAACC,GACToI,EAAQpI,EAAGC,OAAOH,UAGtB,kBAAC,cAAU,CACTH,WAAYP,KAAYQ,4BACxBnG,KAAK,QACL+O,QAAM,EACN1I,MAAOpG,EACPqG,SAAU,SAACC,GACThB,EAASgB,EAAGC,OAAOH,UAGvB,kBAAC,iBAAa,CACZH,WAAYP,KAAYQ,4BACxBnG,KAAK,WACL8O,KAAK,WACLzI,MAAO6B,EACP5B,SAAU,SAACC,GACT4B,EAAY5B,EAAGC,OAAOH,UAG1B,kBAAC,UAAM,CACLrJ,KAAK,UACLkJ,WAAU,UAAKP,KAAYc,kBAAiB,YAAId,KAAYqJ,wBAC5DtI,SAAS,SACTgC,QAASkG,GAERlT,GAEH,kBAAC,UAAM,CACLsB,KAAK,UACLkJ,WAAYP,KAAYc,kBACxBC,SAAS,SACTgC,QA3Da,WACjBiG,EAAQrQ,EAAK0B,MACbmI,EAAY,IACZ5C,EAASjH,EAAK2B,SA0DTvE,MC5CMuT,GA5CS,WACtB,OACE,0BAAMtK,UAAWgB,KAAYuJ,6BAC3B,yBAAKvK,UAAWgB,KAAYwJ,oCAC1B,yBAAKxK,UAAWgB,KAAYyJ,mCAC1B,wBAAIzK,UAAWgB,KAAY0J,sCACzB,4BACE,kBAAC,IAAO,CAACzN,GAAG,GAAG0N,KAAG,IACf,gBAAGC,EAAQ,EAARA,SAAQ,OACV,0BAAM5K,UAAS,qCAAgC4K,EAAW,qBAAuB,wBAC9E7T,QAKT,4BACE,kBAAC,IAAO,CAACkG,GhBtBY,oBgBuBlB,gBAAG2N,EAAQ,EAARA,SAAQ,OACV,0BAAM5K,UAAS,qCAAgC4K,EAAW,qBAAuB,wBAC9E7T,QAKT,4BACE,kBAAC,IAAO,CAACkG,GhBhCI,YgBiCV,gBAAG2N,EAAQ,EAARA,SAAQ,OACV,0BAAM5K,UAAS,qCAAgC4K,EAAW,qBAAuB,wBAC9E7T,SAMX,uBAAGiJ,UAAS,UAAKgB,KAAY6J,uCAAsC,iCAChE9T,KAGL,kBAAC,KAAM,SC6EA+T,GA7GU,WACvB,IAAM1S,EAAWuH,KACXc,EAAWC,eAAc,EAELC,mBAAS,IAAG,oBAA9BtF,EAAI,KAAE2O,EAAO,OACarJ,mBAAS,IAAG,oBAAtC4C,EAAQ,KAAEC,EAAW,OACD7C,mBAAS,IAAG,oBAAhCrF,EAAK,KAAEsF,EAAQ,KAEfjH,EAASkG,IAAY,SAAA5B,GAAK,OAAIA,EAAMP,eAApC/D,KAAI,EAEuCkG,IAAY,SAAA5B,GAAK,OAAIA,EAAMN,iBAAtElC,EAAmB,EAAnBA,oBAAqBC,EAAiB,EAAjBA,kBAE7BmF,qBAAU,WACRzI,EAAS4C,QACR,CAAC5C,IAEJyI,qBAAU,YACC,OAAJlH,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,OAAsB,KAAd1B,EAAK0B,OACtBjD,EAAS,CACPC,KlC3BuB,oBkC6BzBD,EAAS,CACPC,KtC9BkB,esCgCpBoI,EjBnCsB,WiBmCC,CAAEK,SAAS,OAEnC,CACG,OAAJnH,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,KACNoF,EACArI,IAGFyI,qBAAU,WACLpF,IACDrD,EAAS,CACPC,KhC9C0B,uBgCgD5BoI,EjBnDmB,SiBmDE,CAAEK,SAAS,KAE/BpF,GACDqF,MAAMhK,MAEP,CACD0E,EACAC,EACAtD,IAaF,OACE,0BAAM4H,UAAWgB,KAAYC,sBAC3B,0BAAMjB,UAAWgB,KAAYE,sBAAuBC,SAZtC,SAACC,GACjB,IAAM3J,EAAO,CACX4D,KAAMA,EACNC,MAAOA,EACPiI,SAAUA,GAEZnC,EAAEC,iBACFjJ,EAASmD,GAAmB9D,MAMxB,wBAAIuI,UAAS,UAAKgB,KAAYM,cAAa,gCACxCvK,IAEH,kBAAC,SAAK,CACJ0K,YAAa1K,GACbwK,WAAYP,KAAYQ,4BACxBnG,KAAK,OACLqG,MAAOrG,EACPsG,SAAU,SAACC,GACToI,EAAQpI,EAAGC,OAAOH,UAGtB,kBAAC,cAAU,CACTH,WAAYP,KAAYQ,4BACxBnG,KAAK,QACLqG,MAAOpG,EACPqG,SAAU,SAACC,GACThB,EAASgB,EAAGC,OAAOH,UAGvB,kBAAC,iBAAa,CACZH,WAAYP,KAAYQ,4BACxBnG,KAAK,WACLqG,MAAO6B,EACP5B,SAAU,SAACC,GACT4B,EAAY5B,EAAGC,OAAOH,UAG1B,kBAAC,UAAM,CACLrJ,KAAK,UACLkJ,WAAYP,KAAYc,kBACxBC,SAAS,UAERhL,GAEH,uBAAGiJ,UAAS,UAAKgB,KAAYM,cAAa,sDACvCvK,EACD,kBAAC,IAAI,CACHiJ,UAAU,YAAY/C,GjBjHT,UiBmHZlG,QCFEgU,GApGW,WACxB,IAAM3S,EAAWuH,KACXc,EAAWC,eAAc,EAEGC,mBAAS,IAAG,oBAAtC4C,EAAQ,KAAEC,EAAW,OACH7C,mBAAS,IAAG,oBAA9B/B,EAAI,KAAEoM,EAAO,KAEbrR,EAASkG,IAAY,SAAA5B,GAAK,OAAIA,EAAMP,eAApC/D,KAAI,EAE+BkG,IAAY,SAAA5B,GAAK,OAAIA,EAAMR,mBAA9D3C,EAAe,EAAfA,gBAAiBD,EAAa,EAAbA,cAEzBgG,qBAAU,WACRzI,EAAS4C,QACR,CAAC5C,IAEJyI,qBAAU,YACC,OAAJlH,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,OAAsB,KAAd1B,EAAK0B,OACtBjD,EAAS,CACPC,KnCzBuB,oBmC2BzBD,EAAS,CACPC,KvC5BkB,euC8BpBoI,ElBjCsB,WkBiCC,CAAEK,SAAS,OAEnC,CACG,OAAJnH,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,KACNoF,EACArI,IAGFyI,qBAAU,WACL/F,IACD1C,EAAS,CACPC,KrCzC4B,yBqC2C9BoI,ElBjDmB,SkBiDE,CAAEK,SAAS,KAE/BjG,GACDkG,MAAMhK,MAEP,CACD+D,EACAD,EACAzC,IAYF,OACE,0BAAM4H,UAAWgB,KAAYC,sBAC3B,0BAAMjB,UAAWgB,KAAYE,sBAAuBC,SAXvC,SAACC,GAChB,IAAM3J,EAAO,CACX8L,SAAUA,EACVvL,MAAO4G,GAETwC,EAAEC,iBACFjJ,ErCV+B,SAACX,GAClC,OAAO,SAACW,GACNA,EAAS,CACPC,KAxDgC,2BA0DlCb,GAAcC,GAAMH,MAAK,WACvBc,EAAS,CACPC,KA3D8B,8BA6D/BG,OAAM,SAAAyB,GACP7B,EAAS,CACPC,KA9D4B,uBA+D5BvB,QAASmD,EAAMnD,cqCFVmU,CAAoBxT,MAMzB,wBAAIuI,UAAS,UAAKgB,KAAYM,cAAa,gCACxCvK,IAEH,kBAAC,iBAAa,CACZwK,WAAYP,KAAYQ,4BACxBC,YAAa1K,GACbsE,KAAK,WACLqG,MAAO6B,EACP5B,SAAU,SAACC,GACT4B,EAAY5B,EAAGC,OAAOH,UAG1B,kBAAC,SAAK,CACJH,WAAYP,KAAYQ,4BACxBC,YAAa1K,GACbsE,KAAK,OACLqG,MAAO9C,EACP+C,SAAU,SAACC,GACToJ,EAAQpJ,EAAGC,OAAOH,UAGtB,kBAAC,UAAM,CACLrJ,KAAK,UACLkJ,WAAYP,KAAYc,kBACxBC,SAAS,UAERhL,GAEH,uBAAGiJ,UAAS,UAAKgB,KAAYM,cAAa,sDACvCvK,GACD,kBAAC,IAAI,CACHiJ,UAAU,YAAY/C,GlBvGT,UkByGZlG,QCdEmU,GAhFqB,SAAH,GAAmB,IAAdC,EAAO,EAAPA,QAC9B1K,EAAWC,eACXtI,EAAWuH,KAGXzC,EAFWoG,eAEKf,UnBnBC,ImBqBf5I,EAASkG,IAAY,SAAA5B,GAAK,OAAIA,EAAMP,eAApC/D,KAEAwB,EAAkB0E,IAAY,SAAA5B,GAAK,OAAIA,EAAMP,eAA7CvC,cAEAV,EAAaoF,IAAY,SAAA5B,GAAK,OAAIA,EAAMT,eAAxC/C,SAAQ,EAOZoF,IAAY,SAAA5B,GAAK,OAAIA,EAAMT,eAJ7BnD,EAAkB,EAAlBA,mBACAD,EAAoB,EAApBA,qBACAI,EAAU,EAAVA,WACAD,EAAY,EAAZA,aA4DF,OAzDAsG,qBAAU,WACRzI,EAAS4C,QACR,CAAC5C,IAEJyI,qBAAU,WACL1F,IACGA,IAAkBpE,GACpBqB,GxCuEC,SAACA,GACNA,EAAS,CACPC,KAxGuB,kBA0GzBP,KAAeR,MAAK,SAAAiB,GAClBN,aAAa2B,QACX,cACArB,EAAKsB,YAAYC,MAAM,WAAW,IAEpC7B,aAAa2B,QACX,eACArB,EAAKT,cAEPM,EAAS,CACPC,KAnHqB,gBAoHrBsB,KAAMpB,OAEPC,OAAM,SAAAyB,GACP7B,EAAS,CACPC,KAvHmB,cAwHnBvB,QAASmD,EAAMnD,gBwCzFf2J,EnBxCiB,SmBwCI,CAAEK,SAAS,EAAMjE,MAAO,CAAEK,aAGlD,CACD9E,EACA+C,EACAsF,IAGFI,qBAAU,WACLrG,IACDpC,EAAS,CACPC,KxC1CmB,gBwC4CrBoI,EnBtDmB,SmBsDE,CAAEK,SAAS,EAAMjE,MAAO,CAAEK,WAE9C3C,GACDnC,EAAS,CACPC,KxChDmB,kBwCmDtB,CACDD,EACAoC,EACAD,EACAkG,IAGFI,qBAAU,WACLzG,IACDhC,EAAS,CACPC,KxCjEkB,ewCmEpBD,EAAS4C,OAERX,IACDjC,EAAS,CACPC,KxCvEkB,ewCyEpBoI,EnB/EmB,SmB+EE,CAAEK,SAAS,EAAMjE,MAAO,CAAEK,aAEhD,CACD9E,EACAiC,EACAD,EACAqG,KAGa,OAAJ9G,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,OAAsB,KAAd1B,EAAK0B,MAAgBZ,EAAY0Q,EAAU,6BAAMpU,K,oBCwD7DqU,GApIG,WAChB,IAAMhT,EAAWuH,KACT2C,EAAOH,eAAPG,GAERzB,qBAAU,WACRzI,EAASgE,GAAmBkG,MAC3B,CAAClK,EAAUkK,IAAK,IAEX/I,EAAUsG,IAAY,SAAA5B,GAAK,OAAIA,EAAMJ,oBAArCtE,MACAhB,EAASsH,IAAY,SAAA5B,GAAK,OAAIA,EAAMZ,qBAApC9E,KAEFhC,EAAqCsQ,mBAAQ,WAE/C,GAAQ,OAALtN,QAAK,IAALA,OAAK,EAALA,EAAOP,YAAa,CACrB,IAAIqS,EAAa,GACjB9R,EAAOP,YAAYE,KAAI,SAAC6D,GACtB,IAAI5D,EAAaZ,EAAK6J,MAAK,SAACjJ,GAAsB,OAAKA,EAAWC,MAAQ2D,KACtE5D,IACGkS,EAAMtO,KACTsO,EAAMtO,GAAK,eACN5D,EAAW,CACdwO,cAAe,KAGnB0D,EAAMtO,GAAM4K,cAAgB0D,EAAMtO,GAAM4K,cAAgB,MAG5D,IAAIhR,EAAS,GAOb,OANA4C,EAAOP,YAAYE,KAAI,SAAC6D,GAClBsO,EAAMtO,KACRpG,EAAO2U,KAAKD,EAAMtO,WACXsO,EAAMtO,OAGVpG,KAIX,CAAC4B,EAAMgB,IAGHqN,EAAMC,mBAAQ,WAEhB,GAAGtQ,EACD,OAAOA,EAAOgV,QACZ,SAACC,EAAoBzO,GAAI,OACzBA,EAAMoJ,MAAQpJ,EAAM4K,cAAgB6D,IAAY,KAGtD,CAACjV,IAGGS,EAAS6P,mBAAQ,WAEnB,GAAQ,OAALtN,QAAK,IAALA,OAAK,EAALA,EAAOvC,OACR,OAAQuC,EAAOvC,QACb,KAAKZ,EACH,OAAOW,GACT,KAAKX,EACH,OAAOW,GACT,KAAKX,EACH,OAAOW,GACT,QACE,OAAOwC,EAAOvC,UAItB,CAACuC,IAGH,OACE,0BAAMyG,UAAWC,KAAMwL,sBACrB,oCACE,uBAAGzL,UAAS,wCAAmCC,KAAMyL,oBAAoB,IAChE,OAALnS,QAAK,IAALA,OAAK,EAALA,EAAOC,QAEX,uBAAGwG,UAAS,qCAAgCC,KAAM0L,kBAC1C,OAALpS,QAAK,IAALA,OAAK,EAALA,EAAO8B,MAEV,uBAAG2E,UAAS,sCAAiCC,KAAM2L,oBAChD5U,GAEH,uBAAGgJ,UAAS,qCAAgCC,KAAM4L,sBAC/C9U,IAEH,6BAASiJ,UAAWC,KAAM6L,iBACvBvV,GAASA,EAAM2C,KAAI,SAAC6D,EAAMK,GACzB,OACE,wBAAIqH,IAAKrH,EAAO4C,UAAWC,KAAM8L,oBAC/B,yBAAK/L,UAAWC,KAAM+L,qBACpB,yBAAKhM,UAAWC,KAAMgM,4BACpB,yBAAKjM,UAAWC,KAAMiM,uBACpB,yBAAKzJ,IAAK1F,EAAMoP,aAAcxJ,IAAK5F,EAAM1B,QAE3C,uBAAG2E,UAAS,sCAAiCC,KAAMmM,uBAChDrP,EAAK1B,OAGV,yBAAK2E,UAAWC,KAAMoM,4BACpB,0BAAMrM,UAAS,wCAAmCC,KAAMqM,uBAAuB,UACzEvP,EAAK4K,cAAa,cAAM5K,EAAKoJ,QAEnC,kBAAC,gBAAY,CACX9N,KAAK,mBAQnB,6BAAS2H,UAAS,sCAAiCC,KAAMsM,oBACvD,uBAAGvM,UAAS,mDACV,kBAAC,iBAAa,CACZwM,KAAM,IAAIC,MAAU,OAALlT,QAAK,IAALA,OAAK,EAALA,EAAOmT,WAAiB,OAALnT,QAAK,IAALA,OAAK,EAALA,EAAOmT,UAAY,IACrD1M,UAAS,qDAGb,yBAAKA,UAAWC,KAAMoM,4BACpB,0BAAMrM,UAAS,wCAAmCC,KAAMqM,uBACrD1F,GAEH,kBAAC,gBAAY,CACXvO,KAAK,iB,oBCFJsU,GAnHe,SAAH,GAA2B,IAAtBpT,EAAK,EAALA,MAAOqT,EAAQ,EAARA,SAC/B9W,EAAWwN,eAET/K,EAASsH,IAAY,SAAA5B,GAAK,OAAIA,EAAMZ,qBAApC9E,KAEFhC,EAAQsQ,mBAAQ,kBACpBtN,EAAMP,YAAYE,KAAI,SAACoJ,GAEnB,OAAO/J,EAAK6J,MAAK,SAACrF,GAAgB,OAAKA,EAAK3D,MAAQkJ,UAGxD,CAAC/J,EAAKA,KAAMgB,IAGRsT,EAAehG,mBAAQ,kBAC3BtQ,EAAMuW,WAAMrW,EjD/Be,KiDgC3B,CAACF,IAGGqQ,EAAMC,mBAAQ,kBAClBtQ,EAAMgV,QACJ,SAAC3E,EAAa7J,GAA4B,OAAKA,EAAMoJ,MAAQS,IAAK,KAEpE,CAACrQ,IAGGS,EAAS6P,mBAAQ,WAEnB,GAAQ,OAALtN,QAAK,IAALA,OAAK,EAALA,EAAOvC,OACR,OAAQuC,EAAOvC,QACb,KAAKZ,EACH,OAAOW,GACT,KAAKX,EACH,OAAOW,GACT,KAAKX,EACH,OAAOW,GACT,QACE,OAAOwC,EAAOvC,UAItB,CAACuC,IAGGwT,EAAclG,mBAAQ,kBAC1BtN,EAAMvC,SAAWZ,EACb6J,KAAM+M,uBAAyB/M,KAAMgN,4BACvC,CAAC1T,IAIL,OACE,kBAAC,IAAI,CACH0D,GAAE,UAAKnH,EAASyM,SAAQ,YAAIhJ,EAAMC,QAClCqD,MAAO,CAAE/G,SAAUA,GACnBkK,UAAWC,KAAMiN,iBAEjB,yBAAKlN,UAAU,OACb,yBAAKA,UAAWC,KAAMkN,mBACpB,uBAAGnN,UAAU,iCAA+B,IACxCzG,EAAMC,QAEV,kBAAC,iBAAa,CACZgT,KAAM,IAAIC,KAAKlT,EAAMmT,WACrB1M,UAAU,sDAIhB,uBAAGA,UAAS,UAAKC,KAAMmN,iBAAgB,gCACpC7T,EAAM8B,MAERuR,GAAY5V,GACX,uBAAGgJ,UAAS,UAAKC,KAAMoN,kBAAiB,YAAIN,EAAW,iCACpD/V,GAGL,yBAAKgJ,UAAWC,KAAMqN,iBACpB,yBAAKtN,UAAWC,KAAMsN,uBACnBV,GAAgBA,EAAa3T,KAAI,SAAC6D,EAA8ByQ,GAC/D,OACE,wBACE/I,IAAK+I,EACLvN,MAAO,CAAEwN,aAAc,IACvBzN,UAAWC,KAAMyN,0BACjB,yBACEzN,MAAO,CACL0N,QjDtGW,IiDsGmBH,EAAI,GAAMjU,EAAMP,YAAYkO,OjDtG/C,EiDsG0E,EACrF,MAAQ,KAEVzE,IAAK1F,EAAMoP,aACXxJ,IAAK5F,EAAM1B,KACX2E,UAAWC,KAAM2N,6BAElBrU,EAAMP,YAAYkO,OjD7GJ,EiD6G+B,GAAY2G,IAAPL,GACjD,0BAAMxN,UAAS,UAAKC,KAAM6N,iCAAgC,iCAA+B,WAClFvU,EAAMP,YAAYkO,OjD/GZ,SiDsHvB,yBAAKlH,UAAWC,KAAM8N,kBACpB,0BAAM/N,UAAS,iCACZ4G,GAEH,kBAAC,gBAAY,CACXvO,KAAK,gB,oBCnGF2V,GAlBgB,SAAH,GAA4B,IAAtBzV,EAAI,EAAJA,KAAMqU,EAAQ,EAARA,SACtC,OACE,yBAAK5M,UAAW4M,EAAQ,UAAM3M,KAAMgO,yBAAwB,YAAIhO,KAAMiO,iBAAoBjO,KAAMiO,iBAC7F3V,EAAK+D,QAAU/D,EAAK+D,OAAOpD,KAC1B,SACEiV,EACA/Q,GAAa,OAEf,kBAAC,GAAU,CACTqH,IAAKrH,EACL7D,MAAO4U,EACPvB,SAAUA,S,oBCiJLwB,GAvJkB,SAAH,GAAgB,IAAX7V,EAAI,EAAJA,KAC3BzC,EAAWwN,eAEX+K,EAAkBxH,mBAAQ,kBAC9BtO,EAAK+D,OAAOa,QACV,SAAC5D,GAAa,OAAKA,EAAMvC,SAAWZ,KAAkB8C,KACpD,SAACK,GAAa,OAAKA,EAAMC,YAC7B,CAACjB,EAAK+D,SAGFgS,EAAmBzH,mBAAQ,kBAC/BtO,EAAK+D,OAAOa,QACV,SAAC5D,GAAa,OAAKA,EAAMvC,SAAWZ,KAAqB8C,KACvD,SAACK,GAAa,OAAKA,EAAMC,YAC7B,CAACjB,EAAK+D,SAGFiS,EAAuB1H,mBAAQ,kBACnCwH,EAAgBvB,WAAMrW,EnD/BY,MmDgClC,CAAC4X,IAGGG,EAAqB3H,mBAAQ,kBACjCwH,EAAgBvB,MnDpCkB,GACF,MmDoChC,CAACuB,IAGGI,EAAwB5H,mBAAQ,kBACpCyH,EAAiBxB,WAAMrW,EnDzCW,MmD0ClC,CAAC6X,IAGGI,EAAsB7H,mBAAQ,kBAClCyH,EAAiBxB,MnD9CiB,GACF,MmD8ChC,CAACwB,IAGH,OACE,oCACE,yBAAKtO,UAAWC,KAAM0O,cACpB,iCACE,uBAAG3O,UAAU,8BACVjJ,IAEH,yBAAKiJ,UAAS,UAAKC,KAAM2O,oBAAmB,YAAI3O,KAAM4O,2BACpD,wBAAI7O,UAAWC,KAAM6O,iBAClBP,EAAqBrV,KAAI,SAAC6D,EAAcK,GAAa,OACpD,wBACEqH,IAAKrH,EACL4C,UAAWC,KAAM8O,iBAEjB,kBAAC,IAAI,CACH9R,GAAE,UAAKF,GACPF,MAAO,CACL/G,SAAUA,GAEZkK,UAAWC,KAAM+O,yBAEjB,0BAAMhP,UAAU,iCACbjD,SAMX,wBAAIiD,UAAWC,KAAM6O,iBAClBN,EAAmBtV,KAAI,SAAC6D,EAAWK,GAAU,OAC5C,wBACEqH,IAAKrH,EACL4C,UAAWC,KAAM8O,iBAEjB,kBAAC,IAAI,CACH9R,GAAE,UAAKF,GACPF,MAAO,CACL/G,SAAUA,GAEZkK,UAAWC,KAAM+O,yBAEjB,0BAAMhP,UAAU,iCACbjD,WAQf,iCACE,uBAAGiD,UAAU,8BACVjJ,IAEH,yBAAKiJ,UAAWC,KAAM2O,qBACpB,wBAAI5O,UAAWC,KAAM6O,iBAClBL,EAAsBvV,KAAI,SAAC6D,EAAcK,GAAa,OACrD,wBACEqH,IAAKrH,EACL4C,UAAWC,KAAM8O,iBAEjB,kBAAC,IAAI,CACH9R,GAAE,UAAKF,GACPF,MAAO,CAAE/G,SAAUA,GACnBkK,UAAWC,KAAMgP,0BAEjB,0BAAMjP,UAAU,iCACbjD,SAMX,wBAAIiD,UAAWC,KAAM6O,iBAClBJ,EAAoBxV,KAAI,SAAC6D,EAAcK,GAAa,OACnD,wBACEqH,IAAKrH,EACL4C,UAAWC,KAAM8O,iBAEjB,kBAAC,IAAI,CACH9R,GAAE,UAAKF,GACPF,MAAO,CAAE/G,SAAUA,GACnBkK,UAAWC,KAAMgP,0BAEjB,0BAAMjP,UAAU,iCACbjD,YASjB,iCACE,uBAAGiD,UAAU,8BACVjJ,IAEH,uBAAGiJ,UAAS,UAAKC,KAAMiP,kBAAiB,iCACrC3W,EAAK4W,QAGV,iCACE,uBAAGnP,UAAU,8BACVjJ,IAEH,uBAAGiJ,UAAS,UAAKC,KAAMiP,kBAAiB,iCACrC3W,EAAK6W,eCpGDC,GA/CE,WACf,IAAMjX,EAAWuH,KAAc,EAESE,IAAY,SAAA5B,GAAK,OAAIA,EAAML,sBAA3DzB,EAAW,EAAXA,YAAalC,EAAK,EAALA,MAAOnD,EAAO,EAAPA,QAc5B,OAZA+J,qBAAU,WAKR,OAJAzI,EAAS,CACPC,KrClB6B,sBqCmB7BlB,IAAI,GAAD,OpDpBsB,kCoDoBF,iBAElB,WACLiB,EAAS,CACPC,KrCnByB,yBqCsB5B,CAACD,IAGF,yBAAK4H,UAAWgB,KAAYsO,aACxBnT,GAAepF,KACdkD,GACD,uBAAG+F,UAAS,UAAKgB,KAAYuO,yBAAwB,4CAClDtV,GAGJkC,KAAiBrF,GAChB,0BAAMkJ,UAAWgB,KAAYwO,eAC3B,6BAASxP,UAAWgB,KAAYyO,kBAC9B,uBAAGzP,UAAS,UAAKgB,KAAY0O,sBAAqB,+BAC/C3Y,IAEH,kBAAC4Y,GAAS,CACRpX,KAAMzB,EACN8V,UAAU,KAGd,6BAAS5M,UAAWgB,KAAY4O,mBAC9B,kBAACC,GAAU,CACTtX,KAAMzB,QCtCLgZ,GARO,WACpB,OACE,0BAAM9P,UAAWgB,KAAY+O,wBAC3B,kBAAC,GAAS,QCmDDC,GA9CU,WACvB,IAAM5X,EAAWuH,KAAc,EAESE,IAAY,SAAA5B,GAAK,OAAIA,EAAMH,wBAA3D3B,EAAW,EAAXA,YAAalC,EAAK,EAALA,MAAOnD,EAAO,EAAPA,QAEtBmZ,EAAoCpJ,mBAAQ,WAChD,GAAI/P,EAAS,CACX,IAAIwF,EAAM,YAAOxF,EAAQwF,QACzB,OAAO,eACFxF,EAAQ,CACXwF,OAAQA,EAAO4T,MAAK,SAACC,EAAKC,GAAK,OAAKA,EAAM5W,OAAS2W,EAAI3W,eAG1D,CAAC1C,IAeJ,OAbA+J,qBAAU,WAMR,OALAzI,EAAS,CACPC,KnC5B+B,wBmC6B/BlB,IAAI,GAAD,OtD9BsB,kCsD8BF,WACvBmH,UAAU,IAEL,WACLlG,EAAS,CACPC,KnC9B2B,2BmCiC9B,CAACD,IAGF,yBAAK4H,UAAWgB,KAAYqP,yBACxBlU,GAAepF,KACdkD,GACD,uBAAG+F,UAAS,UAAKgB,KAAYuO,yBAAwB,4CAClDtV,GAGJkC,GAAe8T,GACd,kBAACN,GAAS,CACRpX,KAAM0X,EACNrD,UAAU,MCyJL0D,GAtKS,WACtB,IAAMxa,EAAWwN,eACX7C,EAAWC,eAEXmH,EAAa/R,EAAS+G,OAAS/G,EAAS+G,MAAMgL,WAC9C0I,EAAgBza,EAAS+G,OAAS/G,EAAS+G,MAAM/G,SAEjD0a,EAAyB,WAC7B/P,GAAU,IAGZ,OACE,oCACE,kBAAC,KAAM,CAAC3K,SAAU+R,GAAc/R,GAC9B,kBAAC,KAAK,CACJ2a,K3BtDe,I2BuDftF,QACE,kBAAC,GAAQ,QAGb,kBAAC,KAAK,CACJsF,K3BzDe,S2B0DftF,QACE,kBAAC,GAAa,QAGlB,kBAAC,KAAK,CACJsF,K3BzD2B,Y2B0D3BtF,QACE,kBAAC,GAAgB,QAGrB,kBAAC,KAAK,CACJsF,K3B7D0B,mB2B8D1BtF,QACE,kBAAC,GAAkB,QAGvB,kBAAC,KAAK,CACJsF,K3BpEyB,kB2BqEzBtF,QACE,kBAAC,GAAiB,QAGtB,kBAAC,KAAK,CACJsF,K3BlFiB,I2BmFjBtF,QACE,kBAAC,GAAU,QAGf,kBAAC,KAAK,CACJsF,K3BpFkB,W2BqFlBtF,QACE,kBAAC,GAAe,CACdA,QACE,kBAAC,GAAe,SAKtB,kBAAC,KAAK,CACJ/N,OAAK,EACL+N,QACE,kBAAC,GAAe,QAGpB,kBAAC,KAAK,CACJsF,K3BrGuB,kB2BsGvBtF,QACE,kBAAC,GAAgB,OAGlBoF,GACC,kBAAC,KAAK,CACJE,KAAI,U3B5Ge,kB2B4GS,QAC5BtF,QACE,kBAAC,GAAK,CACJ7G,SAAS,EACTX,QAAS6M,GAET,kBAAC,GAAS,WAOtB,kBAAC,KAAK,CACJC,KAAI,U3BvHkB,e2BuHG,QACzBtF,QACE,kBAAC,GAAc,QAGnB,kBAAC,KAAK,CACJsF,K3BjIiB,U2BkIjBtF,QACE,kBAAC,GAAU,QAGf,kBAAC,KAAK,CACJsF,K3BpIe,Q2BqIftF,QACE,kBAAC,GAAQ,OAGVoF,GACC,kBAAC,KAAK,CACJE,KAAI,U3B3IO,Q2B2IO,QAClBtF,QACE,kBAAC,GAAK,CACJ7G,SAAS,EACTX,QAAS6M,GAET,kBAAC,GAAS,UAMpB,kBAAC,KAAK,CACJC,KAAI,U3BxJW,Q2BwJG,QAClBtF,QACE,kBAAC,GAAa,QAGlB,kBAAC,KAAK,CACJsF,KAAI,U3BhKqB,kB2BgKG,QAC5BtF,QACE,kBAAC,GAAe,CACdA,QACE,kBAAC,GAAa,WAMvBoF,GACC,kBAAC,KAAM,KACL,kBAAC,KAAK,CACJE,KAAI,U3B3KS,Q2B2KK,QAClBtF,QACE,kBAAC,GAAK,CACJ7G,SAAS,EACTX,QAAS6M,GAET,kBAAC,GAAS,SAIhB,kBAAC,KAAK,CACJC,KAAI,U3BxLmB,kB2BwLK,QAC5BtF,QACE,kBAAC,GAAK,CACJ7G,SAAS,EACTX,QAAS6M,GAET,kBAAC,GAAS,YC9JXE,GA5BH,WACV,IAAMtY,EAAWuH,KACX7J,EAAWwN,eAkBjB,OAhBAzC,qBAAU,WACRzI,EAASD,QACR,CAACC,IAEJyI,qBAAU,WACsC,gBAA3ChL,OAAOC,SAASyM,SAASzI,MAAM,KAAK,GACrC1B,EAAS,CACPC,KjCpBkC,+BiCuBpCD,EAAS,CACPC,KjCvBmC,kCiC0BtC,CAACD,EAAUtC,IAGZ,yBAAKkK,UAAU,qCACb,kBAAC,GAAM,MACP,kBAAC2Q,GAAe,QCpBtBC,qBAAW3M,SAASC,eAAe,SAAU2M,OAC3C,kBAAC,IAAMC,WAAU,KACb,kBAAC,IAAQ,CAAC7S,MAAO8S,IACf,kBAACC,EAAA,EAAW,CAACC,QAASC,KACpB,kBAAC,IAAa,KACZ,kBAAC,GAAG,W9DwHV,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/Z,MAAK,SAAAga,GACjCA,EAAaC,iB,mB+D1InB7b,EAAOC,QAAU,CAAC,OAAS,sBAAsB,MAAQ,qBAAqB,UAAY,yBAAyB,eAAiB,8BAA8B,WAAa,0BAA0B,KAAO,sB,mBCAhND,EAAOC,QAAU,CAAC,gBAAkB,+BAA+B,kBAAoB,iCAAiC,iBAAmB,gCAAgC,kBAAoB,iCAAiC,kBAAoB,iCAAiC,uBAAyB,sCAAsC,0BAA4B,yCAAyC,gBAAkB,+BAA+B,yBAA2B,wCAAwC,2BAA6B,0CAA0C,sBAAwB,qCAAqC,iCAAmC,gDAAgD,iBAAmB,kC,mBCAvvBD,EAAOC,QAAU,CAAC,sBAAwB,qCAAqC,gBAAkB,+BAA+B,OAAS,sBAAsB,mBAAqB,kCAAkC,eAAiB,gC,mBCAvOD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,mBAAqB,kCAAkC,IAAM,mBAAmB,SAAW,wBAAwB,IAAM,mBAAmB,aAAe,4BAA4B,QAAU,uBAAuB,aAAe,8B,mBCA1RD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,cAAgB,6BAA6B,mBAAqB,kCAAkC,wBAA0B,uCAAuC,oBAAsB,qC,mBCA1OD,EAAOC,QAAU,CAAC,cAAgB,6BAA6B,YAAc,2BAA2B,oBAAsB,mCAAmC,yBAA2B,wCAAwC,aAAe,4BAA4B,eAAiB,8BAA8B,cAAgB,+B,kBCA9UD,EAAOC,QAAU,CAAC,qBAAuB,+CAA+C,sBAAwB,gDAAgD,iCAAmC,2DAA2D,4BAA8B,sDAAsD,mCAAqC,6DAA6D,kCAAoC,4DAA4D,qCAAuC,+DAA+D,uCAAyC,iEAAiE,WAAa,qCAAqC,4BAA8B,sDAAsD,cAAgB,wCAAwC,kBAAoB,4CAA4C,uBAAyB,iDAAiD,kBAAoB,4CAA4C,WAAa,qCAAqC,cAAgB,wCAAwC,iBAAmB,2CAA2C,kBAAoB,4CAA4C,uBAAyB,iDAAiD,yBAA2B,mDAAmD,uBAAyB,iDAAiD,sBAAwB,kD,mBCA9kDD,EAAOC,QAAU,CAAC,gBAAkB,+BAA+B,UAAY,yBAAyB,aAAe,4BAA4B,UAAY,yBAAyB,YAAc,6B,mBCAtMD,EAAOC,QAAU,CAAC,WAAa,0BAA0B,qBAAuB,oCAAoC,qBAAuB,oCAAoC,mBAAqB,oC,mBCApMD,EAAOC,QAAU,CAAC,gBAAkB,+BAA+B,yBAA2B,0C,mBCA9FD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,KAAO,sB,mBCApDD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,gBAAkB,iC,mBCArED,EAAOC,QAAU,CAAC,oBAAsB,mCAAmC,gBAAkB,kC","file":"static/js/main.1b2eab9c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/success.5fa6b4ac.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orders_board\":\"style_orders_board__17qFp\",\"orders_board_text\":\"style_orders_board_text__2TeSC\",\"orders_board_li\":\"style_orders_board_li__2l4P8\",\"orders_board_ul\":\"style_orders_board_ul__QBLb1\",\"orders_board_number\":\"style_orders_board_number__2JYcN\",\"orders_board_ready_color\":\"style_orders_board_ready_color__2zohz\",\"orders_board_ready_link\":\"style_orders_board_ready_link__1FMhf\",\"orders_board_in_progress\":\"style_orders_board_in_progress__10rJH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order_info_container\":\"style_order_info_container__LW9jM\",\"order_info_number\":\"style_order_info_number__3l6I7\",\"order_info_name\":\"style_order_info_name__23f4B\",\"order_info_status\":\"style_order_info_status__3AaGy\",\"order_info_compound\":\"style_order_info_compound__1xopc\",\"order_info_body\":\"style_order_info_body__1Atrn\",\"order_info_body_li\":\"style_order_info_body_li__1HUWg\",\"order_info_body_row\":\"style_order_info_body_row__3npQy\",\"order_info_body_image_name\":\"style_order_info_body_image_name__30ZHg\",\"order_info_body_image\":\"style_order_info_body_image__2w74M\",\"order_info_body_name\":\"style_order_info_body_name__6rk-8\",\"order_info_body_item_price\":\"style_order_info_body_item_price__gMi8G\",\"order_info_body_item\":\"style_order_info_body_item__3KTLM\",\"order_info_footer\":\"style_order_info_footer__2Allk\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const Ingredients = {\n  bun: \"bun\",\n  sauce: \"sauce\",\n  main: \"main\"\n}\n\nexport const KeyBoard = {\n  ESCAPE: 'Escape',\n  KEYDOWN: 'keydown'\n}\n\nexport const Methods = {\n  POST: 'POST',\n  GET: 'GET',\n  PATCH: 'PATCH'\n}\n\nexport const OrderStatus = {\n  done: 'done',\n  pending: 'pending',\n  created: 'created',\n}\n\nexport const BunImage = {\n  BUN_1: 'https://code.s3.yandex.net/react/code/bun-01.png',\n  BUN_2: 'https://code.s3.yandex.net/react/code/bun-02.png'\n}","import { Ingredients } from \"../../utils/enum\";\nimport { Ingredient } from \"../../utils/interfaces\";\nimport { TBurgerConstructorActions } from \"../../utils/types\";\nimport { \n  ADD_ITEM, \n  DELETE_ITEM, \n  REPLACE_ITEM,\n  CLEAR_ITEMS \n} from \"./actions\";\n\ntype TСonstructorState = {\n  items: Array<Ingredient>\n  bun?: Ingredient\n}\n\nconst constructorState: TСonstructorState = {\n  items: [],\n  bun: undefined,\n};\n\nexport const constructorReducer = (state = constructorState, action: TBurgerConstructorActions) => {\n  switch (action.type) {\n    case ADD_ITEM: {\n      if (action.item.type === Ingredients.bun) {\n        return { \n          ...state, \n          bun: action.item,\n        };\n      } else return {\n        ...state,\n        items: [\n          ...state.items, \n          action.item,\n        ],\n      };\n    }\n    case REPLACE_ITEM:\n      const newState = { \n        ...state, \n        items: [\n          ...state.items\n        ] \n      };\n      [\n        newState.items[action.from], \n        newState.items[action.to]\n      ] = \n      [\n        newState.items[action.to], \n        newState.items[action.from]\n      ];\n      return newState;\n    case DELETE_ITEM: {\n      return {\n        ...state,\n        items: [...state.items].filter(\n          (item, index) => index !== action.index\n        ),\n      };\n    }\n    case CLEAR_ITEMS: {\n      return {\n        ...state,\n        items: [],\n        bun: undefined\n      };\n    }\n    default:\n      return state;\n  }\n};","export default {\n  Checkout: 'Оформить заказ',\n  CreateBurger: 'Соберите бургер',\n  Buns: 'Булки',\n  Sauces: 'Соусы',\n  Ingredients: 'Наполнители',\n  Constructor: 'Конструктор',\n  OrderList: 'Список заказов',\n  IngredientsDetails: 'Детали ингредиента',\n  PersonalData: 'Личные данные',\n  PersonalAccount: 'Личный кабинет',\n  OrderIdentificator: 'Идентификатор заказа',\n  OrderPreparing: 'Ваш заказ начали готовить',\n  OrderWaiting: 'Дождитесь готовности на орбитальной станции',\n  Error: 'Произошла ошибка',\n  Callories: 'Калории, ккал',\n  Fats: 'Белки, г',\n  Proteins: 'Жиры, г',\n  Carbohydrates: ' Углеводы, г',\n  ForgotPassword: 'Забыли пароль? ',\n  ChangePassword: 'Восстановить пароль',\n  MakeRegistration: 'Зарегистрироваться',\n  NewUser: 'Вы — новый пользователь? ',\n  HaveRegistration: 'Уже зарегистрированы? ',\n  Save: 'Сохранить',\n  Canсel: 'Отмена',\n  ToLogin: 'Войти',\n  Entrance: 'Вход',\n  Exit: 'Выход',\n  Name: 'Имя',\n  OrdersHistory: 'История заказов',\n  Profile: 'Профиль',\n  Registration: 'Регистрация',\n  ResetPasswordTitle: 'Восстановление пароля',\n  InputNewPassword: 'Введите новый пароль',\n  InputEmail: 'Укажите e-mail',\n  InputEmailCode: 'Введите код из письма',\n  ChangingPassword: 'Восстановление пароля',\n  DontForgotPassword: 'Вспомнили пароль? ',\n  PageNotFound: 'Данная страница еще не существует 😪 - возможно она будет добавлена в будущем 💫',\n  ChangePersonalDataInfo: 'В этом разделе вы можете изменить свои персональные данные',\n  SuccessDataSave: 'Данные успешно сохранены',\n  RegistrationError: 'В процессе регистрации возникла ошибка',\n  ResetPasswordError: 'В процессе смены пароля возникла ошибка',\n  JWTError: 'Произошла ошибка 403',\n  AddIngredient: 'Добавьте игредиент 👉 перетащив его 🙌',\n  AddBun: 'Перетащите 🙌 сюда 👉 булку',\n  Loading: 'Загрузка',\n  Ready: 'Готовы:',\n  IsProgress: 'В работе:',\n  IsDoneToday: 'Выполнено за сегодня:',\n  IsDoneForAllTime: 'Выполнено за все время:',\n  Done: 'Выполнен',\n  Created: 'Создан',\n  Pending: 'Готовится',\n  Compound: 'Состав:',\n  Feed: 'Лента заказов'\n}","import localize from \"./localize\";\n\nexport const checkResponse = (result: Response) => {\n  if (!result.ok) {\n    const message = `${localize.Error} ${result.status}`;\n    throw new Error(message);\n  } else return result.json();\n}\n\nexport const request = (url: string, options?: any) => {\n  return fetch(url, options).then(checkResponse);\n}","export const INGREDIENTS_DATA_API_URL = \"https://norma.nomoreparties.space/api\";\nexport const WS_BASE_API_URL = \"wss://norma.nomoreparties.space\";\n\nexport const MAX_ORDERS_VALUE_START = 10;\nexport const MAX_ORDERS_VALUE_END = 20;\nexport const MAX_ITEMS_VALUE = 6;\n\nexport const WEBSOCKET_ERROR = 1000;\nexport const TIMEOUT = 3000;\n\nexport const WEBSOCKET_TOKEN_ERROR_MESSAGE = 'Invalid or missing token';","import { request } from \"./apiFunctions\";\nimport { INGREDIENTS_DATA_API_URL } from \"./const\";\nimport { Methods } from \"./enum\";\nimport { TEmail, TEmailAndPassword, TResetPassword, TUserFullForm } from \"./types\";\n\nexport const getIngredientsMainData = () => {\n  return request(`${INGREDIENTS_DATA_API_URL}/ingredients`)\n};\n\nexport const getOrder = (number?: string) => {\n  return request(`${INGREDIENTS_DATA_API_URL}/orders/${number}`);\n}\n\nexport const createNewOrders = (ingredientsId: string) => {\n  return request(`${INGREDIENTS_DATA_API_URL}/orders`, \n    {\n      method: Methods.POST,\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n        Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\")\n      },\n      body: JSON.stringify({ ingredients: ingredientsId })\n    }\n  );\n};\n\nexport const registerUser = (user: TUserFullForm) => {\n  return request(`${INGREDIENTS_DATA_API_URL}/auth/register`, \n    {\n      method: Methods.POST,\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify({ ...user })\n    }\n  );\n}\n\nexport const loginUser = (user: TEmailAndPassword) => {\n  return request(`${INGREDIENTS_DATA_API_URL}/auth/login`, \n    {\n      method: Methods.POST,\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify({ ...user })\n    }\n  );\n}\n\nexport const logoutUser = () => {\n  return request(`${INGREDIENTS_DATA_API_URL}/auth/logout`, \n    {\n      method: Methods.POST,\n      headers: { 'Content-Type': 'application/json;charset=utf-8' },\n      body: JSON.stringify({ \n        token: localStorage.getItem(\"refreshToken\") \n      })\n    }\n  );\n}\n\nexport const forgotPassword = (form: TEmail) => {\n  return request(`${INGREDIENTS_DATA_API_URL}/password-reset`, \n    {\n      method: Methods.POST,\n      body: JSON.stringify({ ...form })\n    }\n  );\n}\n\nexport const resetPassword = async(form: TResetPassword) => {\n  return request(`${INGREDIENTS_DATA_API_URL}/password-reset/reset`, \n    {\n      method: Methods.POST,\n      body: JSON.stringify({ ...form })\n    }\n  );\n}\n\nexport const refreshToken = () => {\n  return request(`${INGREDIENTS_DATA_API_URL}/auth/token`,\n  {\n    method: Methods.POST,\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify({\n      token: localStorage.getItem(\"refreshToken\")\n    })\n  });\n}\n\nexport const getUser = () => {\n  return request(`${INGREDIENTS_DATA_API_URL}/auth/user`, \n  {\n    method: Methods.GET,\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8',\n      Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\")\n    }\n  });\n}\n\nexport const updateUser = (user: TUserFullForm) => {\n  return request(`${INGREDIENTS_DATA_API_URL}/auth/user`,  \n  {\n    method: Methods.PATCH,\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\")\n    },\n    body: JSON.stringify({ ...user })\n  });\n}","import { getIngredientsMainData } from \"../../utils/methods\";\nimport { TAppThunk} from \"../../utils/types\";\n\nexport const INGREDIENTS_DATA_REQUEST = \"INGREDIENTS_DATA_REQUEST\";\nexport const INGREDIENTS_DATA_SUCCESS = \"INGREDIENTS_DATA_SUCCESS\";\nexport const INGREDIENTS_DATA_ERROR = \"INGREDIENTS_DATA_ERROR\";\n\nexport interface IngredientDataRequest {\n  readonly type: typeof INGREDIENTS_DATA_REQUEST;\n}\n\nexport interface IngredientDataSuccess {\n  readonly type: typeof INGREDIENTS_DATA_SUCCESS;\n  readonly data: any;\n}\n\nexport interface IngredientDataError {\n  readonly type: typeof INGREDIENTS_DATA_ERROR;\n}\n\nexport const ingredientsData = (): TAppThunk => {\n  return (dispatch) => {\n    dispatch({\n      type: INGREDIENTS_DATA_REQUEST,\n    });\n    getIngredientsMainData().then(res => {\n      dispatch({\n        type: INGREDIENTS_DATA_SUCCESS,\n        data: res.data,\n      });\n    }).catch(err => {\n      dispatch({\n        type: INGREDIENTS_DATA_ERROR,\n      });\n    });\n  };\n}","import { TBurgerIngredientsActions } from '../../utils/types';\nimport { INGREDIENTS_DATA_REQUEST, INGREDIENTS_DATA_SUCCESS, INGREDIENTS_DATA_ERROR } from './actions';\n\nconst ingredientsDataState = {\n  isLoad: false,\n  isError: false,\n  data: []\n}\n\nexport const ingredientsDataReducer = (state = ingredientsDataState, action: TBurgerIngredientsActions) => {\n  switch (action.type) {\n    case INGREDIENTS_DATA_REQUEST:\n      return { \n        ...state, \n        isLoad: true, \n      };\n    case INGREDIENTS_DATA_SUCCESS:\n      return { \n        ...state, \n        isLoad: false, \n        isError: false, \n        data: action.data \n      };\n    case INGREDIENTS_DATA_ERROR:\n      return { \n        ...state, \n        isLoad: false, \n        isError: true, \n        data: []\n      };\n    default:\n      return state;\n  }\n}","import { TIngredientModalrActions } from '../../utils/types';\nimport { INGREDIENT_INFO_MODAL_OPEN, INGREDIENT_INFO_MODAL_CLOSE } from './actions';\n\nconst ingredientModalState = {\n  isOpen: false,\n};\n\nexport const ingredientDetailsReducer = (state = ingredientModalState, action: TIngredientModalrActions) => {\n  switch (action.type) {\n    case INGREDIENT_INFO_MODAL_OPEN:\n      return {\n        isOpen: true,\n      };\n    case INGREDIENT_INFO_MODAL_CLOSE:\n      return {\n        isOpen: false,\n      };\n    default: {\n      return state;\n    }\n  }\n};","import { Ingredient } from \"../../utils/interfaces\";\nimport { createNewOrders } from \"../../utils/methods\";\nimport { TAppThunk } from \"../../utils/types\";\n\nexport const ORDER_REQUEST = \"ORDER_REQUEST\";\nexport const ORDER_SUCCESS = \"ORDER_SUCCESS\";\nexport const ORDER_ERROR = \"ORDER_ERROR\";\nexport const ORDER_OPEN_MODAL = \"ORDER_OPEN_MODAL\";\nexport const ORDER_CLOSE_MODAL = \"ORDER_CLOSE_MODAL\";\n\nexport interface IOrderRequest {\n  readonly type: typeof ORDER_REQUEST;\n}\n\nexport interface IOrderSuccess {\n  readonly type: typeof ORDER_SUCCESS;\n  readonly newOrderNumber: number;\n}\n\nexport interface IOrderError {\n  readonly type: typeof ORDER_ERROR;\n}\n\nexport interface IOrderModalOpen {\n  readonly type: typeof ORDER_OPEN_MODAL;\n}\n\nexport interface IOrderModalClose {\n  readonly type: typeof ORDER_CLOSE_MODAL;\n}\n\nexport const createNewOrder = (ingredients: any): TAppThunk => {\n  return (dispatch) => {\n    dispatch({\n      type: ORDER_REQUEST,\n    });\n    createNewOrders(ingredients.map((ingredient: Ingredient) => ingredient._id)).then(data => {\n      dispatch({ \n        type: ORDER_SUCCESS, \n        newOrderNumber: data.order.number \n      });\n    })\n    .catch(() => {\n      dispatch({ \n        type: ORDER_ERROR \n      });\n    });\n  }\n}","import { TOrderActions } from \"../../utils/types\";\nimport { \n  ORDER_REQUEST, \n  ORDER_SUCCESS, \n  ORDER_ERROR,\n  ORDER_OPEN_MODAL,\n  ORDER_CLOSE_MODAL\n } from \"./actions\";\n\nconst newOrderState = {\n  isLoad: false,\n  isError: false,\n  isOpen: false,\n  newOrderNumber: null,\n};\n\nexport const newOrderReducer = (state = newOrderState, action: TOrderActions) => {\n  switch (action.type) {\n    case ORDER_REQUEST: {\n      return {\n        ...state,\n        isLoad: true,\n      };\n    }\n    case ORDER_SUCCESS: {\n      return {\n        ...state,\n        isLoad: false,\n        isError: false,\n        newOrderNumber: action.newOrderNumber,\n      };\n    }\n    case ORDER_ERROR: {\n      return {\n        ...state,\n        isLoad: false,\n        isError: true,\n        newOrderNumber: null\n      };\n    }\n    case ORDER_OPEN_MODAL: {\n      return {\n        ...state,\n        isOpen: true,\n      };\n    }\n    case ORDER_CLOSE_MODAL: {\n      return {\n        ...state,\n        isOpen: false,\n        newOrderNumber: null\n      };\n    }\n    default:\n      return state;\n  }\n};","import { loginUser, refreshToken, logoutUser } from \"../../utils/methods\";\nimport { TAppThunk, TEmailAndPassword } from \"../../utils/types\";\n\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_ERROR = \"LOGOUT_ERROR\";\nexport const CLEAR_AUTH = \"CLEAR_AUTH\";\nexport const TOKEN_REQUEST = \"TOKEN_REQUEST\";\nexport const TOKEN_SUCCESS = \"TOKEN_SUCCESS\";\nexport const TOKEN_ERROR = \"TOKEN_ERROR\";\nexport const CLEAR_TOKEN = \"CLEAR_TOKEN\";\n\nexport interface IAuthorizationLoginRequest {\n  readonly type: typeof LOGIN_REQUEST;\n}\n\nexport interface IAuthorizationLoginSuccess {\n  readonly type: typeof LOGIN_SUCCESS;\n}\n\nexport interface IAuthorizationLoginError {\n  readonly type: typeof LOGIN_ERROR;\n  readonly message: string;\n}\n\nexport interface IAuthorizationLogoutRequest {\n  readonly type: typeof LOGOUT_REQUEST;\n}\n\nexport interface IAuthorizationLogoutSuccess {\n  readonly type: typeof LOGOUT_SUCCESS;\n}\n\nexport interface IAuthorizationLogoutError {\n  readonly type: typeof LOGOUT_ERROR;\n  readonly message: string;\n}\n\nexport interface IAuthorizationClear {\n  readonly type: typeof CLEAR_AUTH;\n}\n\nexport interface IAuthorizationTokenRequest {\n  readonly type: typeof TOKEN_REQUEST;\n}\n\nexport interface IAuthorizationTokenSuccess {\n  readonly type: typeof TOKEN_SUCCESS;\n}\n\nexport interface IAuthorizationTokenError {\n  readonly type: typeof TOKEN_ERROR;\n  readonly message: string;\n}\n\nexport interface IAuthorizationClearToken {\n  readonly type: typeof CLEAR_TOKEN;\n}\n\nexport const loginAction = (form: TEmailAndPassword): TAppThunk => {\n  return (dispatch) => {\n    dispatch({ type: LOGIN_REQUEST });\n    loginUser(form).then(data => {\n      localStorage.setItem(\n        \"accessToken\", \n        data.accessToken.split(\"Bearer \")[1]\n      );\n      localStorage.setItem(\n        \"refreshToken\", \n        data.refreshToken\n      );\n      dispatch({ \n        type: LOGIN_SUCCESS, \n        user: data.user \n      });\n    }).catch(err => {\n      dispatch({ \n        type: LOGIN_ERROR, \n        message: err.message \n      });\n    });\n  }\n}\n\nexport const logoutAction = (): TAppThunk => {\n  return (dispatch) => {\n    dispatch({ \n      type: LOGOUT_REQUEST \n    });\n    logoutUser().then(() => {\n      localStorage.removeItem(\n        \"refreshToken\"\n      );\n      localStorage.removeItem(\n        \"accessToken\"\n      );\n      dispatch({ \n        type: LOGOUT_SUCCESS \n      });\n    }).catch(error => {\n      dispatch({ \n        type: LOGOUT_ERROR, \n        message: error.message \n      });\n    });\n  }\n}\n\nexport const tokenAction = (): TAppThunk => {\n  return (dispatch) => {\n    dispatch({ \n      type: TOKEN_REQUEST \n    });\n    refreshToken().then(data => {\n      localStorage.setItem(\n        \"accessToken\", \n        data.accessToken.split(\"Bearer \")[1]\n      );\n      localStorage.setItem(\n        \"refreshToken\", \n        data.refreshToken\n      );\n      dispatch({ \n        type: TOKEN_SUCCESS, \n        user: data \n      });\n    }).catch(error => {\n      dispatch({ \n        type: TOKEN_ERROR,\n        message: error.message  \n      });\n    });\n  }\n}","import { TAuthorizationActions } from '../../utils/types';\nimport {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_ERROR,\n  LOGOUT_REQUEST,\n  LOGOUT_SUCCESS,\n  LOGOUT_ERROR,\n  TOKEN_REQUEST,\n  TOKEN_SUCCESS,\n  TOKEN_ERROR,\n  CLEAR_TOKEN,\n  CLEAR_AUTH\n} from './actions';\n\ntype TAuthorizationState = {\n  requestAuthorization: boolean;\n  errorAuthorization?: string;\n  successAuthorization: boolean;\n  requestToken: boolean;\n  successToken: boolean;\n  errorToken?: string;\n  isLogged: boolean;\n}\n\nconst initialState: TAuthorizationState = {\n  requestAuthorization: false,\n  successAuthorization: false,\n  errorAuthorization: undefined,\n  requestToken: false,\n  successToken: false,\n  errorToken: undefined,\n  isLogged: false,\n};\n\nexport const authorizationReducer = (state = initialState, action: TAuthorizationActions): TAuthorizationState => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return { \n        ...state, \n        requestAuthorization: true, \n        successAuthorization: false, \n        errorAuthorization: undefined \n      };\n    case LOGIN_SUCCESS:\n      return { \n        ...state, \n        requestAuthorization: false, \n        successAuthorization: true, \n        errorAuthorization: undefined,\n        isLogged: true \n      };\n    case LOGIN_ERROR:\n      return { \n        ...state, \n        requestAuthorization: false, \n        successAuthorization: false, \n        errorAuthorization: action.message,\n      };\n    case LOGOUT_REQUEST:\n      return { \n        ...state, \n        requestAuthorization: true, \n        successAuthorization: false, \n        errorAuthorization: undefined \n      };\n    case LOGOUT_SUCCESS:\n      return { \n        ...state, \n        requestAuthorization: false, \n        successAuthorization: true, \n        errorAuthorization: undefined,\n        isLogged: false \n      };\n    case LOGOUT_ERROR:\n      return { \n        ...state, \n        requestAuthorization: false, \n        successAuthorization: false, \n        errorAuthorization: action.message,\n      };\n    case TOKEN_REQUEST:\n      return { \n        ...state, \n        requestToken: true, \n        successToken: false, \n        errorToken: undefined \n      };\n    case TOKEN_SUCCESS:\n      return { \n        ...state, \n        requestToken: false, \n        successToken: true, \n        errorToken: undefined,\n        isLogged: true \n      };\n    case TOKEN_ERROR:\n      return { \n        ...state, \n        requestToken: false, \n        successToken: false, \n        errorToken: action.message,\n      };\n    case CLEAR_TOKEN:\n      return { \n        ...state, \n        requestToken: false, \n        successToken: false, \n        errorToken: undefined,\n      };\n    case CLEAR_AUTH:\n      return { \n        ...state, \n        requestAuthorization: false, \n        successAuthorization: false, \n        errorAuthorization: undefined,\n      };\n    default:\n      return state;\n}\n}","import { forgotPassword, resetPassword } from \"../../utils/methods\";\nimport { TAppThunk, TEmail, TResetPassword } from \"../../utils/types\";\n\nexport const FORGOT_PASSWORD_REQUEST = \"FORGOT_PASSWORD_REQUEST\";\nexport const FORGOT_PASSWORD_SUCCESS = \"FORGOT_PASSWORD_SUCCESS\";\nexport const FORGOT_PASSWORD_ERROR = \"FORGOT_PASSWORD_ERROR\";\nexport const RESET_PASSWORD_REQUEST = \"RESET_PASSWORD_REQUEST\";\nexport const RESET_PASSWORD_SUCCESS = \"RESET_PASSWORD_SUCCESS\";\nexport const RESET_PASSWORD_ERROR = \"RESET_PASSWORD_ERROR\";\nexport const CLEAR_RESET_PASSWORD = \"CLEAR_RESET_PASSWORD\";\n\nexport interface IForgotPasswordRequest {\n  readonly type: typeof FORGOT_PASSWORD_REQUEST;\n}\n\nexport interface IForgotPasswordSuccess {\n  readonly type: typeof FORGOT_PASSWORD_SUCCESS;\n}\n\nexport interface IForgotPasswordError {\n  readonly type: typeof FORGOT_PASSWORD_ERROR;\n  readonly message: string;\n}\n\nexport interface IResetPasswordRequest {\n  readonly type: typeof RESET_PASSWORD_REQUEST;\n}\n\nexport interface IResetPasswordSuccess {\n  readonly type: typeof RESET_PASSWORD_SUCCESS;\n}\n\nexport interface IResetPasswordError {\n  readonly type: typeof RESET_PASSWORD_ERROR;\n  readonly message: string;\n}\n\nexport interface IClearResetPassword {\n  readonly type: typeof CLEAR_RESET_PASSWORD;\n}\n\nexport const forgotPasswordAction = (form: TEmail): TAppThunk => {\n  return (dispatch) => {\n    dispatch({ \n      type: FORGOT_PASSWORD_REQUEST \n    });\n    forgotPassword(form).then(() => {\n      dispatch({ \n        type: FORGOT_PASSWORD_SUCCESS \n      });\n    }).catch(error => {\n      dispatch({ \n        type: FORGOT_PASSWORD_ERROR, \n        message: error.message \n      });\n    });\n  }\n}\n\nexport const resetPasswordAction = (form: TResetPassword): TAppThunk => {\n  return (dispatch) => {\n    dispatch({ \n      type: RESET_PASSWORD_REQUEST \n    });\n    resetPassword(form).then(() => {\n      dispatch({ \n        type: RESET_PASSWORD_SUCCESS \n      });\n    }).catch(error => {\n      dispatch({ \n        type: RESET_PASSWORD_ERROR, \n        message: error.message \n      });\n    });\n  }\n}","import { TPasswordOperationsActions } from '../../utils/types';\nimport {\n  FORGOT_PASSWORD_REQUEST,\n  FORGOT_PASSWORD_SUCCESS,\n  FORGOT_PASSWORD_ERROR,\n  RESET_PASSWORD_REQUEST,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_ERROR,\n  CLEAR_RESET_PASSWORD\n} from './actions';\n\nconst initialState = {\n  requestPassword: false,\n  errorPassword: undefined,\n  successPassword: false,\n  isReadyForChange: false\n};\n\nexport const passwordOperations = (state = initialState, action: TPasswordOperationsActions) => {\n  switch (action.type) {\n    case FORGOT_PASSWORD_REQUEST:\n      return { \n        ...state,\n        requestPassword: true, \n        successPassword: false, \n        errorPassword: null, \n        isReadyForChange: false \n      };\n    case FORGOT_PASSWORD_SUCCESS:\n      return {  \n        ...state,\n        requestPassword: false, \n        successPassword: true, \n        isReadyForChange: true \n      };\n    case FORGOT_PASSWORD_ERROR:\n      return {  \n        ...state,\n        requestPassword: true, \n        successPassword: false, \n        errorPassword: action.message,\n      };\n\n    case RESET_PASSWORD_REQUEST:\n      return {  \n        ...state,\n        requestPassword: true, \n        successPassword: false, \n        errorPassword: null, \n      };\n    case RESET_PASSWORD_SUCCESS:\n      return {  \n        ...state,\n        requestPassword: false, \n        successPassword: true, \n      };\n    case RESET_PASSWORD_ERROR:\n      return {  \n        ...state,\n        requestPassword: false, \n        successPassword: false, \n        errorPassword: action.message,\n      };\n    case CLEAR_RESET_PASSWORD:\n      return {  \n        ...state,\n        requestPassword: false, \n        successPassword: false, \n        errorPassword: null,\n      };\n    default:\n      return state;\n  }\n}","import { getUser, updateUser } from \"../../utils/methods\";\nimport { TAppThunk, TUserFullForm, TUserShortForm } from \"../../utils/types\";\n\nexport const GET_USER_DATA_REQUEST = \"GET_USER_DATA_REQUEST\";\nexport const GET_USER_DATA_SUCCESS = \"GET_USER_DATA_SUCCESS\";\nexport const GET_USER_DATA_ERROR = \"GET_USER_DATA_ERROR\";\nexport const PATCH_USER_DATA_REQUEST = \"PATCH_USER_DATA_REQUEST\";\nexport const PATCH_USER_DATA_SUCCESS = \"PATCH_USER_DATA_SUCCESS\";\nexport const PATCH_USER_DATA_ERROR = \"PATCH_USER_DATA_ERROR\";\nexport const CLEAR_USER_DATA = \"CLEAR_USER_DATA\";\n\nexport interface IUserDataRequest {\n  readonly type: typeof GET_USER_DATA_REQUEST;\n}\n\nexport interface IUserDataSuccess {\n  readonly type: typeof GET_USER_DATA_SUCCESS;\n  readonly user: TUserShortForm;\n}\n\nexport interface IUserDataError {\n  readonly type: typeof GET_USER_DATA_ERROR;\n  readonly message: string;\n}\n\nexport interface IPatchUserDataRequest {\n  readonly type: typeof PATCH_USER_DATA_REQUEST;\n}\n\nexport interface IPatchUserDataSuccess {\n  readonly type: typeof PATCH_USER_DATA_SUCCESS;\n}\n\nexport interface IPatchUserDataError {\n  readonly type: typeof PATCH_USER_DATA_ERROR;\n  readonly message: string;\n}\n\nexport interface IUserDataClear {\n  readonly type: typeof CLEAR_USER_DATA;\n}\n\nexport const getUserDataAction = (): TAppThunk => {\n  return (dispatch) => {\n    dispatch({ \n      type: GET_USER_DATA_REQUEST \n    });\n    getUser().then(data => {\n      dispatch({ \n        type: GET_USER_DATA_SUCCESS, \n        user: data.user \n      });\n    }).catch(error => {\n      dispatch({ \n        type: GET_USER_DATA_ERROR, \n        message: error.message \n      });\n    });\n  }\n}\n\nexport const patchUserDataAction = (form: TUserFullForm): TAppThunk => {\n  return (dispatch) => {\n    dispatch({ \n      type: PATCH_USER_DATA_REQUEST \n    });\n    updateUser(form).then(data => {\n      dispatch({ \n        type: PATCH_USER_DATA_SUCCESS, \n        user: data.user \n      });\n    }).catch(error => {\n      dispatch({ \n        type: PATCH_USER_DATA_ERROR, \n        message: error.message \n      });\n    });\n  }\n}","import { TUser, TUserDataActions } from '../../utils/types';\nimport {\n  GET_USER_DATA_REQUEST,\n  GET_USER_DATA_SUCCESS,\n  GET_USER_DATA_ERROR,\n  PATCH_USER_DATA_REQUEST,\n  PATCH_USER_DATA_SUCCESS,\n  PATCH_USER_DATA_ERROR,\n  CLEAR_USER_DATA\n} from './actions';\n\ntype TUserDataState = {\n  requestUserData: boolean;\n  errorUserData?: string;\n  successUserData: boolean;\n  user: TUser\n}\n\nconst initialState: TUserDataState = {\n  requestUserData: false,\n  errorUserData: undefined,\n  successUserData: false,\n  user: {\n    name: \"\",\n    email: \"\"\n  },\n};\n\nexport const userDataReducer = (state = initialState, action: TUserDataActions) => {\n  switch (action.type) {\n    case GET_USER_DATA_REQUEST:\n      return { \n        requestUserData: true, \n        successUserData: false, \n        errorUserData: undefined,\n        user: initialState.user \n      };\n    case GET_USER_DATA_SUCCESS:\n      return { \n        ...state, \n        requestUserData: false, \n        successUserData: true, \n        user: { \n          name: action.user.name, \n          email: action.user.email \n        } \n      };\n    case GET_USER_DATA_ERROR:\n      return {\n        ...state, \n        requestUserData: false, \n        successUserData: false, \n        errorUserData: action.message\n      };\n    case PATCH_USER_DATA_REQUEST:\n      return { \n        ...state,\n        requestUserData: true, \n        successUserData: false, \n        errorUserData: undefined\n      };\n    case PATCH_USER_DATA_SUCCESS:\n      return { \n        ...state,\n        requestUserData: false, \n        successUserData: true \n      };\n    case PATCH_USER_DATA_ERROR:\n      return { \n        ...state,\n        requestUserData: false, \n        successUserData: false, \n        errorUserData: action.message,\n      };\n    case CLEAR_USER_DATA:\n      return { \n        ...state,\n        requestUserData: false, \n        successUserData: false, \n        errorUserData: undefined,\n      };\n    default:\n      return state;\n  }\n}","import { registerUser } from \"../../utils/methods\";\nimport { TAppThunk, TUserFullForm } from \"../../utils/types\";\n\nexport const REGISTRATION_REQUEST = \"REGISTRATION_REQUEST\";\nexport const REGISTRATION_SUCCESS = \"REGISTRATION_SUCCESS\";\nexport const REGISTRATION_ERROR = \"REGISTRATION_ERROR\";\nexport const CLEAR_REGISTRATION = \"CLEAR_REGISTRATION\";\n\nexport interface IRegistrationRequest {\n  readonly type: typeof REGISTRATION_REQUEST;\n}\n\nexport interface IRegistrationSuccess {\n  readonly type: typeof REGISTRATION_SUCCESS;\n}\n\nexport interface IRegistrationError {\n  readonly type: typeof REGISTRATION_ERROR;\n  readonly message: string;\n}\n\nexport interface IClearRegistration {\n  readonly type: typeof CLEAR_REGISTRATION;\n}\n\nexport const registrationAction = (form: TUserFullForm): TAppThunk => {\n  return (dispatch) => {\n    dispatch({ type: REGISTRATION_REQUEST });\n    registerUser(form).then(() => {\n      dispatch({ \n        type: REGISTRATION_SUCCESS, \n      });\n    }).catch(error => {\n      dispatch({ \n        type: REGISTRATION_ERROR, \n        message: error.message \n      });\n    });\n  }\n}","import { TRegistrationActions } from '../../utils/types';\nimport {\n  REGISTRATION_REQUEST,\n  REGISTRATION_SUCCESS,\n  REGISTRATION_ERROR,\n  CLEAR_REGISTRATION\n} from './actions';\n\nconst initialState = {\n  requestRegistration: false,\n  successRegistration: false,\n  errorRegistration: null,\n};\n\nexport const registrationReducer = (state = initialState, action: TRegistrationActions) => {\n  switch (action.type) {\n    case REGISTRATION_REQUEST:\n      return { \n        ...state, \n        requestRegistration: true, \n        successRegistration: false, \n        errorRegistration: null \n      };\n    case REGISTRATION_SUCCESS:\n      return { \n        ...state, \n        requestRegistration: false, \n        successRegistration: true, \n        errorRegistration: null, \n      };\n    case REGISTRATION_ERROR:\n      return { \n        ...state, \n        requestRegistration: false, \n        successRegistration: false, \n        errorRegistration: action.message,  \n      };\n    case CLEAR_REGISTRATION:\n      return { \n        ...state, \n        requestRegistration: false, \n        successRegistration: false, \n        errorRegistration: null,  \n      };\n    default:\n      return state;\n  }\n}","import { TOrdersList, TWebSocketCommonOrdersActions } from '../../utils/types';\n\nexport const COMMON_ORDERS_START = \"COMMON_ORDERS_START\";\nexport const COMMON_ORDERS_OPEN = \"COMMON_ORDERS_OPEN\";\nexport const COMMON_ORDERS_SUCCESS = \"COMMON_ORDERS_SUCCESS\";\nexport const COMMON_ORDERS_ERROR = \"COMMON_ORDERS_ERROR\";\nexport const COMMON_ORDERS_END = \"COMMON_ORDERS_END\";\nexport const COMMON_ORDERS_CLOSED = \"COMMON_ORDERS_CLOSED\";\nexport const COMMON_ORDERS_MESSAGE = \"COMMON_ORDERS_MESSAGE\";\n\nexport interface ICommonOrdersStartAction {\n  readonly type: typeof COMMON_ORDERS_START;\n  readonly url: string;\n}\n\nexport interface ICommonOrdersOpenAction {\n  readonly type: typeof COMMON_ORDERS_OPEN;\n}\n\nexport interface ICommonOrdersSuccessAction {\n  readonly type: typeof COMMON_ORDERS_SUCCESS;\n}\n\nexport interface ICommonOrdersErrorAction {\n  readonly type: typeof COMMON_ORDERS_ERROR;\n  readonly error: string;\n}\n\nexport interface ICommonOrdersEndAction {\n  readonly type: typeof COMMON_ORDERS_END;\n}\n\nexport interface ICommonOrdersClosedAction {\n  readonly type: typeof COMMON_ORDERS_CLOSED;\n}\n\nexport interface ICommonOrdersMessageAction {\n  readonly type: typeof COMMON_ORDERS_MESSAGE;\n  readonly message: TOrdersList;\n}\n\nexport const webSocketCommonOrdersActions: TWebSocketCommonOrdersActions = {\n  onStart: COMMON_ORDERS_START,\n  onOpen: COMMON_ORDERS_OPEN,\n  onSuccess: COMMON_ORDERS_SUCCESS,\n  onClosed: COMMON_ORDERS_CLOSED,\n  onEnd: COMMON_ORDERS_END,\n  onError: COMMON_ORDERS_ERROR,\n  onMessage: COMMON_ORDERS_MESSAGE\n};","import { TCommonOrdersActions, TOrdersState } from '../../utils/types';\nimport {\n  COMMON_ORDERS_SUCCESS,\n  COMMON_ORDERS_ERROR,\n  COMMON_ORDERS_CLOSED,\n  COMMON_ORDERS_MESSAGE\n} from './actions';\n\nconst initialState: TOrdersState = {\n  isConnected: false,\n  message: null,\n  error: null\n};\n\nexport const commonOrdersReducer = (state = initialState, action: TCommonOrdersActions): TOrdersState => {\n  switch (action.type) {\n    case COMMON_ORDERS_SUCCESS:\n      return { \n        ...state, \n        isConnected: true, \n        error: null\n      };\n    case COMMON_ORDERS_ERROR:\n      return { \n        ...state,\n        isConnected: false,  \n        error: action.error\n      };\n    case COMMON_ORDERS_CLOSED:\n      return { \n        ...state,\n        isConnected: false, \n        error: null \n      };\n    case COMMON_ORDERS_MESSAGE:\n      return { \n        ...state, \n        error: null, \n        message: action.message \n      };\n    default:\n      return state;\n  }\n}","import { getOrder } from '../../utils/methods';\nimport { TAppThunk, TOrder } from '../../utils/types';\n\nexport const ORDER_INFO_REQUEST = \"ORDER_INFO_REQUEST\";\nexport const ORDER_INFO_SUCCESS = \"ORDER_INFO_SUCCESS\";\nexport const ORDER_INFO_ERROR = \"ORDER_INFO_ERROR\";\n\nexport interface IOrderInfoRequestAction {\n  type: typeof ORDER_INFO_REQUEST;\n}\n\nexport interface IOrderInfoSuccessAction {\n  type: typeof ORDER_INFO_SUCCESS;\n  order: TOrder;\n}\n\nexport interface IOrderInfoErrorAction {\n  type: typeof ORDER_INFO_ERROR;\n  message: string\n}\n\nexport const getOrderInfoAction = (number?: string): TAppThunk => {\n  return (dispatch) => {\n    dispatch({ type: ORDER_INFO_REQUEST });\n    getOrder(number).then(result => {\n      dispatch({ \n        type: ORDER_INFO_SUCCESS, \n        order: result.orders[0] \n      });\n    })\n    .catch(error => {\n      dispatch({ \n        type: ORDER_INFO_ERROR, \n        message: error.message \n      });\n    });\n  }\n}","import { TOrder, TOrderInfoActions } from '../../utils/types';\nimport { \n  ORDER_INFO_REQUEST,\n  ORDER_INFO_SUCCESS,\n  ORDER_INFO_ERROR\n} from './actions';\n\ntype TOrderInfoState = {\n  requestOrderInfo: boolean;\n  errorOrderInfo?: string;\n  order?: TOrder;\n}\n\nconst initialState: TOrderInfoState = {\n  requestOrderInfo: false,\n  errorOrderInfo: undefined,\n  order: undefined\n}\n\nexport const ordersInfoReducer = (state = initialState, action: TOrderInfoActions): TOrderInfoState => {\n  switch (action.type) {\n    case ORDER_INFO_REQUEST:\n      return { \n        ...state, \n        requestOrderInfo: true, \n        errorOrderInfo: undefined \n      };\n    case ORDER_INFO_SUCCESS:\n      return { \n        ...state, \n        requestOrderInfo: false, \n        errorOrderInfo: undefined, \n        order: action.order \n      };\n    case ORDER_INFO_ERROR:\n      return { \n        ...state, \n        requestOrderInfo: false, \n        errorOrderInfo: action.message, \n        order: undefined \n      };\n\n    default:\n      return state;\n  }\n}","import { TOrdersList, TWebSocketPersonalOrdersActions } from '../../utils/types';\n\nexport const PERSONAL_ORDERS_START = \"PERSONAL_ORDERS_START\";\nexport const PERSONAL_ORDERS_OPEN = \"PERSONAL_ORDERS_OPEN\";\nexport const PERSONAL_ORDERS_SUCCESS = \"PERSONAL_ORDERS_SUCCESS\";\nexport const PERSONAL_ORDERS_ERROR = \"PERSONAL_ORDERS_ERROR\";\nexport const PERSONAL_ORDERS_END = \"PERSONAL_ORDERS_END\";\nexport const PERSONAL_ORDERS_CLOSED = \"PERSONAL_ORDERS_CLOSED\";\nexport const PERSONAL_ORDERS_MESSAGE = \"PERSONAL_ORDERS_MESSAGE\";\n\nexport interface IPersonalOrdersStartAction {\n  readonly type: typeof PERSONAL_ORDERS_START;\n  readonly url: string;\n}\n\nexport interface IPersonalOrdersOpenAction {\n  readonly type: typeof PERSONAL_ORDERS_OPEN;\n}\n\nexport interface IPersonalOrdersSuccessAction {\n  readonly type: typeof PERSONAL_ORDERS_SUCCESS;\n}\n\nexport interface IPersonalOrdersErrorAction {\n  readonly type: typeof PERSONAL_ORDERS_ERROR;\n  readonly error: string;\n}\n\nexport interface IPersonalOrdersEndAction {\n  readonly type: typeof PERSONAL_ORDERS_END;\n}\n\nexport interface IPersonalOrdersClosedAction {\n  readonly type: typeof PERSONAL_ORDERS_CLOSED;\n}\n\nexport interface IPersonalOrdersMessageAction {\n  readonly type: typeof PERSONAL_ORDERS_MESSAGE;\n  readonly message: TOrdersList;\n}\n\nexport const webSocketPersonalOrdersActions: TWebSocketPersonalOrdersActions = {\n  onStart: PERSONAL_ORDERS_START,\n  onOpen: PERSONAL_ORDERS_OPEN,\n  onSuccess: PERSONAL_ORDERS_SUCCESS,\n  onClosed: PERSONAL_ORDERS_CLOSED,\n  onEnd: PERSONAL_ORDERS_END,\n  onError: PERSONAL_ORDERS_ERROR,\n  onMessage: PERSONAL_ORDERS_MESSAGE\n}; ","import { TOrdersState, TPersonalOrdersActions } from '../../utils/types';\nimport {\n  PERSONAL_ORDERS_SUCCESS,\n  PERSONAL_ORDERS_ERROR,\n  PERSONAL_ORDERS_CLOSED,\n  PERSONAL_ORDERS_MESSAGE\n} from './actions';\n\nconst initialState: TOrdersState = {\n  isConnected: false,\n  message: null,\n  error: null\n};\n\nexport const personalOrdersReducer = (state = initialState, action: TPersonalOrdersActions): TOrdersState => {\n  switch (action.type) {\n    case PERSONAL_ORDERS_SUCCESS:\n      return { \n        ...state, \n        isConnected: true, \n        error: null\n      };\n    case PERSONAL_ORDERS_ERROR:\n      return { \n        ...state,\n        isConnected: false,  \n        error: action.error\n      };\n    case PERSONAL_ORDERS_CLOSED:\n      return { \n        ...state,\n        isConnected: false, \n        error: null  \n      };\n    case PERSONAL_ORDERS_MESSAGE:\n      return { \n        ...state,\n        error: null, \n        message: action.message \n      };\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\n\nimport { constructorReducer } from \"./BurgerConstructor/reducers\";\nimport { ingredientsDataReducer } from \"./BurgerIngredients/reducers\";\nimport { ingredientDetailsReducer } from \"./IngredientsDetails/reducers\";\nimport { newOrderReducer } from \"./OrderDetails/reducers\";\nimport { authorizationReducer } from \"./Authorization/reducers\";\nimport { passwordOperations } from \"./PasswordOperations/reducers\";\nimport { userDataReducer } from \"./UserData/reducers\";\nimport { registrationReducer } from \"./Registration/reducers\";\nimport { commonOrdersReducer } from \"./CommonOrders/reducers\";\nimport { ordersInfoReducer } from \"./OrderInfo/reducers\";\nimport { personalOrdersReducer } from \"./PersonalOrders/reducers\";\n\nexport const rootReducer = combineReducers({\n  burgerConstructor: constructorReducer,\n  burgerIngredients: ingredientsDataReducer,\n  ingredientsDetails: ingredientDetailsReducer,\n  orderDetails: newOrderReducer,\n  authReducer: authorizationReducer,\n  passwordReducer: passwordOperations,\n  userReducer: userDataReducer,\n  registReducer: registrationReducer,\n  commonOrderReducer: commonOrdersReducer,\n  orderInfoReducer: ordersInfoReducer,\n  personalOrderReducer: personalOrdersReducer\n});","import { Ingredient } from \"../../utils/interfaces\";\n\nexport const ADD_ITEM = \"ADD_ITEM\";\nexport const DELETE_ITEM = \"DELETE_ITEM\";\nexport const REPLACE_ITEM = \"REPLACE_ITEM\";\nexport const CLEAR_ITEMS = \"CLEAR_ITEMS\";\n\nexport interface IAddItem {\n  readonly type: typeof ADD_ITEM;\n  readonly item: Ingredient;\n}\n\nexport interface IDeleteItem {\n  readonly type: typeof DELETE_ITEM;\n  readonly index: number;\n}\n\nexport interface IReplaceItem {\n  readonly type: typeof REPLACE_ITEM;\n  readonly from: number;\n  readonly to: number;\n}\n\nexport interface IClearItems {\n  readonly type: typeof CLEAR_ITEMS;\n}","export const INGREDIENT_INFO_MODAL_OPEN = 'INGREDIENT_INFO_MODAL_OPEN';\nexport const INGREDIENT_INFO_MODAL_CLOSE = 'INGREDIENT_INFO_MODAL_CLOSE';\n\nexport interface IngredientModalOpen {\n  readonly type: typeof INGREDIENT_INFO_MODAL_OPEN;\n}\n\nexport interface IngredientModalClose {\n  readonly type: typeof INGREDIENT_INFO_MODAL_CLOSE;\n}","import type { \n  AnyAction, \n  Middleware, \n  MiddlewareAPI \n} from 'redux';\n\nimport localize from '../utils/localize';\nimport { refreshToken } from '../utils/methods';\nimport { \n  TIMEOUT, \n  WEBSOCKET_ERROR, \n  WEBSOCKET_TOKEN_ERROR_MESSAGE \n} from '../utils/const';\nimport { \n  TAppDispatch,\n  TRootState,\n  TWebSocketCommonOrdersActions, \n  TWebSocketPersonalOrdersActions \n} from '../utils/types';\n\nexport const socketMiddleware = (\n  webSocketsActions: TWebSocketPersonalOrdersActions | TWebSocketCommonOrdersActions\n  ): Middleware => {\n  return (store: MiddlewareAPI<TAppDispatch, TRootState>) => {\n    let socketMiddleware: {\n      socket: WebSocket | undefined,\n      timer: number,\n      connected: boolean,\n      url: string\n    } = {\n      socket: undefined,\n      timer: 0,\n      connected: false,\n      url: ''\n    }\n\n    return next => (action: AnyAction) => {\n      const { dispatch } = store;\n      if (action.type === webSocketsActions.onStart) {\n        socketMiddleware.url = action.url;\n        if (action.addToken) {\n          socketMiddleware.url = \n            `${socketMiddleware.url}?token=${localStorage.getItem(\"accessToken\")}`;\n        }\n        socketMiddleware.socket = new WebSocket(socketMiddleware.url);\n        socketMiddleware.connected = true;\n        window.clearTimeout(socketMiddleware.timer);\n        dispatch({ \n          type: webSocketsActions.onSuccess \n        });\n      }\n      if (socketMiddleware.socket) {\n        socketMiddleware.socket.onopen = () => {\n          dispatch({ \n            type: webSocketsActions.onOpen \n          });\n        };\n        socketMiddleware.socket.onclose = event => {\n          if (event.code !== WEBSOCKET_ERROR) {\n            dispatch({ \n              type: webSocketsActions.onError,\n              error: localize.Error \n            });\n            socketMiddleware.socket!.close();\n          }\n          if (socketMiddleware.connected) {\n            dispatch({ \n              type: webSocketsActions.onClosed \n            });\n            socketMiddleware.timer = window.setTimeout(\n              () => {\n                dispatch({ \n                  type: webSocketsActions.onStart, \n                  url: socketMiddleware.url\n                });\n              }, \n              TIMEOUT\n            )\n          }\n        };\n        socketMiddleware.socket.onmessage = event => {\n          if (!JSON.parse(event.data)?.success) {\n            if (JSON.parse(event.data)?.message === WEBSOCKET_TOKEN_ERROR_MESSAGE) {\n              refreshToken();\n            }\n            dispatch({ \n              type: webSocketsActions.onError, \n              error: JSON.parse(event.data)?.message \n            });\n          } else {\n            const { \n              success, \n              ...restParsedData \n            } = JSON.parse(event.data);\n            dispatch({ \n              type: webSocketsActions.onMessage, \n              message: restParsedData \n            });\n          }\n        };\n        socketMiddleware.socket.onerror = () => {\n          dispatch({ \n            type: webSocketsActions.onError, \n            error: localize.Error \n          });\n        };\n        if (action.type === webSocketsActions.onEnd) {\n          socketMiddleware = {\n            ...socketMiddleware,\n            connected: false,\n            timer: 0\n          }\n          window.clearTimeout(socketMiddleware.timer);\n          socketMiddleware.socket!.close();\n          dispatch({ \n            type: webSocketsActions.onClosed \n          });\n        }\n      }\n      next(action);\n    };\n  };\n};","import { configureStore } from '@reduxjs/toolkit';\n\nimport { rootReducer } from './rootReducer';\nimport { socketMiddleware } from './socketMiddleware';\nimport { webSocketCommonOrdersActions } from './CommonOrders/actions';\nimport { webSocketPersonalOrdersActions } from './PersonalOrders/actions';\n\nexport default configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware()\n    .concat(socketMiddleware(webSocketCommonOrdersActions))\n    .concat(socketMiddleware(webSocketPersonalOrdersActions)),\n    devTools: process.env.NODE_ENV !== 'production'\n});","import { \n  TypedUseSelectorHook, \n  useDispatch as dispatchRedux, \n  useSelector as selectorRedux \n} from \"react-redux\";\nimport { \n  TAppDispatch, \n  TRootState\n} from \"./types\";\n\nexport const useDispatch = () => dispatchRedux<TAppDispatch>();\n\nexport const useSelector: TypedUseSelectorHook<TRootState> = selectorRedux;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { \n  Logo, \n  BurgerIcon, \n  ListIcon, \n  ProfileIcon,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport style from \"./style.module.css\";\nimport localize from \"../../utils/localize\";\nimport { \n  BASE_ROOT, \n  FEED_ROOT, \n  PROFILE_ROOT \n} from \"../../utils/routes\";\n\nconst Header = () => {\n  return (\n    <header className={style.header}>\n      <nav className={style.block}>\n        <div className={style.block_box}>\n          <div className={style.block_item}>\n            <BurgerIcon type=\"primary\"/>\n            <Link \n              className={style.link} \n              to={BASE_ROOT}\n            >\n              {localize.Constructor}\n            </Link>\n          </div>\n          <div className={style.block_item}>\n            <ListIcon type=\"primary\" />\n            <Link \n              className={style.link} \n              to={FEED_ROOT}\n            >\n              {localize.OrderList}\n            </Link>\n          </div>\n        </div>\n        <div className={`${style.block_item} ${style.block_box_logo}`}>\n          <Link \n            className={style.link} \n            to={BASE_ROOT}\n          >\n            <Logo/>\n          </Link>\n        </div>\n        <div className={style.block_item}>\n          <ProfileIcon type=\"primary\" />\n          <Link \n            className={style.link} \n            to={PROFILE_ROOT}\n            state={{\n              from: PROFILE_ROOT\n            }}\n          >\n            {localize.PersonalAccount}\n          </Link>\n        </div>\n      </nav>\n    </header>\n  )\n}\n\nexport default Header","export const BASE_ROOT = \"/\";\nexport const BASE_PRODUCTION_ROOT = \"/practicum_1\";\nexport const OTHERS_ROOT = \"*\";\nexport const LOGIN_ROOT =\"/login\";\nexport const LOGOUT_ROOT = \"/logout\";\nexport const PROFILE_ORDERS_ROOT = \"/profile/orders\";\nexport const PROFILE_ROOT = \"/profile\";\nexport const FEED_ROOT = \"/feed\";\nexport const INGREDIENTS_ROOT = \"/ingredients\";\nexport const REGISTRATON_FORM_ROOT = \"/register\";\nexport const RESET_PASSWORD_ROOT = \"/reset-password\";\nexport const FORGOT_PASSWORD_ROOT = \"/forgot-password\";","import React, { FormEvent, useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { EmailInput, Button } from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport commonStyle from \"../../utils/commonPageStyles.module.css\";\nimport localize from '../../utils/localize';\nimport { LOGIN_ROOT, PROFILE_ROOT, RESET_PASSWORD_ROOT } from '../../utils/routes';\nimport { CLEAR_RESET_PASSWORD, forgotPasswordAction } from '../../services/PasswordOperations/actions';\nimport { CLEAR_USER_DATA, getUserDataAction } from '../../services/UserData/actions';\nimport { CLEAR_AUTH } from '../../services/Authorization/actions';\nimport { useDispatch, useSelector } from '../../utils/helpers';\n\nconst ForgotPasswordPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [ email, setEmail ] = useState('');\n\n  const { user } = useSelector(store => store.userReducer);\n\n  const { successPassword, errorPassword } = useSelector(store => store.passwordReducer);\n\n  useEffect(() => {\n    dispatch(getUserDataAction());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if(!!user?.name && user.name !== '') {\n      dispatch({\n        type: CLEAR_USER_DATA\n      })\n      dispatch({\n        type: CLEAR_AUTH\n      })\n      navigate(PROFILE_ROOT, { replace: true });\n    }\n  }, [\n    user?.name, \n    navigate, \n    dispatch\n  ]);\n\n  useEffect(() => {\n    if(successPassword) {\n      dispatch({\n        type: CLEAR_RESET_PASSWORD\n      });\n      navigate(RESET_PASSWORD_ROOT, { replace: true });\n    }\n    if(errorPassword) {\n      alert(localize.ResetPasswordError);\n    }\n  }, [\n    successPassword, \n    errorPassword,\n    dispatch\n  ]);\n\n  const sendEmail = (e: FormEvent) => {\n    e.preventDefault();\n    dispatch(forgotPasswordAction(email as any));\n  };\n\n  return (\n    <main className={commonStyle.pages_form_container}>\n      <form className={commonStyle.pages_container_inner} onSubmit={sendEmail}>\n        <h1 className={`${commonStyle.pages_form_h1} text text_type_main-medium`}>\n          {localize.ChangingPassword}\n        </h1>\n        <EmailInput \n          extraClass={commonStyle.pages_form_p_email_password}  \n          placeholder={localize.InputEmail}\n          name=\"email\" \n          value={email} \n          onChange={(el) => {\n            setEmail(el.target.value);\n          }}\n        />\n        <Button \n          type=\"primary\" \n          extraClass={commonStyle.pages_form_button}\n          htmlType=\"submit\"\n        >\n          {localize.ChangePassword}\n        </Button>\n        <p className=\"text text_type_main-default text_color_inactive\">\n            {localize.DontForgotPassword}\n          <Link \n            className={commonStyle.page_link} \n            to={LOGIN_ROOT}\n          >\n            {localize.ToLogin}\n          </Link>\n        </p>\n      </form>\n    </main>\n  );\n}\n\nexport default ForgotPasswordPage;","import React from \"react\";\nimport { useParams } from \"react-router\";\n\nimport { Ingredient } from \"../../utils/interfaces\";\nimport localize from \"../../utils/localize\";\nimport { useSelector } from \"../../utils/helpers\";\nimport style from \"./style.module.css\";\n\nconst IngredientDetails = () => {\n  const params = useParams();\n\n  const { data } = useSelector(store => store.burgerIngredients);\n\n  let item = data.find((d: Ingredient) => params.id ? d._id === params.id : d._id === window.location.pathname.split('/')[2]);\n\n  return (\n    <>\n      {item && (\n        <>\n          <div className={style.modal_content}>\n            <img\n              src={item.image_large}\n              alt={item.name}\n              className={style.image}\n            />\n            <p className={`text text_type_main-medium ${style.modal_content_title}`}>{item.name}</p>\n            <div className={style.modal_content_body}>\n              <div className={style.modal_content_body_item}>\n                <p className=\"text text_type_main-default text_color_inactive\">\n                  {localize.Callories}\n                </p>\n                <p className=\"text text_type_digits-default text_color_inactive\">\n                  {item.calories}\n                </p>\n              </div>\n              <div className={style.modal_content_body_item}>\n                <p className=\"text text_type_main-default text_color_inactive\">\n                  {localize.Proteins}\n                </p>\n                <p className=\"text text_type_digits-default text_color_inactive\">\n                  {item.proteins}\n                </p>\n              </div>\n              <div className={style.modal_content_body_item}>\n                <p className=\"text text_type_main-default text_color_inactive\">\n                  {localize.Fats}\n                </p>\n                <p className=\"text text_type_digits-default text_color_inactive\">\n                  {item.fat}\n                </p>\n              </div>\n              <div>\n                <p className=\"text text_type_main-default text_color_inactive\">\n                  {localize.Carbohydrates}\n                </p>\n                <p className=\"text text_type_digits-default text_color_inactive\">\n                  {item.carbohydrates}\n                </p>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default IngredientDetails;","import React from 'react';\n\nimport IngredientDetails from '../../components/IngredientDetailsComponent/IngredientDetails';\nimport commonStyle from \"../../utils/commonPageStyles.module.css\";\n\nconst IngredientPage = () => {\n  return (\n    <main className={commonStyle.pages_form_container}>\n      <div className={commonStyle.pages_container_inner}>\n        <IngredientDetails/>\n      </div>\n    </main>\n  );\n}\n\nexport default IngredientPage;","import React, { FormEvent, useEffect, useState } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { \n  EmailInput, \n  PasswordInput, \n  Button \n} from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport { \n  BASE_ROOT,\n  FORGOT_PASSWORD_ROOT, \n  REGISTRATON_FORM_ROOT \n} from '../../utils/routes';\nimport commonStyle from \"../../utils/commonPageStyles.module.css\";\nimport localize from '../../utils/localize';\nimport { CLEAR_USER_DATA, getUserDataAction } from '../../services/UserData/actions';\nimport { CLEAR_AUTH, CLEAR_TOKEN, loginAction } from '../../services/Authorization/actions';\nimport { CLEAR_RESET_PASSWORD } from '../../services/PasswordOperations/actions';\nimport { useDispatch, useSelector } from '../../utils/helpers';\n\nconst LoginFormPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const from = location.state?.from || BASE_ROOT;\n\n  const { user } = useSelector(store => store.userReducer);\n\n  const { isLogged } = useSelector(store => store.authReducer);\n\n  const { successRegistration } = useSelector(store => store.registReducer);\n\n  const [ password, setPassword ] = useState('');\n  const [ email, setEmail ] = useState('');\n\n  useEffect(() => {\n    dispatch({\n      type: CLEAR_RESET_PASSWORD\n    });\n    if(successRegistration) {\n      alert(localize.SuccessDataSave);\n    } else dispatch(getUserDataAction());\n  }, [\n    successRegistration,\n    dispatch\n  ]);\n\n  useEffect(() => {\n    if((!!user?.name && user.name !== '') || isLogged) {\n      dispatch({\n        type: CLEAR_USER_DATA\n      })\n      dispatch({\n        type: CLEAR_AUTH\n      })\n      dispatch({\n        type: CLEAR_TOKEN\n      })\n      navigate(from, { replace: true });\n    }\n  }, [\n    user?.name, \n    isLogged, \n    navigate, \n    dispatch\n  ]);\n\n  const applyForm = (e: FormEvent) => {\n    const form = {\n      email: email,\n      password: password\n    }\n    e.preventDefault();\n    dispatch(loginAction(form));\n  };\n\n  return (\n    <main className={commonStyle.pages_form_container}>\n      <form className={commonStyle.pages_container_inner} onSubmit={applyForm}>\n        <h1 className={`${commonStyle.pages_form_h1} text text_type_main-medium`}>\n          {localize.Entrance}\n        </h1>\n        <EmailInput \n          extraClass={commonStyle.pages_form_p_email_password}  \n          name=\"email\" \n          value={email} \n          onChange={(el) => {\n            setEmail(el.target.value)\n          }}\n        />\n        <PasswordInput \n          extraClass={commonStyle.pages_form_p_email_password} \n          name=\"password\" \n          value={password} \n          onChange={(el) => {\n            setPassword(el.target.value)\n          }}\n        />\n        <Button \n          type=\"primary\" \n          extraClass={commonStyle.pages_form_button}\n          htmlType=\"submit\"\n        >\n          {localize.ToLogin}\n        </Button>\n        <p className={`${commonStyle.pages_form_p_email_password}  text text_type_main-default text_color_inactive`}>\n          {localize.NewUser}\n          <Link \n            className={commonStyle.page_link}\n            to={REGISTRATON_FORM_ROOT}\n          >\n            {localize.MakeRegistration}\n          </Link>\n        </p>\n        <p className=\"text text_type_main-default text_color_inactive\">\n          {localize.ForgotPassword}\n          <Link \n            className={commonStyle.page_link}\n            to={FORGOT_PASSWORD_ROOT}\n          >\n            {localize.ChangePassword}\n          </Link>\n        </p>\n      </form>\n    </main>\n  );\n}\n\nexport default LoginFormPage;","import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { LOGIN_ROOT } from '../../utils/routes';\nimport commonStyle from \"../../utils/commonPageStyles.module.css\";\nimport localize from '../../utils/localize';\nimport { logoutAction } from '../../services/Authorization/actions';\nimport { useDispatch, useSelector } from '../../utils/helpers';\n\nconst LogoutPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { isLogged } = useSelector(store => store.authReducer);\n\n  useEffect(() => {\n    dispatch(logoutAction());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if(!isLogged) {\n      navigate(LOGIN_ROOT, { replace: true });\n    }\n  }, [isLogged, navigate]);\n\n\n  return (\n    <main className={commonStyle.pages_form_container}>\n      <div className={commonStyle.pages_container_inner}>\n        <h1 className={`${commonStyle.pages_form_h1} text text_type_main-medium`}>\n          {localize.Exit}\n        </h1>\n      </div>\n    </main>\n  );\n}\n\nexport default LogoutPage;","import React from \"react\";\n\nimport style from \"./style.module.css\";\n\ninterface IProps {\n  onClose: () => void,\n  isBlackBackground?: boolean\n}\n\nconst ModalOverlay = ({ onClose, isBlackBackground }: IProps) => {\n  return ( \n    <div className={isBlackBackground ? style.special_overlay : style.overlay} onClick={onClose}/> \n  );\n}\n\nexport default ModalOverlay;","import React, { ReactNode, useCallback, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport style from \"./style.module.css\";\nimport ModalOverlay from \"../ModalOverlayComponent/ModalOverlay\";\nimport { KeyBoard } from \"../../utils/enum\";\n\ninterface IProps {\n  onClose: () => void,\n  info?: string,\n  isOrder?: boolean,\n  children: ReactNode\n}\n\nconst modal = document.getElementById('modal')!;\n\nconst Modal = ({ onClose, info, children, isOrder }: IProps) => {\n\n  const escapeClose = useCallback((event: KeyboardEvent) => {\n    if (event.key === KeyBoard.ESCAPE) {\n      onClose();\n    }\n  }, [onClose]);\n\n  useEffect(() => {\n    document.body.addEventListener(KeyBoard.KEYDOWN as any, escapeClose);\n\n    return () => {\n      document.body.removeEventListener(KeyBoard.KEYDOWN as any, escapeClose);\n    };\n  }, [escapeClose]);\n\n  return ReactDOM.createPortal(\n    <>\n    <ModalOverlay isBlackBackground={isOrder} onClose={onClose}/>\n    <div className={style.modal_container}>\n      <div className={style.modal_box}>\n        <div className={style.modal_header}>\n          {info && (\n            <h1 className=\"text text_type_main-large\">\n              {info}\n            </h1>\n          )}\n          <p className={style.close_btn} onClick={onClose}>\n            <CloseIcon type=\"primary\"/>\n          </p>\n        </div>\n        {children}\n      </div>\n    </div>\n  </>,\n    modal\n  );\n}\n\nexport default Modal;","import React, { FC, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\n\nimport style from \"./style.module.css\";\nimport image from \"../../images/success.png\";\nimport localize from \"../../utils/localize\";\nimport { LOGIN_ROOT } from \"../../utils/routes\";\nimport { useSelector } from \"../../utils/helpers\";\n\ninterface IProps {\n  data: number\n}\n\nconst OrderDetails: FC<IProps> = ({ data }) => {\n  const navigate = useNavigate();\n\n  const { user } = useSelector(store => store.userReducer);\n  \n  useEffect(() => {\n    if(!user || user.name === '') {\n      navigate(LOGIN_ROOT, { replace: true });\n    }\n  }, [user, navigate]);\n\n  return (\n    <div className={style.modal_content}>\n      <p className={`text text_type_digits-large ${style.identificator_order}`}>\n        {data}\n      </p>\n      <p\n        className={`text text_type_digits-small ${style.identificator_order_text}`}\n      >\n        {localize.OrderIdentificator}\n      </p>\n      <div className={style.success_icon}>\n        <img src={image}/>\n      </div>\n      <p className={`text text_type_main-default ${style.identificator_order_text}`}>\n        {localize.OrderPreparing}\n      </p>\n      <p className={`text text_type_main-default text_color_inactive ${style.order_waiting}`}>\n        {localize.OrderWaiting}\n      </p>\n    </div>\n  );\n}\n\nexport default OrderDetails;","import React, { FC, useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { ConstructorElement, DragIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport { REPLACE_ITEM } from '../../services/BurgerConstructor/actions';\nimport style from \"./style.module.css\";\nimport { Ingredient } from '../../utils/interfaces';\nimport { useDispatch } from '../../utils/helpers';\n\ninterface IProps {\n  item: Ingredient,\n  index: number,\n  onDelete: (i: number) => void\n}\n\nconst BurgerConstructorMainIngredient: FC<IProps> = ({ item, index, onDelete }) => {\n  const ref = useRef(null);\n  \n  const dispatch = useDispatch();\n\n  const [, Drag] = useDrag({\n    type: \"replace\",\n    item: { index }\n  });\n\n  const [, Drop] = useDrop({\n    accept: \"replace\",\n    drop(item: any) {\n      if (index !== item.index) {\n        dispatch({ \n          type: REPLACE_ITEM, \n          from: index, \n          to: item.index \n        });\n      }\n    }\n  });\n\n  Drag(Drop(ref));\n\n  return (\n    <li \n      className={style.main_item_container} \n      key={item._id} \n      ref={ref}\n    >\n      <DragIcon type=\"primary\" />\n      <ConstructorElement\n        text={item.name}\n        price={item.price}\n        thumbnail={item.image || ''}\n        extraClass={style.ingredient_item}\n        handleClose={() => {\n          onDelete(index);\n        }}\n      />\n    </li>\n  );\n}\n\nexport default BurgerConstructorMainIngredient;","import React, { useMemo, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { useDrop } from \"react-dnd\";\nimport { v4 as uuid } from 'uuid';\nimport { CurrencyIcon, Button, ConstructorElement } from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport style from \"./style.module.css\";\nimport localize from \"../../utils/localize\";\nimport Modal from \"../ModalComponent/Modal\";\nimport OrderDetails from \"../OrderDetailsComponent/OrderDetails\";\nimport { BunImage, Ingredients } from \"../../utils/enum\";\nimport { ADD_ITEM, CLEAR_ITEMS, DELETE_ITEM } from \"../../services/BurgerConstructor/actions\";\nimport BurgerConstructorMainIngredient from \"../BurgerConstructorItemComponent/BurgerConstructorItem\";\nimport { createNewOrder, ORDER_CLOSE_MODAL, ORDER_OPEN_MODAL } from \"../../services/OrderDetails/actions\";\nimport { LOGIN_ROOT } from \"../../utils/routes\";\nimport { getUserDataAction } from \"../../services/UserData/actions\";\nimport { useDispatch, useSelector } from \"../../utils/helpers\";\nimport { Ingredient } from \"../../utils/interfaces\";\n\nconst BurgerConstructor = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { items, bun } = useSelector(store => store.burgerConstructor);\n\n  const { newOrderNumber, isOpen } = useSelector(store => store.orderDetails);\n\n  const { user } = useSelector(store => store.userReducer);\n\n  useEffect(() => {\n    dispatch(getUserDataAction());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if(newOrderNumber) {\n      dispatch({ \n        type: ORDER_OPEN_MODAL, \n      });\n      dispatch({ \n        type: CLEAR_ITEMS, \n      });\n    }\n  }, [dispatch, newOrderNumber]);\n\n  const [, dropTopBun] = useDrop({\n    accept: [Ingredients.bun],\n    drop(item: Ingredient) {\n      dispatch({ \n        type: ADD_ITEM, \n        item: item \n      });\n    }\n  });\n\n  const [, dropBottomBun] = useDrop({\n    accept: [Ingredients.bun],\n    drop(item: Ingredient) {\n      dispatch({ \n        type: ADD_ITEM, \n        item: item \n      });\n    }\n  });\n\n  const [, dropTargetIngredient] = useDrop({\n    accept: [Ingredients.sauce, Ingredients.main],\n    drop(item: Ingredient) {\n      dispatch({ \n        type: ADD_ITEM, \n        item: item \n      });\n    }\n  });\n\n  const deleteItem = (index: number) => {\n    dispatch({ \n      type: DELETE_ITEM, \n      index: index \n    })\n  }\n\n  const sum = useMemo(() => {\n    let value = 0;\n    items.map(item => {\n      value = value + item.price;\n    })\n    if(bun) {\n      value = value + bun.price * 2;\n    }\n    return value;\n  }, [items, bun]);\n\n  const onOpen = () => {\n    if(!!user?.name && user.name !== '') {\n      dispatch(createNewOrder([...items, bun, bun]));\n    } else {\n      navigate(LOGIN_ROOT, { replace: true });\n    }\n  };\n\n  const onClose = () => {\n    dispatch({ \n      type: ORDER_CLOSE_MODAL, \n    });\n  };\n\n  return (\n    <section className={style.section}>\n      {isOpen && (\n        <Modal onClose={onClose}>\n          <OrderDetails data={newOrderNumber}/>\n        </Modal>\n      )}\n      <div className={style.burger_constructor}>\n        <div key={`${bun && bun._id}_top`} ref={dropTopBun}>\n          <ConstructorElement\n            type=\"top\"\n            isLocked\n            key={`${bun && bun._id}_top`}\n            text={bun ? `${bun.name} (верх)` : `${localize.AddBun}`}\n            price={bun ? bun.price : 0}\n            thumbnail={bun ? bun.image! : BunImage.BUN_1}\n            extraClass={style.bun}\n          />\n        </div>\n        <ul className={style.items_scroll} ref={dropTargetIngredient}>\n          {items && !!items.length ? items.map((item, index) => (\n            <BurgerConstructorMainIngredient \n              key={uuid()} \n              item={item} \n              index={index} \n              onDelete={deleteItem} \n            />\n          )) : (\n            <div className={style.no_item}>\n              <div className={`${style.no_item_text} text text_type_main-default`}>\n                {localize.AddIngredient}\n              </div>\n            </div>\n          )}\n        </ul>\n        <div key={`${bun && bun._id}_bottom`} ref={dropBottomBun}>\n          <ConstructorElement\n            type=\"bottom\"\n            isLocked\n            key={`${bun && bun._id}_top`}\n            text={bun ? `${bun.name} (низ)` : `${localize.AddBun}`}\n            price={bun ? bun.price : 0}\n            thumbnail={bun ? bun.image! : BunImage.BUN_2}\n            extraClass={style.bun}\n          />\n        </div>\n      </div>\n      <div className={style.send_box}>\n        <div className={style.box}>\n          {sum && (\n            <span className=\"text_type_digits-medium\">{sum}</span>\n          )}\n          <CurrencyIcon type=\"primary\"/>\n        </div>\n        <Button \n          htmlType=\"button\" \n          type=\"primary\" \n          size=\"large\"\n          disabled={!bun}\n          onClick={onOpen}\n        >\n          {localize.Checkout}\n        </Button>  \n      </div>\n    </section>\n  )\n}\n\nexport default BurgerConstructor","import React, { FC } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { CurrencyIcon, Counter } from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport style from \"./style.module.css\";\nimport Modal from \"../ModalComponent/Modal\";\nimport IngredientDetails from \"../IngredientDetailsComponent/IngredientDetails\";\nimport localize from \"../../utils/localize\";\nimport { BASE_ROOT, INGREDIENTS_ROOT } from \"../../utils/routes\";\nimport { INGREDIENT_INFO_MODAL_CLOSE, INGREDIENT_INFO_MODAL_OPEN } from \"../../services/IngredientsDetails/actions\";\nimport { Ingredient } from \"../../utils/interfaces\";\nimport { useDispatch, useSelector } from \"../../utils/helpers\";\n\ninterface IProps {\n  data: Ingredient, \n  numberOfItems: number\n}\n\nconst Card: FC<IProps> = ({data, numberOfItems}) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const { isOpen } = useSelector(store => store.ingredientsDetails);\n\n  const [, dragRef] = useDrag({\n    type: data.type,\n    item: data\n  });\n\n  const onOpen = () => {\n    navigate(\n      `${INGREDIENTS_ROOT}/${data._id}`, \n      { \n        replace: true, \n        state: { \n          background: location,\n        } \n      }\n    );\n    dispatch({\n      type: INGREDIENT_INFO_MODAL_OPEN\n    })\n  };\n  \n  const onClose = () => {\n    navigate(BASE_ROOT, { replace: true });\n    dispatch({\n      type: INGREDIENT_INFO_MODAL_CLOSE\n    })\n  };\n\n  return (\n    <>\n      {isOpen && (\n        <Modal onClose={onClose} info={localize.IngredientsDetails}>\n          <IngredientDetails/>\n        </Modal>\n      )}\n      <div className={style.ingredient} onClick={onOpen} ref={dragRef}>\n        <img src={data.image}/>\n        <div className={style.ingredients_icon_box}>\n          <span className=\"text_type_digits-default\">{data.price}</span>\n          <CurrencyIcon type=\"primary\"/>\n        </div>\n        <div className={style.ingredients_name_box}>\n          <span>{data.name}</span>\n          {numberOfItems && (\n            <Counter \n              count={numberOfItems} \n              size=\"default\" \n              extraClass={style.ingredients_number}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Card","import React, { useState, useMemo, useRef } from \"react\";\nimport { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport style from \"./style.module.css\";\nimport Card from \"../BurgerCardComponent/BurgerCard\";\nimport localize from \"../../utils/localize\";\nimport { Ingredients } from \"../../utils/enum\";\nimport { Ingredient } from \"../../utils/interfaces\";\nimport { useSelector } from \"../../utils/helpers\";\n\nconst BurgerIngredients = () => {\n  const data = useSelector(store => store.burgerIngredients);\n\n  const { items, bun }  = useSelector(store => store.burgerConstructor);\n\n  const [activeTab, setActiveTab] = useState(Ingredients.bun);\n\n  const bunTab = useRef<HTMLDivElement>(null);\n\n  const sauceTab = useRef<HTMLDivElement>(null);\n\n  const mainTab = useRef<HTMLDivElement>(null);\n\n  const allBuns: Ingredient[] = useMemo(() => {\n    return data.data.filter((item: Ingredient) => item.type === Ingredients.bun);\n  }, [data]);\n\n  const sauces: Ingredient[] = useMemo(() => {\n    return data.data.filter((item: Ingredient) => item.type === Ingredients.sauce);\n  }, [data]);\n  \n  const mains: Ingredient[] = useMemo(() => {\n    return data.data.filter((item: Ingredient) => item.type === Ingredients.main);\n  }, [data]);  \n\n  const scrollOnBunTabClick = () => {\n    bunTab.current?.scrollIntoView({ behavior: \"smooth\" });\n  }\n\n  const scrollOnSauceTabClick = () => {\n    sauceTab.current?.scrollIntoView({ behavior: \"smooth\" });\n  }\n\n  const scrollOnMainTabClick = () => {\n    mainTab.current?.scrollIntoView({ behavior: \"smooth\" });\n  }\n\n  const onScroll = (event: any) => {\n    if (event.target?.scrollTop <= 270) {\n      setActiveTab(Ingredients.bun);\n    }\n    if (event.target.scrollTop > 270 && event.target.scrollTop <= 790) {\n      setActiveTab(Ingredients.sauce);\n    }\n    if (event.target.scrollTop > 790){\n      setActiveTab(Ingredients.main);\n    }\n  }\n\n  const counterIngredients = useMemo(() => {\n    const count: any = {};\n      items.map((item) => {\n        if (!(item._id in count)) {\n          count[item._id] = 0;\n        }\n        count[item._id] = count[item._id] + 1;\n      })\n\n    return count;\n  }, [items]);\n\n  const counterBuns = useMemo(() => {\n    const count: any = {};\n    if(bun) {\n      count[bun._id] = 2;\n    }\n    return count;\n  }, [bun]);\n\n  return (\n    <section className={style.ingredients_container}>\n      <div className={style.titles}>\n        <h1 className=\"text text_type_main-large\">{localize.CreateBurger}</h1>\n      </div>\n      <div className={style.tabs_container}>\n        <Tab \n          value={Ingredients.bun} \n          active={activeTab === Ingredients.bun} \n          onClick={() => { \n            setActiveTab(Ingredients.bun);\n            scrollOnBunTabClick();\n          }}\n        >\n          {localize.Buns}\n        </Tab>\n        <Tab \n          value={Ingredients.sauce} \n          active={activeTab === Ingredients.sauce}\n          onClick={() => { \n            setActiveTab(Ingredients.sauce);\n            scrollOnSauceTabClick();\n          }}\n        >\n          {localize.Sauces}\n        </Tab>\n        <Tab \n          value={Ingredients.main}\n          active={activeTab === Ingredients.main} \n          onClick={() => { \n            setActiveTab(Ingredients.main);\n            scrollOnMainTabClick();\n          }}\n        >\n          {localize.Ingredients}\n        </Tab>\n      </div>\n      <div className={style.ingredients_scroll} onScroll={onScroll}>\n        <div className={style.titles} ref={bunTab}>\n          <h1 className=\"text text_type_main-medium\">{localize.Buns}</h1>\n        </div>\n        <div className={style.ingredients_box}>\n          {allBuns.map(bun => (\n            <Card key={bun._id} data={bun} numberOfItems={counterBuns[bun._id]}/>\n          ))}\n        </div>\n        <div className={style.titles} ref={sauceTab}>\n          <h1 className=\"text text_type_main-medium\">{localize.Sauces}</h1>\n        </div>\n        <div className={style.ingredients_box}>\n          {sauces.map(sauce => (\n            <Card key={sauce._id} data={sauce} numberOfItems={counterIngredients[sauce._id]}/>\n          ))}\n        </div>\n        <div className={style.titles} ref={mainTab}>\n          <h1 className=\"text text_type_main-medium\">{localize.Ingredients}</h1>\n        </div>\n        <div className={style.ingredients_box}>\n          {mains.map(main => (\n            <Card key={main._id} data={main} numberOfItems={counterIngredients[main._id]}/>\n          ))}\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default BurgerIngredients","import React from 'react';\n\nimport style from './style.module.css';\nimport BurgerConstructor from '../../components/BurgerConstructorComponent/BurgerConstructor';\nimport BurgerIngredients from '../../components/BurgerIngredientsComponent/BurgerIngredients';\n\nconst MainPage = () => {\n  return (\n    <main className={style.main}>\n      <div className={style.body}>\n        <BurgerIngredients/>\n        <BurgerConstructor/>\n      </div>\n    </main>\n  )\n}\n\nexport default MainPage;","import React from 'react';\n\nimport commonStyle from \"../../utils/commonPageStyles.module.css\";\nimport localize from \"../../utils/localize\";\n\nconst OthersPage = () => {\n  return (\n    <div className={commonStyle.pages_form_container}>\n      <p className={`${commonStyle.pages_container_inner} text text_type_main-medium`}>\n        {localize.PageNotFound}\n      </p>\n    </div>\n  );\n}\n\nexport default OthersPage;","import React, { FormEvent, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { \n  EmailInput, \n  PasswordInput, \n  Button, \n  Input \n} from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport commonStyle from \"../../../utils/commonPageStyles.module.css\";\nimport localize from '../../../utils/localize';\nimport { LOGIN_ROOT } from '../../../utils/routes';\nimport { patchUserDataAction } from '../../../services/UserData/actions';\nimport { useDispatch, useSelector } from '../../../utils/helpers';\n\nconst ProfileEditPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { user } = useSelector(store => store.userReducer);\n\n  const [ name, setName ] = useState('');\n  const [ password, setPassword ] = useState('');\n  const [ email, setEmail ] = useState('');\n\n  useEffect(() => {\n    if(!localStorage.getItem('refreshToken')) {\n      navigate(LOGIN_ROOT, { replace: true });\n    }\n  });\n\n  useEffect(() => {\n    if(user) {\n      setName(user.name);\n      setEmail(user.email);\n    }\n  }, [user]);\n\n  const canselForm = () => {\n    setName(user.name);\n    setPassword('');\n    setEmail(user.email);\n  };\n\n  const submitForm = (e: FormEvent) => {\n    const form = {\n      name: name,\n      email: email,\n      password: password\n    }\n    e.preventDefault();\n    dispatch(patchUserDataAction(form));\n    alert(localize.SuccessDataSave);\n  };\n\n  return (\n    <form className={commonStyle.pages_form_container_proile_edit} onSubmit={submitForm}>\n      <Input \n        extraClass={commonStyle.pages_form_p_email_password}\n        placeholder={localize.Name}\n        name=\"name\" \n        icon=\"EditIcon\"\n        value={name} \n        onChange={(el) => {\n          setName(el.target.value)\n        }}\n      />\n      <EmailInput \n        extraClass={commonStyle.pages_form_p_email_password}  \n        name=\"email\"\n        isIcon\n        value={email} \n        onChange={(el) => {\n          setEmail(el.target.value)\n        }}\n      />\n      <PasswordInput \n        extraClass={commonStyle.pages_form_p_email_password} \n        name=\"password\" \n        icon=\"EditIcon\"\n        value={password} \n        onChange={(el) => {\n          setPassword(el.target.value)\n        }}\n      />\n      <Button \n        type=\"primary\" \n        extraClass={`${commonStyle.pages_form_button} ${commonStyle.pages_form_button_save}`}\n        htmlType=\"submit\"\n        onClick={submitForm}\n      >\n        {localize.Save}\n      </Button>\n      <Button \n        type=\"primary\" \n        extraClass={commonStyle.pages_form_button}\n        htmlType=\"button\"\n        onClick={canselForm}\n      >\n        {localize.Canсel}\n      </Button>\n    </form>\n  );\n}\n\nexport default ProfileEditPage;","import React from 'react';\nimport { Outlet } from 'react-router';\nimport { NavLink } from 'react-router-dom';\n\nimport { \n  LOGOUT_ROOT, \n  PROFILE_ORDERS_ROOT \n} from '../../../utils/routes';\nimport commonStyle from \"../../../utils/commonPageStyles.module.css\";\nimport localize from '../../../utils/localize';\n\nconst ProfileMainPage = () => {\n  return (\n    <main className={commonStyle.pages_form_container_proile}>\n      <div className={commonStyle.pages_form_container_profile_inner}>\n        <nav className={commonStyle.pages_form_container_profile_tabs}>\n          <ul className={commonStyle.pages_form_container_profile_tabs_ul}>\n            <li>\n              <NavLink to=\"\" end>\n                {({ isActive }) => (\n                  <span className={`text text_type_main-medium ${isActive ? \"text_color_primary\" : \"text_color_inactive\"}`}>\n                    {localize.Profile}\n                  </span>\n                )}\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to={PROFILE_ORDERS_ROOT}>\n                {({ isActive }) => (\n                  <span className={`text text_type_main-medium ${isActive ? \"text_color_primary\" : \"text_color_inactive\"}`}>\n                    {localize.OrdersHistory}\n                  </span>\n                )}\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to={LOGOUT_ROOT}>\n                {({ isActive }) => (\n                  <span className={`text text_type_main-medium ${isActive ? \"text_color_primary\" : \"text_color_inactive\"}`}>\n                    {localize.Exit}\n                  </span>\n                )}\n              </NavLink>\n            </li>\n          </ul>\n          <p className={`${commonStyle.pages_form_container_profile_tabs_text} text text_type_main-default`}>\n            {localize.ChangePersonalDataInfo}\n          </p>\n        </nav>\n        <Outlet/>\n      </div>\n    </main>\n  );\n}\n\nexport default ProfileMainPage;","import React, { FormEvent, useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { \n  Input, \n  EmailInput, \n  PasswordInput, \n  Button \n} from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport { LOGIN_ROOT, PROFILE_ROOT } from '../../utils/routes';\nimport commonStyle from \"../../utils/commonPageStyles.module.css\";\nimport localize from '../../utils/localize';\nimport { CLEAR_REGISTRATION, registrationAction } from '../../services/Registration/actions';\nimport { CLEAR_USER_DATA, getUserDataAction } from '../../services/UserData/actions';\nimport { CLEAR_AUTH } from '../../services/Authorization/actions';\nimport { useDispatch, useSelector } from '../../utils/helpers';\n\nconst RegistrationPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [ name, setName ] = useState('');\n  const [ password, setPassword ] = useState('');\n  const [ email, setEmail ] = useState('');\n\n  const { user } = useSelector(store => store.userReducer);\n\n  const { successRegistration, errorRegistration } = useSelector(store => store.registReducer);\n\n  useEffect(() => {\n    dispatch(getUserDataAction());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if(!!user?.name && user.name !== '') {\n      dispatch({\n        type: CLEAR_USER_DATA\n      })\n      dispatch({\n        type: CLEAR_AUTH\n      })\n      navigate(PROFILE_ROOT, { replace: true });\n    }\n  }, [\n    user?.name, \n    navigate, \n    dispatch\n  ]);\n\n  useEffect(() => {\n    if(successRegistration) {\n      dispatch({\n        type: CLEAR_REGISTRATION\n      });\n      navigate(LOGIN_ROOT, { replace: true });\n    }\n    if(errorRegistration) {\n      alert(localize.RegistrationError);\n    }\n  }, [\n    successRegistration, \n    errorRegistration,\n    dispatch\n  ]);\n\n  const applyForm = (e: FormEvent) => {\n    const form = {\n      name: name,\n      email: email,\n      password: password\n    }\n    e.preventDefault();\n    dispatch(registrationAction(form));\n  };\n\n  return (\n    <main className={commonStyle.pages_form_container}>\n      <form className={commonStyle.pages_container_inner} onSubmit={applyForm}>\n        <h1 className={`${commonStyle.pages_form_h1} text text_type_main-medium`}>\n          {localize.Registration}\n        </h1>\n        <Input \n          placeholder={localize.Name} \n          extraClass={commonStyle.pages_form_p_email_password}\n          name=\"name\" \n          value={name} \n          onChange={(el) => { \n            setName(el.target.value);\n          }} \n        />\n        <EmailInput \n          extraClass={commonStyle.pages_form_p_email_password}  \n          name=\"email\" \n          value={email} \n          onChange={(el) => {\n            setEmail(el.target.value)\n          }}\n        />\n        <PasswordInput \n          extraClass={commonStyle.pages_form_p_email_password}\n          name=\"password\" \n          value={password} \n          onChange={(el) => {\n            setPassword(el.target.value)\n          }}\n        />\n        <Button \n          type=\"primary\" \n          extraClass={commonStyle.pages_form_button}\n          htmlType=\"submit\"\n        >\n          {localize.MakeRegistration}\n        </Button>\n        <p className={`${commonStyle.pages_form_h1} \"text text_type_main-default text_color_inactive`}>\n          {localize.HaveRegistration} \n          <Link \n            className=\"page-link\" to={LOGIN_ROOT}\n          >\n            {localize.ToLogin}\n          </Link>\n        </p>\n      </form>\n    </main>\n  );\n}\n\nexport default RegistrationPage;","import React, { FormEvent, useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { \n  Input, \n  PasswordInput, \n  Button \n} from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport commonStyle from \"../../utils/commonPageStyles.module.css\";\nimport localize from '../../utils/localize';\nimport { CLEAR_RESET_PASSWORD, resetPasswordAction } from '../../services/PasswordOperations/actions';\nimport { LOGIN_ROOT, PROFILE_ROOT } from '../../utils/routes';\nimport { CLEAR_USER_DATA, getUserDataAction } from '../../services/UserData/actions';\nimport { CLEAR_AUTH } from '../../services/Authorization/actions';\nimport { useDispatch, useSelector } from '../../utils/helpers';\n\nconst ResetPasswordPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [ password, setPassword ] = useState('');\n  const [ code, setCode ] = useState('');\n\n  const { user } = useSelector(store => store.userReducer);\n\n  const { successPassword, errorPassword } = useSelector(store => store.passwordReducer);\n\n  useEffect(() => {\n    dispatch(getUserDataAction());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if(!!user?.name && user.name !== '') {\n      dispatch({\n        type: CLEAR_USER_DATA\n      })\n      dispatch({\n        type: CLEAR_AUTH\n      })\n      navigate(PROFILE_ROOT, { replace: true });\n    }\n  }, [\n    user?.name, \n    navigate, \n    dispatch\n  ]);\n\n  useEffect(() => {\n    if(successPassword) {\n      dispatch({\n        type: CLEAR_RESET_PASSWORD\n      });\n      navigate(LOGIN_ROOT, { replace: true });\n    }\n    if(errorPassword) {\n      alert(localize.ResetPasswordError);\n    }\n  }, [\n    successPassword, \n    errorPassword,\n    dispatch\n  ]);\n\n  const sendCode = (e: FormEvent) => {\n    const form = {\n      password: password,\n      token: code\n    }\n    e.preventDefault();\n    dispatch(resetPasswordAction(form));\n  };\n\n  return (\n    <main className={commonStyle.pages_form_container}>\n      <form className={commonStyle.pages_container_inner} onSubmit={sendCode}>\n        <h1 className={`${commonStyle.pages_form_h1} text text_type_main-medium`}>\n          {localize.ResetPasswordTitle}\n        </h1>\n        <PasswordInput \n          extraClass={commonStyle.pages_form_p_email_password}\n          placeholder={localize.InputNewPassword}\n          name=\"password\" \n          value={password} \n          onChange={(el) => {\n            setPassword(el.target.value)\n          }}\n        />\n        <Input \n          extraClass={commonStyle.pages_form_p_email_password}\n          placeholder={localize.InputEmailCode} \n          name=\"code\" \n          value={code} \n          onChange={(el) => { \n            setCode(el.target.value);\n          }} \n        />\n        <Button \n          type=\"primary\" \n          extraClass={commonStyle.pages_form_button}\n          htmlType=\"submit\"\n        >\n          {localize.Save}\n        </Button>\n        <p className={`${commonStyle.pages_form_h1} \"text text_type_main-default text_color_inactive`}>\n          {localize.DontForgotPassword} \n          <Link \n            className=\"page-link\" to={LOGIN_ROOT}\n          >\n            {localize.ToLogin}\n          </Link>\n        </p>\n      </form>\n    </main>\n  );\n}\n\nexport default ResetPasswordPage;","import React, { FC, ReactElement, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport { BASE_ROOT, LOGIN_ROOT } from '../../utils/routes';\nimport { getUserDataAction } from '../../services/UserData/actions';\nimport { CLEAR_AUTH, CLEAR_TOKEN, tokenAction } from '../../services/Authorization/actions';\nimport localize from '../../utils/localize';\nimport { TRootState } from '../../utils/types';\nimport { useDispatch, useSelector } from '../../utils/helpers';\n\ninterface IProps {\n  element: ReactElement\n}\n\nconst ProtectedRoutes: FC<IProps> = ({element}) => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const from = location.pathname || BASE_ROOT;\n\n  const { user } = useSelector(store => store.userReducer);\n\n  const { errorUserData } = useSelector(store => store.userReducer);\n\n  const { isLogged } = useSelector(store => store.authReducer);\n\n  const { \n    errorAuthorization, \n    successAuthorization,\n    errorToken, \n    successToken \n  } = useSelector(store => store.authReducer);\n\n  useEffect(() => {\n    dispatch(getUserDataAction());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if(errorUserData) {\n      if (errorUserData === localize.JWTError) {\n        dispatch(tokenAction());\n      } else {\n        navigate(LOGIN_ROOT, { replace: true, state: { from } });\n      }\n    }\n  }, [\n    dispatch, \n    errorUserData, \n    navigate, \n  ]);\n\n  useEffect(() => {\n    if(errorToken) {\n      dispatch({\n        type: CLEAR_TOKEN\n      });\n      navigate(LOGIN_ROOT, { replace: true, state: { from } });\n    } \n    if(successToken) {\n      dispatch({\n        type: CLEAR_TOKEN\n      });\n    }\n  }, [\n    dispatch, \n    errorToken, \n    successToken, \n    navigate, \n  ]);\n\n  useEffect(() => {\n    if(successAuthorization) {\n      dispatch({\n        type: CLEAR_AUTH\n      });\n      dispatch(getUserDataAction());\n    } \n    if(errorAuthorization) {\n      dispatch({\n        type: CLEAR_AUTH\n      });\n      navigate(LOGIN_ROOT, { replace: true, state: { from } });\n    }\n  }, [\n    dispatch, \n    errorAuthorization,\n    successAuthorization,  \n    navigate, \n  ]);\n\n  return ((!!user?.name && user.name !== '') || isLogged) ? element : <div>{localize.Loading}</div>;\n}\n\nexport default ProtectedRoutes;","import React, { useMemo, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { \n  CurrencyIcon, \n  FormattedDate \n} from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport { Ingredient } from '../../utils/interfaces';\nimport { getOrderInfoAction } from '../../services/OrderInfo/actions';\nimport { OrderStatus } from '../../utils/enum';\nimport localize from '../../utils/localize';\nimport style from './style.module.css';\nimport { useDispatch, useSelector } from '../../utils/helpers';\nimport { TIngredientWithCount } from '../../utils/types';\n\nconst OrderInfo = () => {\n  const dispatch = useDispatch();\n  const { id } = useParams();\n\n  useEffect(() => {\n    dispatch(getOrderInfoAction(id));\n  }, [dispatch, id]);\n\n  const { order } = useSelector(store => store.orderInfoReducer);\n  const { data } = useSelector(store => store.burgerIngredients);\n\n  const items: Array<TIngredientWithCount> = useMemo(() => \n    {\n      if(order?.ingredients) {\n        let group: any = {};\n        order!.ingredients.map((item) => {\n          let ingredient = data.find((ingredient: Ingredient) => ingredient._id === item);\n          if (ingredient) {\n            if (!group[item]) {\n              group[item] = {\n                ...ingredient, \n                numberOfItems: 0\n              };\n            }\n            group[item].numberOfItems = group[item].numberOfItems + 1;\n          }\n        })\n        let result = [] as any;\n        order!.ingredients.map((item) => {\n          if (group[item]) {\n            result.push(group[item]);\n            delete group[item];\n          }\n        })\n        return result;\n      }\n      \n    }, \n    [data, order]\n  );\n\n  const sum = useMemo(() => \n    {\n      if(items) {\n        return items!.reduce(\n          (currentSum: number, item) => \n          item!.price * item!.numberOfItems + currentSum, 0)\n      }\n    }, \n    [items]\n  );\n\n  const status = useMemo(() => \n    {\n      if(order?.status) {\n        switch (order!.status) {\n          case OrderStatus.done: \n            return localize.Done;\n          case OrderStatus.created: \n            return localize.Created;\n          case OrderStatus.pending: \n            return localize.Pending;\n          default:\n            return order!.status;\n        }\n      }\n    }, \n    [order]\n  );\n\n  return (\n    <main className={style.order_info_container}>\n      <>\n        <p className={`text text_type_digits-default ${style.order_info_number}`}>\n          #{order?.number}\n        </p>\n        <p className={`text text_type_main-medium ${style.order_info_name}`}>\n          {order?.name}\n        </p>\n        <p className={`text text_type_main-default ${style.order_info_status}`}>\n          {status}\n        </p>\n        <p className={`text text_type_main-medium ${style.order_info_compound}`}>\n          {localize.Compound}\n        </p>\n        <section className={style.order_info_body}>\n          {items && items.map((item, index: number) => {\n            return (\n              <li key={index} className={style.order_info_body_li}>\n                <div className={style.order_info_body_row}>\n                  <div className={style.order_info_body_image_name}>\n                    <div className={style.order_info_body_image}>\n                      <img src={item!.image_mobile} alt={item!.name} />\n                    </div>\n                    <p className={`text text_type_main-default ${style.order_info_body_name}`}>\n                      {item.name}\n                    </p>\n                  </div>\n                  <div className={style.order_info_body_item_price}>\n                    <span className={`text text_type_digits-default ${style.order_info_body_item}`}>\n                      {`${item.numberOfItems} x ${item.price}`}\n                    </span>\n                    <CurrencyIcon \n                      type=\"primary\"\n                    />\n                  </div>\n                </div>\n              </li>\n            )\n          })}\n        </section>\n        <section className={`text text_type_main-default ${style.order_info_footer}`}>\n          <p className={`text text_type_main-default text_color_inactive`}>\n            <FormattedDate \n              date={new Date(order?.createdAt ? order?.createdAt : '')} \n              className={`text text_type_main-default text_color_inactive`}\n            />\n          </p>\n          <div className={style.order_info_body_item_price}>\n            <span className={`text text_type_digits-default ${style.order_info_body_item}`}>\n              {sum}\n            </span>\n            <CurrencyIcon \n              type=\"primary\" \n            />\n          </div>\n        </section>\n      </>\n    </main>\n  );\n}\n\nexport default OrderInfo;","import React, { FC, useMemo } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { \n  CurrencyIcon, \n  FormattedDate \n} from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport { Ingredient } from \"../../utils/interfaces\";\nimport { TOrder } from \"../../utils/types\";\nimport { OrderStatus } from \"../../utils/enum\";\nimport { MAX_ITEMS_VALUE } from \"../../utils/const\";\nimport localize from \"../../utils/localize\";\nimport style from './style.module.css';\nimport { useSelector } from \"../../utils/helpers\";\n\ninterface IProps {\n  order: TOrder,\n  personal?: boolean\n};\n\nconst OrderItem: FC<IProps> = ({order, personal}) => {\n  const location = useLocation(); \n  \n  const { data } = useSelector(store => store.burgerIngredients);\n\n  const items = useMemo(() => \n    order.ingredients.map((id: string) => \n      {\n        return data.find((item: Ingredient) => item._id === id)\n      }\n    ), \n    [data.data, order]\n  );\n\n  const visibleItems = useMemo(() => \n    items.slice(undefined, MAX_ITEMS_VALUE), \n    [items]\n  );\n\n  const sum = useMemo(() => \n    items.reduce( \n      (sum: number, item: Ingredient | undefined) => item!.price + sum, 0\n    ), \n    [items]\n  );\n\n  const status = useMemo(() => \n    {\n      if(order?.status) {\n        switch (order!.status) {\n          case OrderStatus.done: \n            return localize.Done;\n          case OrderStatus.created: \n            return localize.Created;\n          case OrderStatus.pending: \n            return localize.Pending;\n          default:\n            return order!.status;\n        }\n      }\n    }, \n    [order]\n  );\n\n  const statusColor = useMemo(() => \n    order.status === OrderStatus.done \n      ? style.order_item_status_done : style.order_item_status_default, \n      [order]\n  );\n\n\n  return (\n    <Link \n      to={`${location.pathname}/${order.number}`}\n      state={{ location: location }}\n      className={style.order_item_link}\n    > \n      <div className='m-6'>\n        <div className={style.order_item_header}>\n          <p className='text text_type_digits-default'>\n            #{order.number}\n          </p>\n          <FormattedDate \n            date={new Date(order.createdAt)} \n            className='text text_type_main-default text_color_inactive' \n          />\n        </div>\n      </div>\n      <p className={`${style.order_item_title} text text_type_main-medium`}>\n        {order.name}\n      </p>\n      {personal && status &&\n        <p className={`${style.order_item_status} ${statusColor} text text_type_main-default`}>\n          {status}\n        </p>\n      }\n      <div className={style.order_item_body}>\n        <div className={style.order_item_body_image}>\n          {visibleItems && visibleItems.map((item: Ingredient | undefined, i: number) => {\n            return (\n              <li\n                key={i}\n                style={{ marginRight: -20 }}\n                className={style.order_item_body_image_li}>\n                <img\n                  style={{ \n                    opacity: MAX_ITEMS_VALUE === (i + 1) && order.ingredients.length - MAX_ITEMS_VALUE > 0 ? \n                    '0.4' : '1' \n                  }}\n                  src={item!.image_mobile}\n                  alt={item!.name}\n                  className={style.order_item_body_image_main} \n                />\n                {order.ingredients.length - MAX_ITEMS_VALUE > 0 && i === (MAX_ITEMS_VALUE - 1) &&\n                  <span className={`${style.order_item_body_invissible_count} text text_type_main-default`}>\n                    {`+${order.ingredients.length - MAX_ITEMS_VALUE}`}\n                  </span>\n                }\n              </li>\n            )\n          })}\n        </div>\n        <div className={style.order_item_price}>\n          <span className={`text text_type_digits-default`}>\n            {sum}\n          </span>\n          <CurrencyIcon \n            type=\"primary\" \n          />\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nexport default OrderItem;","import React, { FC } from 'react';\n\nimport OrdersItem from '../OrderItemComponent/OrderItem';\nimport { TOrdersList } from '../../utils/types';\nimport style from './style.module.css';\n\ninterface IProps {\n  data: TOrdersList\n  personal: boolean;\n};\n\nconst OrdersList: FC<IProps> = ({ data, personal }) => {\n  return (\n    <div className={personal ? `${style.order_list_main_personal} ${style.order_list_main}` : style.order_list_main}>\n      {data.orders && data.orders.map(\n        (\n          elem: any, \n          index: number\n        ) =>\n        <OrdersItem \n          key={index} \n          order={elem} \n          personal={personal} \n        />\n      )}\n    </div>\n  );\n}\n\nexport default OrdersList;","import React, { FC, useMemo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { \n  MAX_ORDERS_VALUE_END, \n  MAX_ORDERS_VALUE_START \n} from '../../utils/const';\nimport { OrderStatus } from '../../utils/enum';\nimport localize from '../../utils/localize';\nimport { TOrder, TOrdersList } from '../../utils/types';\nimport style from './style.module.css';\n\ninterface IProps {\n  data: TOrdersList\n};\n\nconst OrdersStatus: FC<IProps> = ({data}) => {\n  const location = useLocation();\n\n  const completedOrders = useMemo(() => \n    data.orders.filter(\n      (order: TOrder) => order.status === OrderStatus.done).map(\n        (order: TOrder) => order.number),\n    [data.orders]\n  );\n\n  const inProgressOrders = useMemo(() => \n    data.orders.filter(\n      (order: TOrder) => order.status === OrderStatus.pending).map(\n        (order: TOrder) => order.number),\n    [data.orders]\n  );\n\n  const completedOrdersStart = useMemo(() => \n    completedOrders.slice(undefined, MAX_ORDERS_VALUE_START),\n    [completedOrders]\n  );\n\n  const completedOrdersEnd = useMemo(() => \n    completedOrders.slice(MAX_ORDERS_VALUE_START, MAX_ORDERS_VALUE_END),\n    [completedOrders]\n  );\n\n  const inProgressOrdersStart = useMemo(() => \n    inProgressOrders.slice(undefined, MAX_ORDERS_VALUE_START),\n    [inProgressOrders]\n  );\n\n  const inProgressOrdersEnd = useMemo(() => \n    inProgressOrders.slice(MAX_ORDERS_VALUE_START, MAX_ORDERS_VALUE_END),\n    [inProgressOrders]\n  );\n\n  return (\n    <>\n      <div className={style.orders_board}>\n        <section>\n          <p className=\"text text_type_main-medium\">\n            {localize.Ready}\n          </p>\n          <div className={`${style.orders_board_number} ${style.orders_board_ready_color}`}>\n            <ul className={style.orders_board_ul}>\n              {completedOrdersStart.map((item: number, index: number) =>\n                <li \n                  key={index} \n                  className={style.orders_board_li}\n                >\n                  <Link \n                    to={`${item}`} \n                    state={{ \n                      location: location \n                    }} \n                    className={style.orders_board_ready_link}\n                  >\n                    <span className=\"text text_type_digits-default\">\n                      {item}\n                    </span>\n                  </Link>\n                </li>\n              )}\n            </ul>\n            <ul className={style.orders_board_ul}>\n              {completedOrdersEnd.map((item: any, index: any) =>\n                <li \n                  key={index} \n                  className={style.orders_board_li}\n                >\n                  <Link \n                    to={`${item}`} \n                    state={{ \n                      location: location \n                    }} \n                    className={style.orders_board_ready_link}\n                  >\n                    <span className=\"text text_type_digits-default\">\n                      {item}\n                    </span>\n                  </Link>\n                </li>\n              )}\n            </ul>\n          </div>\n        </section>\n        <section>\n          <p className=\"text text_type_main-medium\">\n            {localize.IsProgress}\n          </p>\n          <div className={style.orders_board_number}>\n            <ul className={style.orders_board_ul}>\n              {inProgressOrdersStart.map((item: number, index: number) =>\n                <li \n                  key={index} \n                  className={style.orders_board_li}\n                >\n                  <Link \n                    to={`${item}`} \n                    state={{ location: location }} \n                    className={style.orders_board_in_progress}\n                  >\n                    <span className=\"text text_type_digits-default\">\n                      {item}\n                    </span>\n                  </Link>\n                </li>\n              )}\n            </ul>\n            <ul className={style.orders_board_ul}>\n              {inProgressOrdersEnd.map((item: number, index: number) =>\n                <li \n                  key={index} \n                  className={style.orders_board_li}\n                >\n                  <Link \n                    to={`${item}`} \n                    state={{ location: location }} \n                    className={style.orders_board_in_progress}\n                  >\n                    <span className=\"text text_type_digits-default\">\n                      {item}\n                    </span>\n                  </Link>\n                </li>\n              )}\n            </ul>\n          </div>\n        </section>\n      </div>\n      <section>\n        <p className=\"text text_type_main-medium\">\n          {localize.IsDoneForAllTime}\n        </p>\n        <p className={`${style.orders_board_text} text text_type_digits-large`}>\n          {data.total}\n        </p>\n      </section>\n      <section>\n        <p className=\"text text_type_main-medium\">\n          {localize.IsDoneToday}\n        </p>\n        <p className={`${style.orders_board_text} text text_type_digits-large`}>\n          {data.totalToday}\n        </p>\n      </section>\n    </>\n  );\n}\n\nexport default OrdersStatus;","import React, { useEffect } from 'react';\n\nimport { \n  COMMON_ORDERS_END, \n  COMMON_ORDERS_START \n} from '../../services/CommonOrders/actions';\nimport { WS_BASE_API_URL } from '../../utils/const';\nimport commonStyle from \"../../utils/commonPageStyles.module.css\";\nimport OrderList from '../../components/OrderListComponent/OrderList';\nimport OrderBoard from '../../components/OrderBoardComponent/OrderBoard';\nimport localize from '../../utils/localize';\nimport { useDispatch, useSelector } from '../../utils/helpers';\n\nconst FeedPage = () => {\n  const dispatch = useDispatch();\n  \n  const { isConnected, error, message } = useSelector(store => store.commonOrderReducer);\n\n  useEffect(() => {\n    dispatch({ \n      type: COMMON_ORDERS_START, \n      url: `${WS_BASE_API_URL}/orders/all` \n    });\n    return () => {\n      dispatch({ \n        type: COMMON_ORDERS_END \n      });\n    }\n  }, [dispatch]);\n\n  return (\n    <div className={commonStyle.pages_feed}>\n      {!isConnected && localize.Loading}\n      {!!error && \n        <p className={`${commonStyle.pages_orders_container_p} error-text text text_type_main-default`}>\n          {error}\n        </p>\n      }\n      {isConnected && !!message && (\n        <main className={commonStyle.pages_content}>\n          <section className={commonStyle.pages_left_block}>\n            <p className={`${commonStyle.pages_feed_top_margin} text text_type_main-large`}>\n              {localize.Feed}\n            </p>\n            <OrderList \n              data={message}\n              personal={false} \n            />\n          </section>\n          <section className={commonStyle.pages_right_block}>\n            <OrderBoard \n              data={message} \n            />\n          </section>\n        </main>\n      )}\n    </div>\n  );\n}\n\nexport default FeedPage;","import React from 'react';\n\nimport OrderInfo from '../../components/OrderInfoComponent/OrderInfo';\nimport commonStyle from \"../../utils/commonPageStyles.module.css\";\n\nconst OrderInfoPage = () => {\n  return (\n    <main className={commonStyle.pages_orders_info_main}>\n      <OrderInfo/>\n    </main>\n  );\n}\n\nexport default OrderInfoPage;","import React, { useEffect, useMemo } from 'react';\n\nimport { \n  PERSONAL_ORDERS_START, \n  PERSONAL_ORDERS_END \n} from '../../../services/PersonalOrders/actions';\nimport { WS_BASE_API_URL } from '../../../utils/const';\nimport { TOrdersList, TRootState } from '../../../utils/types';\nimport commonStyle from \"../../../utils/commonPageStyles.module.css\";\nimport OrderList from '../../../components/OrderListComponent/OrderList';\nimport localize from '../../../utils/localize';\nimport { useDispatch, useSelector } from '../../../utils/helpers';\n\nconst ProfileOrderPage = () => {\n  const dispatch = useDispatch();\n  \n  const { isConnected, error, message } = useSelector(store => store.personalOrderReducer);\n\n  const messages: TOrdersList | undefined = useMemo(() => {\n    if (message) {\n      let orders = [...message.orders];\n      return { \n        ...message, \n        orders: orders.sort((one, other) => other.number - one.number) \n      };\n    }\n  }, [message]);\n\n  useEffect(() => {\n    dispatch({ \n      type: PERSONAL_ORDERS_START, \n      url: `${WS_BASE_API_URL}/orders`, \n      addToken: true \n    });\n    return () => {\n      dispatch({ \n        type: PERSONAL_ORDERS_END \n      });\n    }\n  }, [dispatch]);\n\n  return (\n    <div className={commonStyle.pages_orders_container}>\n      {!isConnected && localize.Loading}\n      {!!error && \n        <p className={`${commonStyle.pages_orders_container_p} error-text text text_type_main-default`}>\n          {error}\n        </p>\n      }\n      {isConnected && messages && (\n        <OrderList \n          data={messages!}\n          personal={true} \n        />\n      )}\n    </div>\n  )\n}\n\nexport default ProfileOrderPage","import React from 'react';\nimport { \n  Routes, \n  Route, \n  useLocation, \n  useNavigate \n} from 'react-router-dom';\n\nimport { \n  BASE_PRODUCTION_ROOT,\n  BASE_ROOT, \n  FEED_ROOT, \n  FORGOT_PASSWORD_ROOT, \n  INGREDIENTS_ROOT, \n  LOGIN_ROOT,\n  LOGOUT_ROOT,\n  OTHERS_ROOT,\n  PROFILE_ORDERS_ROOT,\n  PROFILE_ROOT,\n  REGISTRATON_FORM_ROOT,\n  RESET_PASSWORD_ROOT,\n} from '../../utils/routes';\nimport ForgotPasswordPage from '../../pages/PasswordForgotPage/PasswordForgotPage';\nimport IngredientPage from '../../pages/IngredientsPage/IngredientsPage';\nimport LoginFormPage from '../../pages/LoginPage/LoginPage';\nimport LogoutPage from '../../pages/LogoutRedirectPage/LogoutRedirectPage';\nimport MainPage from '../../pages/BasePage/BasePage';\nimport OthersPage from '../../pages/NotFoundPage/NotFoundPage';\nimport ProfileEditPage from '../../pages/ProfilePage/ProfileEditPage/ProfileEditPage';\nimport ProfileMainPage from '../../pages/ProfilePage/ProfileMainPage/ProfileMainPage';\nimport RegistrationPage from '../../pages/RegistratePage/RegistratePage';\nimport ResetPasswordPage from '../../pages/PasswordResetPage/PasswordResetPage';\nimport ProtectedRoutes from '../ProtectedRoutesComponent/ProtectedRoutes';\nimport Modal from '../ModalComponent/Modal';\nimport OrderInfo from '../OrderInfoComponent/OrderInfo';\nimport FeedPage from '../../pages/FeedPage/FeedPage';\nimport OrderInfoPage from '../../pages/OrderInfoPage/OrderInfoPage';\nimport ProfileOrderPage from '../../pages/ProfilePage/ProfileOrderPage/ProfileOrderPage';\n\nconst RoutesComponent = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const background = location.state && location.state.background;\n  const stateLocation = location.state && location.state.location;\n\n  const handleCloseModalDetail = () => {\n    navigate(-1);\n  }\n\n  return (\n    <>\n      <Routes location={background || location}>\n        <Route \n          path={BASE_ROOT || BASE_PRODUCTION_ROOT} \n          element={\n            <MainPage/>\n          } \n        />\n        <Route \n          path={LOGIN_ROOT} \n          element={\n            <LoginFormPage/>\n          } \n        />\n        <Route \n          path={REGISTRATON_FORM_ROOT} \n          element={\n            <RegistrationPage/>\n          }\n        />\n        <Route \n          path={FORGOT_PASSWORD_ROOT} \n          element={\n            <ForgotPasswordPage/>\n          } \n        />\n        <Route \n          path={RESET_PASSWORD_ROOT} \n          element={\n            <ResetPasswordPage/>\n          } \n        />\n        <Route \n          path={OTHERS_ROOT} \n          element={\n            <OthersPage/>\n          } \n        />\n        <Route \n          path={PROFILE_ROOT}\n          element={\n            <ProtectedRoutes \n              element={\n                <ProfileMainPage/>\n              }\n            />\n          }\n        >\n          <Route \n            index \n            element={\n              <ProfileEditPage/>\n            } \n          />\n          <Route \n            path={PROFILE_ORDERS_ROOT} \n            element={\n              <ProfileOrderPage/>\n            } \n          >\n            {stateLocation &&\n              <Route \n                path={`${PROFILE_ORDERS_ROOT}/:id`} \n                element={\n                  <Modal \n                    isOrder={true} \n                    onClose={handleCloseModalDetail}\n                  >\n                    <OrderInfo/>\n                  </Modal>\n                } \n              />\n            }\n          </Route>\n        </Route>\n        <Route \n          path={`${INGREDIENTS_ROOT}/:id`} \n          element={\n            <IngredientPage/>\n          } \n        />\n        <Route \n          path={LOGOUT_ROOT} \n          element={\n            <LogoutPage/>\n          } \n        />\n        <Route \n          path={FEED_ROOT} \n          element={\n            <FeedPage/>\n          } \n        >\n          {stateLocation &&\n            <Route \n              path={`${FEED_ROOT}/:id`} \n              element={\n                <Modal \n                  isOrder={true} \n                  onClose={handleCloseModalDetail}\n                >\n                  <OrderInfo/>\n                </Modal>\n              } \n            />\n          }\n        </Route>\n        <Route \n          path={`${FEED_ROOT}/:id`} \n          element={\n            <OrderInfoPage/>\n          } \n        />\n        <Route \n          path={`${PROFILE_ORDERS_ROOT}/:id`} \n          element={\n            <ProtectedRoutes \n              element={\n                <OrderInfoPage/>\n              }\n            />\n          }\n        />\n      </Routes>\n      {stateLocation &&\n        <Routes>\n          <Route \n            path={`${FEED_ROOT}/:id`} \n            element={\n              <Modal \n                isOrder={true} \n                onClose={handleCloseModalDetail}\n              >\n                <OrderInfo/>\n              </Modal>\n            } \n          />\n          <Route \n            path={`${PROFILE_ORDERS_ROOT}/:id`} \n            element={\n              <Modal \n                isOrder={true} \n                onClose={handleCloseModalDetail}\n              >\n                <OrderInfo/>\n              </Modal>\n            } \n          />\n        </Routes>\n      }\n    </>\n  );\n}\n\nexport default RoutesComponent;","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router';\n\nimport { ingredientsData } from '../../services/BurgerIngredients/actions';\nimport { INGREDIENT_INFO_MODAL_CLOSE, INGREDIENT_INFO_MODAL_OPEN } from '../../services/IngredientsDetails/actions';\nimport { useDispatch } from '../../utils/helpers';\nimport Header from '../HeaderComponent/Header';\nimport RoutesComponent from '../RoutesComponent/Routes';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    dispatch(ingredientsData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if(window.location.pathname.split('/')[1] === 'ingredients') {\n      dispatch({\n        type: INGREDIENT_INFO_MODAL_OPEN\n      })\n    } else {\n      dispatch({\n        type: INGREDIENT_INFO_MODAL_CLOSE\n      })\n    }\n  }, [dispatch, location])\n\n  return (\n    <div className=\"index text text_type_main-default\">\n      <Header/>\n      <RoutesComponent/>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { DndProvider } from 'react-dnd';\nimport { BrowserRouter } from 'react-router-dom';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { createRoot } from 'react-dom/client';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport mainStore from './services/mainStore';\nimport App from './components/MainComponent/Main';\n\ncreateRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n      <Provider store={mainStore}>\n        <DndProvider backend={HTML5Backend}>\n          <BrowserRouter>\n            <App />\n          </BrowserRouter>\n        </DndProvider>\n      </Provider>\n    </React.StrictMode>\n)\n\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"style_header__po8XV\",\"block\":\"style_block__3Va7g\",\"block_box\":\"style_block_box__1A0Ml\",\"block_box_logo\":\"style_block_box_logo__1ZdLk\",\"block_item\":\"style_block_item__3O4x1\",\"link\":\"style_link__hz0OJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order_item_link\":\"style_order_item_link__2MWWi\",\"order_item_header\":\"style_order_item_header__1t_Gs\",\"order_item_title\":\"style_order_item_title__1J1fL\",\"order_item_number\":\"style_order_item_number__2RjAl\",\"order_item_status\":\"style_order_item_status__5K9Kr\",\"order_item_status_done\":\"style_order_item_status_done__3JAtt\",\"order_item_status_default\":\"style_order_item_status_default__37tdJ\",\"order_item_body\":\"style_order_item_body__2IBTI\",\"order_item_body_image_li\":\"style_order_item_body_image_li__eyYlc\",\"order_item_body_image_main\":\"style_order_item_body_image_main__vMC4D\",\"order_item_body_image\":\"style_order_item_body_image__2EIj8\",\"order_item_body_invissible_count\":\"style_order_item_body_invissible_count__1Gzrs\",\"order_item_price\":\"style_order_item_price__1sBKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredients_container\":\"style_ingredients_container__262Le\",\"ingredients_box\":\"style_ingredients_box__2ouNA\",\"titles\":\"style_titles__2p_cG\",\"ingredients_scroll\":\"style_ingredients_scroll__2NccZ\",\"tabs_container\":\"style_tabs_container__mRgam\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"style_section__1-pss\",\"burger_constructor\":\"style_burger_constructor__QkW8C\",\"bun\":\"style_bun__eQSDR\",\"send_box\":\"style_send_box__3ShuO\",\"box\":\"style_box__2_WHL\",\"items_scroll\":\"style_items_scroll__1hTcr\",\"no_item\":\"style_no_item__1r14X\",\"no_item_text\":\"style_no_item_text__3WuJa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"style_image__1QRaV\",\"modal_content\":\"style_modal_content__3684j\",\"modal_content_body\":\"style_modal_content_body__2c2lr\",\"modal_content_body_item\":\"style_modal_content_body_item__6mTkz\",\"modal_content_title\":\"style_modal_content_title__Btfot\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal_content\":\"style_modal_content__3cPwl\",\"composition\":\"style_composition__kOXRI\",\"identificator_order\":\"style_identificator_order__1rdIV\",\"identificator_order_text\":\"style_identificator_order_text__22szs\",\"success_icon\":\"style_success_icon__1CGIg\",\"order_prepared\":\"style_order_prepared__JRh8I\",\"order_waiting\":\"style_order_waiting__2GfXt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages_form_container\":\"commonPageStyles_pages_form_container__1sZaU\",\"pages_container_inner\":\"commonPageStyles_pages_container_inner__1nicv\",\"pages_form_container_proile_edit\":\"commonPageStyles_pages_form_container_proile_edit__21LnC\",\"pages_form_container_proile\":\"commonPageStyles_pages_form_container_proile__AyfUL\",\"pages_form_container_profile_inner\":\"commonPageStyles_pages_form_container_profile_inner__-zdUu\",\"pages_form_container_profile_tabs\":\"commonPageStyles_pages_form_container_profile_tabs__JgGe5\",\"pages_form_container_profile_tabs_ul\":\"commonPageStyles_pages_form_container_profile_tabs_ul__1FjKb\",\"pages_form_container_profile_tabs_text\":\"commonPageStyles_pages_form_container_profile_tabs_text__2ta3s\",\"pages_link\":\"commonPageStyles_pages_link__1Z5gB\",\"pages_form_p_email_password\":\"commonPageStyles_pages_form_p_email_password__2K1EI\",\"pages_form_h1\":\"commonPageStyles_pages_form_h1__h6lB1\",\"pages_form_button\":\"commonPageStyles_pages_form_button__3hem1\",\"pages_form_button_save\":\"commonPageStyles_pages_form_button_save__15fez\",\"pages_feed_orders\":\"commonPageStyles_pages_feed_orders__2htPl\",\"pages_feed\":\"commonPageStyles_pages_feed__1xQ8J\",\"pages_content\":\"commonPageStyles_pages_content__26P-4\",\"pages_left_block\":\"commonPageStyles_pages_left_block__2kJI4\",\"pages_right_block\":\"commonPageStyles_pages_right_block__2OJUg\",\"pages_orders_container\":\"commonPageStyles_pages_orders_container__1GgoW\",\"pages_orders_container_p\":\"commonPageStyles_pages_orders_container_p__2TFIw\",\"pages_orders_info_main\":\"commonPageStyles_pages_orders_info_main__1xWXc\",\"pages_feed_top_margin\":\"commonPageStyles_pages_feed_top_margin__1QQfp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal_container\":\"style_modal_container__15W3u\",\"modal_box\":\"style_modal_box__1G4ko\",\"modal_header\":\"style_modal_header__1TsUz\",\"close_btn\":\"style_close_btn__CvZpm\",\"composition\":\"style_composition__3BH5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"style_ingredient__3AvoK\",\"ingredients_icon_box\":\"style_ingredients_icon_box__3oVpY\",\"ingredients_name_box\":\"style_ingredients_name_box__2k0Xc\",\"ingredients_number\":\"style_ingredients_number__DU6li\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order_list_main\":\"style_order_list_main__x97x1\",\"order_list_main_personal\":\"style_order_list_main_personal__2ciob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"style_main__6eyui\",\"body\":\"style_body__21Fyt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"style_overlay__117e9\",\"special_overlay\":\"style_special_overlay__1nyBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_item_container\":\"style_main_item_container__2rlgR\",\"ingredient_item\":\"style_ingredient_item__1dgSm\"};"],"sourceRoot":""}